<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.2.1">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Test Plan" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.tearDown_on_shutdown">true</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Thread Group" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">${_P(user)</stringProp>
        <stringProp name="ThreadGroup.ramp_time">${_P(ramp_up)</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="HTTP Cookie Manager" enabled="true">
          <collectionProp name="CookieManager.cookies"/>
          <boolProp name="CookieManager.clearEachIteration">false</boolProp>
          <boolProp name="CookieManager.controlledByThreadGroup">false</boolProp>
        </CookieManager>
        <hashTree/>
        <CacheManager guiclass="CacheManagerGui" testclass="CacheManager" testname="HTTP Cache Manager" enabled="true">
          <boolProp name="clearEachIteration">false</boolProp>
          <boolProp name="useExpires">true</boolProp>
          <boolProp name="CacheManager.controlledByThread">false</boolProp>
        </CacheManager>
        <hashTree/>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="R03_Add_Drop_T01_Launch" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/StudentRegistrationSsb/-314" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">perf-pxesa07-elb-1845329837.us-east-1.elb.amazonaws.com</stringProp>
            <stringProp name="HTTPSampler.port">8100</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/StudentRegistrationSsb/</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">navigate</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">none</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 6.3; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/79.0.3945.130 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/StudentRegistrationSsb/ssb/registration-315" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">perf-pxesa07-elb-1845329837.us-east-1.elb.amazonaws.com</stringProp>
            <stringProp name="HTTPSampler.port">8100</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/StudentRegistrationSsb/ssb/registration</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">navigate</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://perf-pxesa07-elb-1845329837.us-east-1.elb.amazonaws.com:8100/StudentRegistrationSsb/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 6.3; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/79.0.3945.130 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/StudentRegistrationSsb/ssb/selfServiceMenu/data-328" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">perf-pxesa07-elb-1845329837.us-east-1.elb.amazonaws.com</stringProp>
            <stringProp name="HTTPSampler.port">8100</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/StudentRegistrationSsb/ssb/selfServiceMenu/data</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://perf-pxesa07-elb-1845329837.us-east-1.elb.amazonaws.com:8100/StudentRegistrationSsb/ssb/registration</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 6.3; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/79.0.3945.130 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/StudentRegistrationSsb/ssb/menu-338" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">type</stringProp>
                  <stringProp name="Argument.value">Personal</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">perf-pxesa07-elb-1845329837.us-east-1.elb.amazonaws.com</stringProp>
            <stringProp name="HTTPSampler.port">8100</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/StudentRegistrationSsb/ssb/menu</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://perf-pxesa07-elb-1845329837.us-east-1.elb.amazonaws.com:8100/StudentRegistrationSsb/ssb/registration</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 6.3; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/79.0.3945.130 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="R03_Add_Drop_T02_Register_For_Classes" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/StudentRegistrationSsb/ssb/registration/registerPostSignIn-345" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="mode" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">mode</stringProp>
                  <stringProp name="Argument.value">registration</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">perf-pxesa07-elb-1845329837.us-east-1.elb.amazonaws.com</stringProp>
            <stringProp name="HTTPSampler.port">8100</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/StudentRegistrationSsb/ssb/registration/registerPostSignIn</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">Detected the start of a redirect chain</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">navigate</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://perf-pxesa07-elb-1845329837.us-east-1.elb.amazonaws.com:8100/StudentRegistrationSsb/ssb/registration</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-User" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-User</stringProp>
                  <stringProp name="Header.value">?1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 6.3; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/79.0.3945.130 Safari/537.36</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">true</stringProp>
              <stringProp name="RegexExtractor.refname">saml_request</stringProp>
              <stringProp name="RegexExtractor.regex">SAMLRequest=(.+)&amp;SigAlg=</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">saml_request Not found</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
              <stringProp name="Sample.scope">all</stringProp>
            </RegexExtractor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">true</stringProp>
              <stringProp name="RegexExtractor.refname">SigAlg</stringProp>
              <stringProp name="RegexExtractor.regex">&amp;SigAlg=(.+)&amp;Signature</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">SigAlg _not found</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
              <stringProp name="Sample.scope">all</stringProp>
            </RegexExtractor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">true</stringProp>
              <stringProp name="RegexExtractor.refname">Signature</stringProp>
              <stringProp name="RegexExtractor.regex">&amp;Signature=(.+)</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">Signature_not_found</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
              <stringProp name="Sample.scope">all</stringProp>
            </RegexExtractor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">true</stringProp>
              <stringProp name="RegexExtractor.refname">sessionDataKey</stringProp>
              <stringProp name="RegexExtractor.regex">&amp;sessionDataKey=(.+)&amp;relyingParty</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">sessionDataKey _not_found</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
              <stringProp name="Sample.scope">all</stringProp>
            </RegexExtractor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/StudentRegistrationSsb/saml/login-346" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">perf-pxesa07-elb-1845329837.us-east-1.elb.amazonaws.com</stringProp>
            <stringProp name="HTTPSampler.port">8100</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/StudentRegistrationSsb/saml/login</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">Detected a redirect from the previous sample</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">navigate</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://perf-pxesa07-elb-1845329837.us-east-1.elb.amazonaws.com:8100/StudentRegistrationSsb/ssb/registration</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-User" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-User</stringProp>
                  <stringProp name="Header.value">?1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 6.3; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/79.0.3945.130 Safari/537.36</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">true</stringProp>
              <stringProp name="RegexExtractor.refname">saml_request</stringProp>
              <stringProp name="RegexExtractor.regex">Location: https://perfpeisauva01.ad.admin:443/samlsso?SAMLRequest=(.+?)</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">saml_request Not found</stringProp>
              <stringProp name="RegexExtractor.match_number">0</stringProp>
              <stringProp name="Sample.scope">all</stringProp>
            </RegexExtractor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/samlsso-347" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="SAMLRequest" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">SAMLRequest</stringProp>
                  <stringProp name="Argument.value">${saml_request}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="SigAlg" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">SigAlg</stringProp>
                  <stringProp name="Argument.value">${SigAlg}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="Signature" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">Signature</stringProp>
                  <stringProp name="Argument.value">${Signature}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">perfpeisauva01.ad.admin</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/samlsso</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">Detected the start of a redirect chain</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">navigate</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://perf-pxesa07-elb-1845329837.us-east-1.elb.amazonaws.com:8100/StudentRegistrationSsb/ssb/registration</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-User" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-User</stringProp>
                  <stringProp name="Header.value">?1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 6.3; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/79.0.3945.130 Safari/537.36</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/authenticationendpoint/login.do-348" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="SigAlg" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">SigAlg</stringProp>
                  <stringProp name="Argument.value">http%3A%2F%2Fwww.w3.org%2F2000%2F09%2Fxmldsig%23rsa-sha1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="Signature" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">Signature</stringProp>
                  <stringProp name="Argument.value">L%2BjxJhQbmT8I45L7UAVDBwKxbW%2BW%2BGNNP1tM1c2SR%2B6EwjYHvRRkCCXvQ4QVAJmXXAEdzyy6ITWGaebo53wPd2jeK6r0yUYrLu97ReeODcdsPChxWJPlbh5TYO4N54qGT1myih4BNESCqs588bbbEs%2BVFbbc639iT0mjdJDgW1A%3D</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="commonAuthCallerPath" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">commonAuthCallerPath</stringProp>
                  <stringProp name="Argument.value">%2Fsamlsso</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="forceAuth" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">forceAuth</stringProp>
                  <stringProp name="Argument.value">false</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="passiveAuth" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">passiveAuth</stringProp>
                  <stringProp name="Argument.value">false</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="tenantDomain" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">tenantDomain</stringProp>
                  <stringProp name="Argument.value">carbon.super</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="sessionDataKey" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sessionDataKey</stringProp>
                  <stringProp name="Argument.value">29c6b34f-97df-4db9-ad92-7492047dab3f</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="relyingParty" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">relyingParty</stringProp>
                  <stringProp name="Argument.value">studentregss-sp</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">type</stringProp>
                  <stringProp name="Argument.value">samlsso</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="sp" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sp</stringProp>
                  <stringProp name="Argument.value">studentregss-sp</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="isSaaSApp" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">isSaaSApp</stringProp>
                  <stringProp name="Argument.value">false</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="authenticators" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">authenticators</stringProp>
                  <stringProp name="Argument.value">BasicAuthenticator:LOCAL</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">perfpeisauva01.ad.admin</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/authenticationendpoint/login.do</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">Detected a redirect from the previous sample</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">navigate</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://perf-pxesa07-elb-1845329837.us-east-1.elb.amazonaws.com:8100/StudentRegistrationSsb/ssb/registration</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-User" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-User</stringProp>
                  <stringProp name="Header.value">?1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 6.3; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/79.0.3945.130 Safari/537.36</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="R03_Add_Drop_T03_Login" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/samlsso-349" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="tocommonauth" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">tocommonauth</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="username" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">username</stringProp>
                  <stringProp name="Argument.value">rchung2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="password" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">password</stringProp>
                  <stringProp name="Argument.value">111111</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="sessionDataKey" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sessionDataKey</stringProp>
                  <stringProp name="Argument.value">${sessionDataKey}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">perfpeisauva01.ad.admin</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/samlsso</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">navigate</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://perfpeisauva01.ad.admin/authenticationendpoint/login.do?SigAlg=http%3A%2F%2Fwww.w3.org%2F2000%2F09%2Fxmldsig%23rsa-sha1&amp;Signature=L%2BjxJhQbmT8I45L7UAVDBwKxbW%2BW%2BGNNP1tM1c2SR%2B6EwjYHvRRkCCXvQ4QVAJmXXAEdzyy6ITWGaebo53wPd2jeK6r0yUYrLu97ReeODcdsPChxWJPlbh5TYO4N54qGT1myih4BNESCqs588bbbEs%2BVFbbc639iT0mjdJDgW1A%3D&amp;commonAuthCallerPath=%2Fsamlsso&amp;forceAuth=false&amp;passiveAuth=false&amp;tenantDomain=carbon.super&amp;sessionDataKey=29c6b34f-97df-4db9-ad92-7492047dab3f&amp;relyingParty=studentregss-sp&amp;type=samlsso&amp;sp=studentregss-sp&amp;isSaaSApp=false&amp;authenticators=BasicAuthenticator:LOCAL</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://perfpeisauva01.ad.admin</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-User" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-User</stringProp>
                  <stringProp name="Header.value">?1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                </elementProp>
                <elementProp name="Cache-Control" elementType="Header">
                  <stringProp name="Header.name">Cache-Control</stringProp>
                  <stringProp name="Header.value">max-age=0</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 6.3; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/79.0.3945.130 Safari/537.36</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">SAMLResponse</stringProp>
              <stringProp name="RegexExtractor.regex">SAMLResponse&apos; value=&apos;(.+)&apos;/&gt;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">SAMLResponse_notfound</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/StudentRegistrationSsb/saml/SSO/alias/studentregss-sp-350" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="SAMLResponse" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">SAMLResponse</stringProp>
                  <stringProp name="Argument.value">${SAMLResponse}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">perf-pxesa07-elb-1845329837.us-east-1.elb.amazonaws.com</stringProp>
            <stringProp name="HTTPSampler.port">8100</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/StudentRegistrationSsb/saml/SSO/alias/studentregss-sp</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">Detected the start of a redirect chain</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">navigate</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://perfpeisauva01.ad.admin/samlsso</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://perfpeisauva01.ad.admin</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                </elementProp>
                <elementProp name="Cache-Control" elementType="Header">
                  <stringProp name="Header.name">Cache-Control</stringProp>
                  <stringProp name="Header.value">max-age=0</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 6.3; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/79.0.3945.130 Safari/537.36</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/StudentRegistrationSsb/ssb/registration/registerPostSignIn-351" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="mode" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">mode</stringProp>
                  <stringProp name="Argument.value">registration</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">perf-pxesa07-elb-1845329837.us-east-1.elb.amazonaws.com</stringProp>
            <stringProp name="HTTPSampler.port">8100</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/StudentRegistrationSsb/ssb/registration/registerPostSignIn</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">Detected a redirect from the previous sample</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">navigate</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://perfpeisauva01.ad.admin/samlsso</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Cache-Control" elementType="Header">
                  <stringProp name="Header.name">Cache-Control</stringProp>
                  <stringProp name="Header.value">max-age=0</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 6.3; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/79.0.3945.130 Safari/537.36</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/StudentRegistrationSsb/ssb/term/termSelection-352" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="mode" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">mode</stringProp>
                  <stringProp name="Argument.value">registration</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">perf-pxesa07-elb-1845329837.us-east-1.elb.amazonaws.com</stringProp>
            <stringProp name="HTTPSampler.port">8100</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/StudentRegistrationSsb/ssb/term/termSelection</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">Detected a redirect from the previous sample</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">navigate</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://perfpeisauva01.ad.admin/samlsso</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Cache-Control" elementType="Header">
                  <stringProp name="Header.name">Cache-Control</stringProp>
                  <stringProp name="Header.value">max-age=0</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 6.3; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/79.0.3945.130 Safari/537.36</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/StudentRegistrationSsb/ssb/selfServiceMenu/data-365" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">perf-pxesa07-elb-1845329837.us-east-1.elb.amazonaws.com</stringProp>
            <stringProp name="HTTPSampler.port">8100</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/StudentRegistrationSsb/ssb/selfServiceMenu/data</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://perf-pxesa07-elb-1845329837.us-east-1.elb.amazonaws.com:8100/StudentRegistrationSsb/ssb/term/termSelection?mode=registration</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 6.3; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/79.0.3945.130 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/StudentRegistrationSsb/ssb/menu-373" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">type</stringProp>
                  <stringProp name="Argument.value">Personal</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">perf-pxesa07-elb-1845329837.us-east-1.elb.amazonaws.com</stringProp>
            <stringProp name="HTTPSampler.port">8100</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/StudentRegistrationSsb/ssb/menu</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://perf-pxesa07-elb-1845329837.us-east-1.elb.amazonaws.com:8100/StudentRegistrationSsb/ssb/term/termSelection?mode=registration</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 6.3; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/79.0.3945.130 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="R03_Add_Drop_T04_Enter_Term" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/StudentRegistrationSsb/ssb/classRegistration/getTerms-382" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="searchTerm" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">searchTerm</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="offset" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">offset</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="max" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">max</stringProp>
                  <stringProp name="Argument.value">10</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="_" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_</stringProp>
                  <stringProp name="Argument.value">1580274807379</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">perf-pxesa07-elb-1845329837.us-east-1.elb.amazonaws.com</stringProp>
            <stringProp name="HTTPSampler.port">8100</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/StudentRegistrationSsb/ssb/classRegistration/getTerms</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="X-Synchronizer-Token" elementType="Header">
                  <stringProp name="Header.name">X-Synchronizer-Token</stringProp>
                  <stringProp name="Header.value">a5802b49-c9a2-49fa-a93d-47b390ea4010</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://perf-pxesa07-elb-1845329837.us-east-1.elb.amazonaws.com:8100/StudentRegistrationSsb/ssb/term/termSelection?mode=registration</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 6.3; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/79.0.3945.130 Safari/537.36</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/StudentRegistrationSsb/ssb/classRegistration/getTerms-383" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="searchTerm" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">searchTerm</stringProp>
                  <stringProp name="Argument.value">201120</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="offset" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">offset</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="max" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">max</stringProp>
                  <stringProp name="Argument.value">10</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="_" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_</stringProp>
                  <stringProp name="Argument.value">1580274808580</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">perf-pxesa07-elb-1845329837.us-east-1.elb.amazonaws.com</stringProp>
            <stringProp name="HTTPSampler.port">8100</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/StudentRegistrationSsb/ssb/classRegistration/getTerms</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="X-Synchronizer-Token" elementType="Header">
                  <stringProp name="Header.name">X-Synchronizer-Token</stringProp>
                  <stringProp name="Header.value">a5802b49-c9a2-49fa-a93d-47b390ea4010</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://perf-pxesa07-elb-1845329837.us-east-1.elb.amazonaws.com:8100/StudentRegistrationSsb/ssb/term/termSelection?mode=registration</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 6.3; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/79.0.3945.130 Safari/537.36</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/StudentRegistrationSsb/ssb/term/saveTerm-384" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="mode" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">mode</stringProp>
                  <stringProp name="Argument.value">registration</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="term" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">term</stringProp>
                  <stringProp name="Argument.value">201120</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">perf-pxesa07-elb-1845329837.us-east-1.elb.amazonaws.com</stringProp>
            <stringProp name="HTTPSampler.port">8100</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/StudentRegistrationSsb/ssb/term/saveTerm</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="X-Synchronizer-Token" elementType="Header">
                  <stringProp name="Header.name">X-Synchronizer-Token</stringProp>
                  <stringProp name="Header.value">a5802b49-c9a2-49fa-a93d-47b390ea4010</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://perf-pxesa07-elb-1845329837.us-east-1.elb.amazonaws.com:8100/StudentRegistrationSsb/ssb/term/termSelection?mode=registration</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 6.3; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/79.0.3945.130 Safari/537.36</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="R03_Add_Drop_T05_Click_Continue" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/StudentRegistrationSsb/ssb/term/search?mode=registration-386" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="term" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">term</stringProp>
                  <stringProp name="Argument.value">201120</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="studyPath" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">studyPath</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="studyPathText" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">studyPathText</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="startDatepicker" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">startDatepicker</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="endDatepicker" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">endDatepicker</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">perf-pxesa07-elb-1845329837.us-east-1.elb.amazonaws.com</stringProp>
            <stringProp name="HTTPSampler.port">8100</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/StudentRegistrationSsb/ssb/term/search?mode=registration</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="X-Synchronizer-Token" elementType="Header">
                  <stringProp name="Header.name">X-Synchronizer-Token</stringProp>
                  <stringProp name="Header.value">a5802b49-c9a2-49fa-a93d-47b390ea4010</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://perf-pxesa07-elb-1845329837.us-east-1.elb.amazonaws.com:8100/StudentRegistrationSsb/ssb/term/termSelection?mode=registration</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://perf-pxesa07-elb-1845329837.us-east-1.elb.amazonaws.com:8100</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 6.3; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/79.0.3945.130 Safari/537.36</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/StudentRegistrationSsb/ssb/classRegistration/classRegistration-387" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">perf-pxesa07-elb-1845329837.us-east-1.elb.amazonaws.com</stringProp>
            <stringProp name="HTTPSampler.port">8100</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/StudentRegistrationSsb/ssb/classRegistration/classRegistration</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">navigate</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://perf-pxesa07-elb-1845329837.us-east-1.elb.amazonaws.com:8100/StudentRegistrationSsb/ssb/term/termSelection?mode=registration</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-User" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-User</stringProp>
                  <stringProp name="Header.value">?1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 6.3; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/79.0.3945.130 Safari/537.36</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/StudentRegistrationSsb/ssb/selfServiceMenu/data-414" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">perf-pxesa07-elb-1845329837.us-east-1.elb.amazonaws.com</stringProp>
            <stringProp name="HTTPSampler.port">8100</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/StudentRegistrationSsb/ssb/selfServiceMenu/data</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://perf-pxesa07-elb-1845329837.us-east-1.elb.amazonaws.com:8100/StudentRegistrationSsb/ssb/classRegistration/classRegistration</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 6.3; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/79.0.3945.130 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/StudentRegistrationSsb/ssb/classRegistration/getRegistrationEvents-422" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="termFilter" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">termFilter</stringProp>
                  <stringProp name="Argument.value">null</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">perf-pxesa07-elb-1845329837.us-east-1.elb.amazonaws.com</stringProp>
            <stringProp name="HTTPSampler.port">8100</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/StudentRegistrationSsb/ssb/classRegistration/getRegistrationEvents</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="X-Synchronizer-Token" elementType="Header">
                  <stringProp name="Header.name">X-Synchronizer-Token</stringProp>
                  <stringProp name="Header.value">ec56d697-3a8b-4e2b-9282-9a7697be8d36</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://perf-pxesa07-elb-1845329837.us-east-1.elb.amazonaws.com:8100/StudentRegistrationSsb/ssb/classRegistration/classRegistration</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 6.3; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/79.0.3945.130 Safari/537.36</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/StudentRegistrationSsb/ssb/menu-429" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">type</stringProp>
                  <stringProp name="Argument.value">Personal</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">perf-pxesa07-elb-1845329837.us-east-1.elb.amazonaws.com</stringProp>
            <stringProp name="HTTPSampler.port">8100</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/StudentRegistrationSsb/ssb/menu</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://perf-pxesa07-elb-1845329837.us-east-1.elb.amazonaws.com:8100/StudentRegistrationSsb/ssb/classRegistration/classRegistration</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 6.3; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/79.0.3945.130 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="R03_Add_Drop_T07_EnterCRN1" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/StudentRegistrationSsb/ssb/classRegistration/getSectionDetailsFromCRN-433" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="courseReferenceNumber" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">courseReferenceNumber</stringProp>
                  <stringProp name="Argument.value">21019</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="term" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">term</stringProp>
                  <stringProp name="Argument.value">201120</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">perf-pxesa07-elb-1845329837.us-east-1.elb.amazonaws.com</stringProp>
            <stringProp name="HTTPSampler.port">8100</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/StudentRegistrationSsb/ssb/classRegistration/getSectionDetailsFromCRN</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="X-Synchronizer-Token" elementType="Header">
                  <stringProp name="Header.name">X-Synchronizer-Token</stringProp>
                  <stringProp name="Header.value">ec56d697-3a8b-4e2b-9282-9a7697be8d36</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://perf-pxesa07-elb-1845329837.us-east-1.elb.amazonaws.com:8100/StudentRegistrationSsb/ssb/classRegistration/classRegistration</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 6.3; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/79.0.3945.130 Safari/537.36</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">courseNumber1</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;courseNumber&quot;: &quot;(.+?)&quot;, &quot;</stringProp>
            <stringProp name="RegexExtractor.template"></stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number"></stringProp>
          </RegexExtractor>
          <hashTree/>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="R03_Add_Drop_T07_EnterCRN2" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/StudentRegistrationSsb/ssb/classRegistration/getSectionDetailsFromCRN-434" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="courseReferenceNumber" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">courseReferenceNumber</stringProp>
                  <stringProp name="Argument.value">20418</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="term" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">term</stringProp>
                  <stringProp name="Argument.value">201120</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">perf-pxesa07-elb-1845329837.us-east-1.elb.amazonaws.com</stringProp>
            <stringProp name="HTTPSampler.port">8100</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/StudentRegistrationSsb/ssb/classRegistration/getSectionDetailsFromCRN</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="X-Synchronizer-Token" elementType="Header">
                  <stringProp name="Header.name">X-Synchronizer-Token</stringProp>
                  <stringProp name="Header.value">ec56d697-3a8b-4e2b-9282-9a7697be8d36</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://perf-pxesa07-elb-1845329837.us-east-1.elb.amazonaws.com:8100/StudentRegistrationSsb/ssb/classRegistration/classRegistration</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 6.3; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/79.0.3945.130 Safari/537.36</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">courseNumber2</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;courseNumber&quot;: &quot;(.+?)&quot;, &quot;</stringProp>
            <stringProp name="RegexExtractor.template"></stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number"></stringProp>
          </RegexExtractor>
          <hashTree/>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="R03_Add_Drop_T07_EnterCRN3" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="R03_Add_Drop_T07_EnterCRN3-0" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="courseReferenceNumber" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">courseReferenceNumber</stringProp>
                  <stringProp name="Argument.value">21162</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="term" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">term</stringProp>
                  <stringProp name="Argument.value">201120</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">perf-pxesa07-elb-1845329837.us-east-1.elb.amazonaws.com</stringProp>
            <stringProp name="HTTPSampler.port">8100</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/StudentRegistrationSsb/ssb/classRegistration/getSectionDetailsFromCRN</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="X-Synchronizer-Token" elementType="Header">
                  <stringProp name="Header.name">X-Synchronizer-Token</stringProp>
                  <stringProp name="Header.value">ec56d697-3a8b-4e2b-9282-9a7697be8d36</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://perf-pxesa07-elb-1845329837.us-east-1.elb.amazonaws.com:8100/StudentRegistrationSsb/ssb/classRegistration/classRegistration</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 6.3; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/79.0.3945.130 Safari/537.36</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">courseNumber3</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;courseNumber&quot;: &quot;(.+?)&quot;, &quot;</stringProp>
            <stringProp name="RegexExtractor.template"></stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number"></stringProp>
          </RegexExtractor>
          <hashTree/>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="R03_Add_Drop_T07_EnterCRN4" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/StudentRegistrationSsb/ssb/classRegistration/getSectionDetailsFromCRN-436" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="courseReferenceNumber" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">courseReferenceNumber</stringProp>
                  <stringProp name="Argument.value">20218</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="term" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">term</stringProp>
                  <stringProp name="Argument.value">201120</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">perf-pxesa07-elb-1845329837.us-east-1.elb.amazonaws.com</stringProp>
            <stringProp name="HTTPSampler.port">8100</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/StudentRegistrationSsb/ssb/classRegistration/getSectionDetailsFromCRN</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="X-Synchronizer-Token" elementType="Header">
                  <stringProp name="Header.name">X-Synchronizer-Token</stringProp>
                  <stringProp name="Header.value">ec56d697-3a8b-4e2b-9282-9a7697be8d36</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://perf-pxesa07-elb-1845329837.us-east-1.elb.amazonaws.com:8100/StudentRegistrationSsb/ssb/classRegistration/classRegistration</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 6.3; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/79.0.3945.130 Safari/537.36</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">courseNumber4</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;courseNumber&quot;: &quot;(.+?)&quot;, &quot;</stringProp>
            <stringProp name="RegexExtractor.template"></stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number"></stringProp>
          </RegexExtractor>
          <hashTree/>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="R03_Add_Drop_T07_EnterCRN5" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/StudentRegistrationSsb/ssb/classRegistration/getSectionDetailsFromCRN-437" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="courseReferenceNumber" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">courseReferenceNumber</stringProp>
                  <stringProp name="Argument.value">23717</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="term" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">term</stringProp>
                  <stringProp name="Argument.value">201120</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">perf-pxesa07-elb-1845329837.us-east-1.elb.amazonaws.com</stringProp>
            <stringProp name="HTTPSampler.port">8100</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/StudentRegistrationSsb/ssb/classRegistration/getSectionDetailsFromCRN</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="X-Synchronizer-Token" elementType="Header">
                  <stringProp name="Header.name">X-Synchronizer-Token</stringProp>
                  <stringProp name="Header.value">ec56d697-3a8b-4e2b-9282-9a7697be8d36</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://perf-pxesa07-elb-1845329837.us-east-1.elb.amazonaws.com:8100/StudentRegistrationSsb/ssb/classRegistration/classRegistration</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 6.3; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/79.0.3945.130 Safari/537.36</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">courseNumber5</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;courseNumber&quot;: &quot;(.+?)&quot;, &quot;</stringProp>
              <stringProp name="RegexExtractor.template"></stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number"></stringProp>
            </RegexExtractor>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="R03_Add_Drop_T12_Click_Add_to_Summary" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/StudentRegistrationSsb/ssb/classRegistration/addCRNRegistrationItems-438" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="crnList" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">crnList</stringProp>
                  <stringProp name="Argument.value">21019,20418,21162,20218,23717</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="term" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">term</stringProp>
                  <stringProp name="Argument.value">201120</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">perf-pxesa07-elb-1845329837.us-east-1.elb.amazonaws.com</stringProp>
            <stringProp name="HTTPSampler.port">8100</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/StudentRegistrationSsb/ssb/classRegistration/addCRNRegistrationItems</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="X-Synchronizer-Token" elementType="Header">
                  <stringProp name="Header.name">X-Synchronizer-Token</stringProp>
                  <stringProp name="Header.value">ec56d697-3a8b-4e2b-9282-9a7697be8d36</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://perf-pxesa07-elb-1845329837.us-east-1.elb.amazonaws.com:8100/StudentRegistrationSsb/ssb/classRegistration/classRegistration</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://perf-pxesa07-elb-1845329837.us-east-1.elb.amazonaws.com:8100</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 6.3; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/79.0.3945.130 Safari/537.36</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">id1</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;Standard Letter&quot;, &quot;id&quot;: (.+?),</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">id1_notfound</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">id2</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;Standard Letter&quot;, &quot;id&quot;: (.+?),</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">id2_notfound</stringProp>
              <stringProp name="RegexExtractor.match_number">2</stringProp>
            </RegexExtractor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">id3</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;Standard Letter&quot;, &quot;id&quot;: (.+?),</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">id3_notfound</stringProp>
              <stringProp name="RegexExtractor.match_number">3</stringProp>
            </RegexExtractor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">id4</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;Standard Letter&quot;, &quot;id&quot;: (.+?),</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">id4_notfound</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">id5</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;Standard Letter&quot;, &quot;id&quot;: (.+?),</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">id5_notfound</stringProp>
              <stringProp name="RegexExtractor.match_number">5</stringProp>
            </RegexExtractor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/StudentRegistrationSsb/ssb/classRegistration/getRegistrationEvents-439" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="termFilter" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">termFilter</stringProp>
                  <stringProp name="Argument.value">null</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">perf-pxesa07-elb-1845329837.us-east-1.elb.amazonaws.com</stringProp>
            <stringProp name="HTTPSampler.port">8100</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/StudentRegistrationSsb/ssb/classRegistration/getRegistrationEvents</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="X-Synchronizer-Token" elementType="Header">
                  <stringProp name="Header.name">X-Synchronizer-Token</stringProp>
                  <stringProp name="Header.value">ec56d697-3a8b-4e2b-9282-9a7697be8d36</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://perf-pxesa07-elb-1845329837.us-east-1.elb.amazonaws.com:8100/StudentRegistrationSsb/ssb/classRegistration/classRegistration</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 6.3; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/79.0.3945.130 Safari/537.36</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="R03_Add_Drop_T13_Click_Submit" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/StudentRegistrationSsb/ssb/classRegistration/submitRegistration/batch-442" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;create&quot;:[],&quot;update&quot;:[{&quot;addAuthorizationCrnMessage&quot;:null,&quot;addAuthorizationCrnStatus&quot;:&quot;INCOMPLETE&quot;,&quot;addDate&quot;:&quot;01/29/2020&quot;,&quot;approvalOverride&quot;:&quot;N&quot;,&quot;approvalReceivedIndicator&quot;:null,&quot;approvalReceivedIndicatorHold&quot;:null,&quot;attached&quot;:true,&quot;attemptedHours&quot;:0,&quot;authorizationCode&quot;:null,&quot;billHour&quot;:4,&quot;billHourInitial&quot;:4,&quot;billHours&quot;:{&quot;class&quot;:&quot;net.hedtech.banner.student.registration.RegistrationCreditHour&quot;,&quot;creditHourHigh&quot;:null,&quot;creditHourIndicator&quot;:null,&quot;creditHourList&quot;:null,&quot;creditHourLow&quot;:null},&quot;block&quot;:null,&quot;blockPermitOverride&quot;:null,&quot;blockRuleSequenceNumber&quot;:null,&quot;campus&quot;:&quot;M&quot;,&quot;campusOverride&quot;:&quot;N&quot;,&quot;capcOverride&quot;:&quot;N&quot;,&quot;censusEnrollmentDate&quot;:&quot;03/15/2011&quot;,&quot;class&quot;:&quot;net.hedtech.banner.student.registration.RegistrationTemporaryView&quot;,&quot;classOverride&quot;:&quot;N&quot;,&quot;cohortOverride&quot;:&quot;N&quot;,&quot;collegeOverride&quot;:&quot;N&quot;,&quot;completionDate&quot;:&quot;05/15/2099&quot;,&quot;corqOverride&quot;:&quot;N&quot;,&quot;courseContinuingEducationIndicator&quot;:&quot;N&quot;,&quot;courseNumber&quot;:&quot;${courseNumber5}&quot;,&quot;courseReferenceNumber&quot;:&quot;23717&quot;,&quot;courseRegistrationStatus&quot;:&quot;RW&quot;,&quot;courseRegistrationStatusDescription&quot;:&quot;**Web Registered**&quot;,&quot;courseTitle&quot;:&quot;Theatre In The Round&quot;,&quot;creditHour&quot;:4,&quot;creditHourInitial&quot;:4,&quot;creditHours&quot;:{&quot;class&quot;:&quot;net.hedtech.banner.student.registration.RegistrationCreditHour&quot;,&quot;creditHourHigh&quot;:null,&quot;creditHourIndicator&quot;:null,&quot;creditHourList&quot;:null,&quot;creditHourLow&quot;:null},&quot;crnErrors&quot;:[],&quot;dataOrigin&quot;:&quot;Banner&quot;,&quot;degreeOverride&quot;:&quot;N&quot;,&quot;departmentOverride&quot;:&quot;N&quot;,&quot;dirty&quot;:false,&quot;dirtyPropertyNames&quot;:[],&quot;duplicateOverride&quot;:&quot;N&quot;,&quot;durationUnit&quot;:null,&quot;errorFlag&quot;:null,&quot;errorLink&quot;:null,&quot;errors&quot;:{&quot;errors&quot;:[]},&quot;grade&quot;:null,&quot;gradeComment&quot;:null,&quot;gradeDate&quot;:null,&quot;gradeMid&quot;:null,&quot;gradingMode&quot;:&quot;S&quot;,&quot;gradingModeDescription&quot;:&quot;Standard Letter&quot;,&quot;id&quot;:${id5},&quot;instructionalMethodDescription&quot;:null,&quot;lastModified&quot;:&quot;01/29/2020&quot;,&quot;lastModifiedBy&quot;:&quot;1110076&quot;,&quot;level&quot;:&quot;UG&quot;,&quot;levelDescription&quot;:&quot;Undergraduate&quot;,&quot;levelOverride&quot;:&quot;N&quot;,&quot;linkOverride&quot;:&quot;N&quot;,&quot;majorOverride&quot;:&quot;N&quot;,&quot;message&quot;:null,&quot;messageType&quot;:null,&quot;mexcOverride&quot;:&quot;N&quot;,&quot;newBlock&quot;:null,&quot;newBlockRuleSequenceNumber&quot;:null,&quot;numberOfUnits&quot;:null,&quot;originalCourseRegistrationStatus&quot;:null,&quot;originalRecordStatus&quot;:&quot;N&quot;,&quot;originalVoiceResponseStatusType&quot;:null,&quot;overrideDurationIndicator&quot;:false,&quot;partOfTerm&quot;:&quot;1&quot;,&quot;partOfTermDescription&quot;:&quot;Full Term&quot;,&quot;permitOverrideUpdate&quot;:null,&quot;preqOverride&quot;:&quot;N&quot;,&quot;programOverride&quot;:&quot;N&quot;,&quot;properties&quot;:{&quot;newBlockRuleSequenceNumber&quot;:null,&quot;selectedGradingMode&quot;:{&quot;class&quot;:&quot;net.hedtech.banner.student.registration.RegistrationGradingMode&quot;,&quot;description&quot;:null,&quot;gradingMode&quot;:null},&quot;statusDescription&quot;:&quot;Pending&quot;,&quot;newBlock&quot;:null,&quot;partOfTermDescription&quot;:&quot;Full Term&quot;,&quot;mexcOverride&quot;:&quot;N&quot;,&quot;courseNumber&quot;:&quot;${courseNumber5}&quot;,&quot;sequenceNumber&quot;:&quot;2&quot;,&quot;startDate&quot;:&quot;01/05/2011&quot;,&quot;instructionalMethodDescription&quot;:null,&quot;censusEnrollmentDate&quot;:&quot;03/15/2011&quot;,&quot;gradeMid&quot;:null,&quot;originalRecordStatus&quot;:&quot;N&quot;,&quot;testOverride&quot;:&quot;N&quot;,&quot;selectedLevel&quot;:{&quot;class&quot;:&quot;net.hedtech.banner.student.registration.RegistrationLevel&quot;,&quot;description&quot;:null,&quot;level&quot;:null},&quot;gradingModeDescription&quot;:&quot;Standard Letter&quot;,&quot;durationUnit&quot;:null,&quot;levelOverride&quot;:&quot;N&quot;,&quot;waivHour&quot;:4,&quot;registrationGradingModes&quot;:[{&quot;class&quot;:&quot;net.hedtech.banner.student.registration.RegistrationGradingMode&quot;,&quot;description&quot;:&quot;Standard Letter&quot;,&quot;gradingMode&quot;:&quot;S&quot;}],&quot;level&quot;:&quot;UG&quot;,&quot;registrationActions&quot;:[{&quot;class&quot;:&quot;net.hedtech.banner.student.registration.RegistrationAction&quot;,&quot;courseRegistrationStatus&quot;:&quot;RW&quot;,&quot;description&quot;:&quot;**Web Registered**&quot;,&quot;registrationStatusDate&quot;:null,&quot;remove&quot;:false,&quot;subActions&quot;:null,&quot;voiceType&quot;:&quot;R&quot;},{&quot;class&quot;:&quot;net.hedtech.banner.student.registration.RegistrationAction&quot;,&quot;courseRegistrationStatus&quot;:&quot;internal-remove&quot;,&quot;description&quot;:&quot;Remove&quot;,&quot;registrationStatusDate&quot;:null,&quot;remove&quot;:true,&quot;subActions&quot;:null,&quot;voiceType&quot;:null}],&quot;removeIndicator&quot;:null,&quot;errorLink&quot;:null,&quot;recordStatus&quot;:&quot;N&quot;,&quot;dataOrigin&quot;:&quot;Banner&quot;,&quot;courseTitle&quot;:&quot;Theatre In The Round&quot;,&quot;permitOverrideUpdate&quot;:null,&quot;attemptedHours&quot;:0,&quot;originalVoiceResponseStatusType&quot;:null,&quot;courseReferenceNumber&quot;:&quot;23717&quot;,&quot;gradingMode&quot;:&quot;S&quot;,&quot;pidm&quot;:  ,&quot;selectedAction&quot;:null,&quot;completionDate&quot;:&quot;05/15/2099&quot;,&quot;message&quot;:null,&quot;courseRegistrationStatus&quot;:&quot;RW&quot;,&quot;registrationStatusDate&quot;:&quot;01/29/2020&quot;,&quot;creditHour&quot;:4,&quot;studentAttributeOverride&quot;:&quot;N&quot;,&quot;approvalOverride&quot;:&quot;N&quot;,&quot;classOverride&quot;:&quot;N&quot;,&quot;campusOverride&quot;:&quot;N&quot;,&quot;overrideDurationIndicator&quot;:false,&quot;creditHourInitial&quot;:4,&quot;courseContinuingEducationIndicator&quot;:&quot;N&quot;,&quot;registrationOverrides&quot;:[],&quot;sectionCourseTitle&quot;:&quot;Theatre In The Round&quot;,&quot;specialApproval&quot;:null,&quot;preqOverride&quot;:&quot;N&quot;,&quot;majorOverride&quot;:&quot;N&quot;,&quot;approvalReceivedIndicatorHold&quot;:null,&quot;repeatOverride&quot;:&quot;N&quot;,&quot;tuitionWaiverIndicator&quot;:&quot;N&quot;,&quot;courseRegistrationStatusDescription&quot;:&quot;**Web Registered**&quot;,&quot;programOverride&quot;:&quot;N&quot;,&quot;scheduleDescription&quot;:&quot;Lecture&quot;,&quot;timeStatusHours&quot;:0,&quot;scheduleType&quot;:&quot;L&quot;,&quot;billHourInitial&quot;:4,&quot;departmentOverride&quot;:&quot;N&quot;,&quot;grade&quot;:null,&quot;approvalReceivedIndicator&quot;:null,&quot;structuredRegistrationHeaderSequence&quot;:null,&quot;capcOverride&quot;:&quot;N&quot;,&quot;addAuthorizationCrnStatus&quot;:&quot;INCOMPLETE&quot;,&quot;gradeComment&quot;:null,&quot;block&quot;:null,&quot;lastModified&quot;:&quot;01/29/2020&quot;,&quot;selectedCreditHour&quot;:null,&quot;messageType&quot;:null,&quot;reservedKey&quot;:null,&quot;voiceResponseStatusType&quot;:&quot;R&quot;,&quot;levelDescription&quot;:&quot;Undergraduate&quot;,&quot;subject&quot;:&quot;THEA&quot;,&quot;errorFlag&quot;:null,&quot;creditHours&quot;:{&quot;class&quot;:&quot;net.hedtech.banner.student.registration.RegistrationCreditHour&quot;,&quot;creditHourHigh&quot;:null,&quot;creditHourIndicator&quot;:null,&quot;creditHourList&quot;:null,&quot;creditHourLow&quot;:null},&quot;registrationToDate&quot;:null,&quot;selectedStudyPath&quot;:{&quot;class&quot;:&quot;net.hedtech.banner.student.registration.RegistrationStudyPath&quot;,&quot;description&quot;:null,&quot;keySequenceNumber&quot;:null},&quot;collegeOverride&quot;:&quot;N&quot;,&quot;partOfTerm&quot;:&quot;1&quot;,&quot;billHours&quot;:{&quot;class&quot;:&quot;net.hedtech.banner.student.registration.RegistrationCreditHour&quot;,&quot;creditHourHigh&quot;:null,&quot;creditHourIndicator&quot;:null,&quot;creditHourList&quot;:null,&quot;creditHourLow&quot;:null},&quot;cohortOverride&quot;:&quot;N&quot;,&quot;gradeDate&quot;:null,&quot;selectedBillHour&quot;:null,&quot;term&quot;:&quot;201120&quot;,&quot;numberOfUnits&quot;:null,&quot;studyPathKeySequence&quot;:null,&quot;selectedStartEndDate&quot;:{&quot;class&quot;:&quot;net.hedtech.banner.student.registration.RegistrationOlrStartEndDate&quot;,&quot;courseReferenceNumber&quot;:null,&quot;durationUnit&quot;:null,&quot;durationUnitDescription&quot;:null,&quot;endDate&quot;:null,&quot;numberOfUnits&quot;:null,&quot;overrideDurationIndicator&quot;:null,&quot;registrationDate&quot;:null,&quot;sectionEndFromDate&quot;:null,&quot;sectionEndToDate&quot;:null,&quot;sectionStartFromDate&quot;:null,&quot;sectionStartToDate&quot;:null,&quot;startDate&quot;:null,&quot;systemIn&quot;:null},&quot;crnErrors&quot;:[],&quot;blockPermitOverride&quot;:null,&quot;studyPathName&quot;:null,&quot;registrationLevels&quot;:[{&quot;class&quot;:&quot;net.hedtech.banner.student.registration.RegistrationLevel&quot;,&quot;description&quot;:&quot;Undergraduate&quot;,&quot;level&quot;:&quot;UG&quot;}],&quot;statusIndicator&quot;:&quot;P&quot;,&quot;sessionId&quot;:null,&quot;registrationFromDate&quot;:null,&quot;duplicateOverride&quot;:&quot;N&quot;,&quot;blockRuleSequenceNumber&quot;:null,&quot;structuredRegistrationDetailSequence&quot;:null,&quot;lastModifiedBy&quot;:&quot;1110076&quot;,&quot;waitOverride&quot;:&quot;N&quot;,&quot;subjectDescription&quot;:&quot;Theatre THEA&quot;,&quot;submitResultIndicator&quot;:null,&quot;degreeOverride&quot;:&quot;N&quot;,&quot;campus&quot;:&quot;M&quot;,&quot;selectedOverride&quot;:null,&quot;corqOverride&quot;:&quot;N&quot;,&quot;registrationAuthorizationActiveCode&quot;:&quot;N&quot;,&quot;linkOverride&quot;:&quot;N&quot;,&quot;addDate&quot;:&quot;01/29/2020&quot;,&quot;timeOverride&quot;:&quot;N&quot;,&quot;billHour&quot;:4,&quot;authorizationCode&quot;:null,&quot;originalCourseRegistrationStatus&quot;:null,&quot;addAuthorizationCrnMessage&quot;:null,&quot;registrationStudyPaths&quot;:[],&quot;rpthOverride&quot;:&quot;N&quot;},&quot;recordStatus&quot;:&quot;N&quot;,&quot;registrationActions&quot;:[{&quot;class&quot;:&quot;net.hedtech.banner.student.registration.RegistrationAction&quot;,&quot;courseRegistrationStatus&quot;:&quot;RW&quot;,&quot;description&quot;:&quot;**Web Registered**&quot;,&quot;registrationStatusDate&quot;:null,&quot;remove&quot;:false,&quot;subActions&quot;:null,&quot;voiceType&quot;:&quot;R&quot;},{&quot;class&quot;:&quot;net.hedtech.banner.student.registration.RegistrationAction&quot;,&quot;courseRegistrationStatus&quot;:&quot;internal-remove&quot;,&quot;description&quot;:&quot;Remove&quot;,&quot;registrationStatusDate&quot;:null,&quot;remove&quot;:true,&quot;subActions&quot;:null,&quot;voiceType&quot;:null}],&quot;registrationAuthorizationActiveCode&quot;:&quot;N&quot;,&quot;registrationFromDate&quot;:null,&quot;registrationGradingModes&quot;:[{&quot;class&quot;:&quot;net.hedtech.banner.student.registration.RegistrationGradingMode&quot;,&quot;description&quot;:&quot;Standard Letter&quot;,&quot;gradingMode&quot;:&quot;S&quot;}],&quot;registrationLevels&quot;:[{&quot;class&quot;:&quot;net.hedtech.banner.student.registration.RegistrationLevel&quot;,&quot;description&quot;:&quot;Undergraduate&quot;,&quot;level&quot;:&quot;UG&quot;}],&quot;registrationOverrides&quot;:[],&quot;registrationStatusDate&quot;:&quot;01/29/2020&quot;,&quot;registrationStudyPaths&quot;:[],&quot;registrationToDate&quot;:null,&quot;removeIndicator&quot;:null,&quot;repeatOverride&quot;:&quot;N&quot;,&quot;reservedKey&quot;:null,&quot;rpthOverride&quot;:&quot;N&quot;,&quot;scheduleDescription&quot;:&quot;Lecture&quot;,&quot;scheduleType&quot;:&quot;L&quot;,&quot;sectionCourseTitle&quot;:&quot;Theatre In The Round&quot;,&quot;selectedAction&quot;:null,&quot;selectedBillHour&quot;:null,&quot;selectedCreditHour&quot;:null,&quot;selectedGradingMode&quot;:{&quot;class&quot;:&quot;net.hedtech.banner.student.registration.RegistrationGradingMode&quot;,&quot;description&quot;:null,&quot;gradingMode&quot;:null},&quot;selectedLevel&quot;:{&quot;class&quot;:&quot;net.hedtech.banner.student.registration.RegistrationLevel&quot;,&quot;description&quot;:null,&quot;level&quot;:null},&quot;selectedOverride&quot;:null,&quot;selectedStartEndDate&quot;:{&quot;class&quot;:&quot;net.hedtech.banner.student.registration.RegistrationOlrStartEndDate&quot;,&quot;courseReferenceNumber&quot;:null,&quot;durationUnit&quot;:null,&quot;durationUnitDescription&quot;:null,&quot;endDate&quot;:null,&quot;numberOfUnits&quot;:null,&quot;overrideDurationIndicator&quot;:null,&quot;registrationDate&quot;:null,&quot;sectionEndFromDate&quot;:null,&quot;sectionEndToDate&quot;:null,&quot;sectionStartFromDate&quot;:null,&quot;sectionStartToDate&quot;:null,&quot;startDate&quot;:null,&quot;systemIn&quot;:null},&quot;selectedStudyPath&quot;:{&quot;class&quot;:&quot;net.hedtech.banner.student.registration.RegistrationStudyPath&quot;,&quot;description&quot;:null,&quot;keySequenceNumber&quot;:null},&quot;sequenceNumber&quot;:&quot;2&quot;,&quot;sessionId&quot;:null,&quot;specialApproval&quot;:null,&quot;startDate&quot;:&quot;01/05/2011&quot;,&quot;statusDescription&quot;:&quot;Pending&quot;,&quot;statusIndicator&quot;:&quot;P&quot;,&quot;structuredRegistrationDetailSequence&quot;:null,&quot;structuredRegistrationHeaderSequence&quot;:null,&quot;studentAttributeOverride&quot;:&quot;N&quot;,&quot;studyPathKeySequence&quot;:null,&quot;studyPathName&quot;:null,&quot;subject&quot;:&quot;THEA&quot;,&quot;subjectDescription&quot;:&quot;Theatre THEA&quot;,&quot;submitResultIndicator&quot;:null,&quot;term&quot;:&quot;201120&quot;,&quot;testOverride&quot;:&quot;N&quot;,&quot;timeOverride&quot;:&quot;N&quot;,&quot;timeStatusHours&quot;:0,&quot;tuitionWaiverIndicator&quot;:&quot;N&quot;,&quot;version&quot;:1,&quot;voiceResponseStatusType&quot;:&quot;R&quot;,&quot;waitOverride&quot;:&quot;N&quot;,&quot;waivHour&quot;:4},{&quot;addAuthorizationCrnMessage&quot;:null,&quot;addAuthorizationCrnStatus&quot;:&quot;INCOMPLETE&quot;,&quot;addDate&quot;:&quot;01/29/2020&quot;,&quot;approvalOverride&quot;:&quot;N&quot;,&quot;approvalReceivedIndicator&quot;:null,&quot;approvalReceivedIndicatorHold&quot;:null,&quot;attached&quot;:true,&quot;attemptedHours&quot;:0,&quot;authorizationCode&quot;:null,&quot;billHour&quot;:3,&quot;billHourInitial&quot;:3,&quot;billHours&quot;:{&quot;class&quot;:&quot;net.hedtech.banner.student.registration.RegistrationCreditHour&quot;,&quot;creditHourHigh&quot;:null,&quot;creditHourIndicator&quot;:null,&quot;creditHourList&quot;:null,&quot;creditHourLow&quot;:null},&quot;block&quot;:null,&quot;blockPermitOverride&quot;:null,&quot;blockRuleSequenceNumber&quot;:null,&quot;campus&quot;:&quot;M&quot;,&quot;campusOverride&quot;:&quot;N&quot;,&quot;capcOverride&quot;:&quot;N&quot;,&quot;censusEnrollmentDate&quot;:&quot;03/15/2011&quot;,&quot;class&quot;:&quot;net.hedtech.banner.student.registration.RegistrationTemporaryView&quot;,&quot;classOverride&quot;:&quot;N&quot;,&quot;cohortOverride&quot;:&quot;N&quot;,&quot;collegeOverride&quot;:&quot;N&quot;,&quot;completionDate&quot;:&quot;05/15/2099&quot;,&quot;corqOverride&quot;:&quot;N&quot;,&quot;courseContinuingEducationIndicator&quot;:&quot;N&quot;,&quot;courseNumber&quot;:&quot;${courseNumber4}&quot;,&quot;courseReferenceNumber&quot;:&quot;20218&quot;,&quot;courseRegistrationStatus&quot;:&quot;RW&quot;,&quot;courseRegistrationStatusDescription&quot;:&quot;**Web Registered**&quot;,&quot;courseTitle&quot;:&quot;Math C085&quot;,&quot;creditHour&quot;:3,&quot;creditHourInitial&quot;:3,&quot;creditHours&quot;:{&quot;class&quot;:&quot;net.hedtech.banner.student.registration.RegistrationCreditHour&quot;,&quot;creditHourHigh&quot;:null,&quot;creditHourIndicator&quot;:null,&quot;creditHourList&quot;:null,&quot;creditHourLow&quot;:null},&quot;crnErrors&quot;:[],&quot;dataOrigin&quot;:&quot;Banner&quot;,&quot;degreeOverride&quot;:&quot;N&quot;,&quot;departmentOverride&quot;:&quot;N&quot;,&quot;dirty&quot;:false,&quot;dirtyPropertyNames&quot;:[],&quot;duplicateOverride&quot;:&quot;N&quot;,&quot;durationUnit&quot;:null,&quot;errorFlag&quot;:null,&quot;errorLink&quot;:null,&quot;errors&quot;:{&quot;errors&quot;:[]},&quot;grade&quot;:null,&quot;gradeComment&quot;:null,&quot;gradeDate&quot;:null,&quot;gradeMid&quot;:null,&quot;gradingMode&quot;:&quot;S&quot;,&quot;gradingModeDescription&quot;:&quot;Standard Letter&quot;,&quot;id&quot;:${id4},&quot;instructionalMethodDescription&quot;:null,&quot;lastModified&quot;:&quot;01/29/2020&quot;,&quot;lastModifiedBy&quot;:&quot;1110076&quot;,&quot;level&quot;:&quot;UG&quot;,&quot;levelDescription&quot;:&quot;Undergraduate&quot;,&quot;levelOverride&quot;:&quot;N&quot;,&quot;linkOverride&quot;:&quot;N&quot;,&quot;majorOverride&quot;:&quot;N&quot;,&quot;message&quot;:null,&quot;messageType&quot;:null,&quot;mexcOverride&quot;:&quot;N&quot;,&quot;newBlock&quot;:null,&quot;newBlockRuleSequenceNumber&quot;:null,&quot;numberOfUnits&quot;:null,&quot;originalCourseRegistrationStatus&quot;:null,&quot;originalRecordStatus&quot;:&quot;N&quot;,&quot;originalVoiceResponseStatusType&quot;:null,&quot;overrideDurationIndicator&quot;:false,&quot;partOfTerm&quot;:&quot;1&quot;,&quot;partOfTermDescription&quot;:&quot;Full Term&quot;,&quot;permitOverrideUpdate&quot;:null,&quot;preqOverride&quot;:&quot;N&quot;,&quot;programOverride&quot;:&quot;N&quot;,&quot;properties&quot;:{&quot;selectedGradingMode&quot;:{&quot;class&quot;:&quot;net.hedtech.banner.student.registration.RegistrationGradingMode&quot;,&quot;description&quot;:null,&quot;gradingMode&quot;:null},&quot;courseTitle&quot;:&quot;Math C085&quot;,&quot;newBlockRuleSequenceNumber&quot;:null,&quot;statusDescription&quot;:&quot;Pending&quot;,&quot;newBlock&quot;:null,&quot;waivHour&quot;:3,&quot;sequenceNumber&quot;:&quot;1&quot;,&quot;partOfTermDescription&quot;:&quot;Full Term&quot;,&quot;mexcOverride&quot;:&quot;N&quot;,&quot;startDate&quot;:&quot;01/05/2011&quot;,&quot;instructionalMethodDescription&quot;:null,&quot;censusEnrollmentDate&quot;:&quot;03/15/2011&quot;,&quot;gradeMid&quot;:null,&quot;originalRecordStatus&quot;:&quot;N&quot;,&quot;sectionCourseTitle&quot;:&quot;Math C085&quot;,&quot;testOverride&quot;:&quot;N&quot;,&quot;courseReferenceNumber&quot;:&quot;20218&quot;,&quot;gradingModeDescription&quot;:&quot;Standard Letter&quot;,&quot;durationUnit&quot;:null,&quot;levelOverride&quot;:&quot;N&quot;,&quot;level&quot;:&quot;UG&quot;,&quot;removeIndicator&quot;:null,&quot;errorLink&quot;:null,&quot;registrationStatusDate&quot;:&quot;01/29/2020&quot;,&quot;recordStatus&quot;:&quot;N&quot;,&quot;dataOrigin&quot;:&quot;Banner&quot;,&quot;permitOverrideUpdate&quot;:null,&quot;attemptedHours&quot;:0,&quot;originalVoiceResponseStatusType&quot;:null,&quot;gradingMode&quot;:&quot;S&quot;,&quot;pidm&quot;:111163,&quot;selectedAction&quot;:null,&quot;completionDate&quot;:&quot;05/15/2099&quot;,&quot;message&quot;:null,&quot;courseRegistrationStatus&quot;:&quot;RW&quot;,&quot;studentAttributeOverride&quot;:&quot;N&quot;,&quot;approvalOverride&quot;:&quot;N&quot;,&quot;classOverride&quot;:&quot;N&quot;,&quot;campusOverride&quot;:&quot;N&quot;,&quot;overrideDurationIndicator&quot;:false,&quot;billHourInitial&quot;:3,&quot;courseContinuingEducationIndicator&quot;:&quot;N&quot;,&quot;registrationOverrides&quot;:[],&quot;creditHours&quot;:{&quot;class&quot;:&quot;net.hedtech.banner.student.registration.RegistrationCreditHour&quot;,&quot;creditHourHigh&quot;:null,&quot;creditHourIndicator&quot;:null,&quot;creditHourList&quot;:null,&quot;creditHourLow&quot;:null},&quot;specialApproval&quot;:null,&quot;preqOverride&quot;:&quot;N&quot;,&quot;majorOverride&quot;:&quot;N&quot;,&quot;approvalReceivedIndicatorHold&quot;:null,&quot;repeatOverride&quot;:&quot;N&quot;,&quot;tuitionWaiverIndicator&quot;:&quot;N&quot;,&quot;courseRegistrationStatusDescription&quot;:&quot;**Web Registered**&quot;,&quot;programOverride&quot;:&quot;N&quot;,&quot;scheduleDescription&quot;:&quot;Lecture&quot;,&quot;creditHour&quot;:3,&quot;registrationGradingModes&quot;:[{&quot;class&quot;:&quot;net.hedtech.banner.student.registration.RegistrationGradingMode&quot;,&quot;description&quot;:&quot;Standard Letter&quot;,&quot;gradingMode&quot;:&quot;S&quot;}],&quot;timeStatusHours&quot;:0,&quot;scheduleType&quot;:&quot;L&quot;,&quot;creditHourInitial&quot;:3,&quot;registrationActions&quot;:[{&quot;class&quot;:&quot;net.hedtech.banner.student.registration.RegistrationAction&quot;,&quot;courseRegistrationStatus&quot;:&quot;RW&quot;,&quot;description&quot;:&quot;**Web Registered**&quot;,&quot;registrationStatusDate&quot;:null,&quot;remove&quot;:false,&quot;subActions&quot;:null,&quot;voiceType&quot;:&quot;R&quot;},{&quot;class&quot;:&quot;net.hedtech.banner.student.registration.RegistrationAction&quot;,&quot;courseRegistrationStatus&quot;:&quot;internal-remove&quot;,&quot;description&quot;:&quot;Remove&quot;,&quot;registrationStatusDate&quot;:null,&quot;remove&quot;:true,&quot;subActions&quot;:null,&quot;voiceType&quot;:null}],&quot;departmentOverride&quot;:&quot;N&quot;,&quot;grade&quot;:null,&quot;approvalReceivedIndicator&quot;:null,&quot;structuredRegistrationHeaderSequence&quot;:null,&quot;addDate&quot;:&quot;01/29/2020&quot;,&quot;capcOverride&quot;:&quot;N&quot;,&quot;addAuthorizationCrnStatus&quot;:&quot;INCOMPLETE&quot;,&quot;selectedStudyPath&quot;:{&quot;class&quot;:&quot;net.hedtech.banner.student.registration.RegistrationStudyPath&quot;,&quot;description&quot;:null,&quot;keySequenceNumber&quot;:null},&quot;gradeComment&quot;:null,&quot;block&quot;:null,&quot;lastModified&quot;:&quot;01/29/2020&quot;,&quot;selectedCreditHour&quot;:null,&quot;messageType&quot;:null,&quot;reservedKey&quot;:null,&quot;voiceResponseStatusType&quot;:&quot;R&quot;,&quot;subject&quot;:&quot;MATH&quot;,&quot;levelDescription&quot;:&quot;Undergraduate&quot;,&quot;errorFlag&quot;:null,&quot;selectedLevel&quot;:{&quot;class&quot;:&quot;net.hedtech.banner.student.registration.RegistrationLevel&quot;,&quot;description&quot;:null,&quot;level&quot;:null},&quot;subjectDescription&quot;:&quot;Mathematics MATH&quot;,&quot;registrationToDate&quot;:null,&quot;collegeOverride&quot;:&quot;N&quot;,&quot;partOfTerm&quot;:&quot;1&quot;,&quot;cohortOverride&quot;:&quot;N&quot;,&quot;billHours&quot;:{&quot;class&quot;:&quot;net.hedtech.banner.student.registration.RegistrationCreditHour&quot;,&quot;creditHourHigh&quot;:null,&quot;creditHourIndicator&quot;:null,&quot;creditHourList&quot;:null,&quot;creditHourLow&quot;:null},&quot;gradeDate&quot;:null,&quot;selectedBillHour&quot;:null,&quot;selectedStartEndDate&quot;:{&quot;class&quot;:&quot;net.hedtech.banner.student.registration.RegistrationOlrStartEndDate&quot;,&quot;courseReferenceNumber&quot;:null,&quot;durationUnit&quot;:null,&quot;durationUnitDescription&quot;:null,&quot;endDate&quot;:null,&quot;numberOfUnits&quot;:null,&quot;overrideDurationIndicator&quot;:null,&quot;registrationDate&quot;:null,&quot;sectionEndFromDate&quot;:null,&quot;sectionEndToDate&quot;:null,&quot;sectionStartFromDate&quot;:null,&quot;sectionStartToDate&quot;:null,&quot;startDate&quot;:null,&quot;systemIn&quot;:null},&quot;term&quot;:&quot;201120&quot;,&quot;numberOfUnits&quot;:null,&quot;studyPathKeySequence&quot;:null,&quot;crnErrors&quot;:[],&quot;blockPermitOverride&quot;:null,&quot;studyPathName&quot;:null,&quot;statusIndicator&quot;:&quot;P&quot;,&quot;sessionId&quot;:null,&quot;billHour&quot;:3,&quot;registrationFromDate&quot;:null,&quot;duplicateOverride&quot;:&quot;N&quot;,&quot;blockRuleSequenceNumber&quot;:null,&quot;structuredRegistrationDetailSequence&quot;:null,&quot;registrationLevels&quot;:[{&quot;class&quot;:&quot;net.hedtech.banner.student.registration.RegistrationLevel&quot;,&quot;description&quot;:&quot;Undergraduate&quot;,&quot;level&quot;:&quot;UG&quot;}],&quot;lastModifiedBy&quot;:&quot;1110076&quot;,&quot;waitOverride&quot;:&quot;N&quot;,&quot;submitResultIndicator&quot;:null,&quot;degreeOverride&quot;:&quot;N&quot;,&quot;campus&quot;:&quot;M&quot;,&quot;selectedOverride&quot;:null,&quot;corqOverride&quot;:&quot;N&quot;,&quot;registrationAuthorizationActiveCode&quot;:&quot;N&quot;,&quot;linkOverride&quot;:&quot;N&quot;,&quot;courseNumber&quot;:&quot;${courseNumber4}&quot;,&quot;timeOverride&quot;:&quot;N&quot;,&quot;authorizationCode&quot;:null,&quot;originalCourseRegistrationStatus&quot;:null,&quot;addAuthorizationCrnMessage&quot;:null,&quot;registrationStudyPaths&quot;:[],&quot;rpthOverride&quot;:&quot;N&quot;},&quot;recordStatus&quot;:&quot;N&quot;,&quot;registrationActions&quot;:[{&quot;class&quot;:&quot;net.hedtech.banner.student.registration.RegistrationAction&quot;,&quot;courseRegistrationStatus&quot;:&quot;RW&quot;,&quot;description&quot;:&quot;**Web Registered**&quot;,&quot;registrationStatusDate&quot;:null,&quot;remove&quot;:false,&quot;subActions&quot;:null,&quot;voiceType&quot;:&quot;R&quot;},{&quot;class&quot;:&quot;net.hedtech.banner.student.registration.RegistrationAction&quot;,&quot;courseRegistrationStatus&quot;:&quot;internal-remove&quot;,&quot;description&quot;:&quot;Remove&quot;,&quot;registrationStatusDate&quot;:null,&quot;remove&quot;:true,&quot;subActions&quot;:null,&quot;voiceType&quot;:null}],&quot;registrationAuthorizationActiveCode&quot;:&quot;N&quot;,&quot;registrationFromDate&quot;:null,&quot;registrationGradingModes&quot;:[{&quot;class&quot;:&quot;net.hedtech.banner.student.registration.RegistrationGradingMode&quot;,&quot;description&quot;:&quot;Standard Letter&quot;,&quot;gradingMode&quot;:&quot;S&quot;}],&quot;registrationLevels&quot;:[{&quot;class&quot;:&quot;net.hedtech.banner.student.registration.RegistrationLevel&quot;,&quot;description&quot;:&quot;Undergraduate&quot;,&quot;level&quot;:&quot;UG&quot;}],&quot;registrationOverrides&quot;:[],&quot;registrationStatusDate&quot;:&quot;01/29/2020&quot;,&quot;registrationStudyPaths&quot;:[],&quot;registrationToDate&quot;:null,&quot;removeIndicator&quot;:null,&quot;repeatOverride&quot;:&quot;N&quot;,&quot;reservedKey&quot;:null,&quot;rpthOverride&quot;:&quot;N&quot;,&quot;scheduleDescription&quot;:&quot;Lecture&quot;,&quot;scheduleType&quot;:&quot;L&quot;,&quot;sectionCourseTitle&quot;:&quot;Math C085&quot;,&quot;selectedAction&quot;:null,&quot;selectedBillHour&quot;:null,&quot;selectedCreditHour&quot;:null,&quot;selectedGradingMode&quot;:{&quot;class&quot;:&quot;net.hedtech.banner.student.registration.RegistrationGradingMode&quot;,&quot;description&quot;:null,&quot;gradingMode&quot;:null},&quot;selectedLevel&quot;:{&quot;class&quot;:&quot;net.hedtech.banner.student.registration.RegistrationLevel&quot;,&quot;description&quot;:null,&quot;level&quot;:null},&quot;selectedOverride&quot;:null,&quot;selectedStartEndDate&quot;:{&quot;class&quot;:&quot;net.hedtech.banner.student.registration.RegistrationOlrStartEndDate&quot;,&quot;courseReferenceNumber&quot;:null,&quot;durationUnit&quot;:null,&quot;durationUnitDescription&quot;:null,&quot;endDate&quot;:null,&quot;numberOfUnits&quot;:null,&quot;overrideDurationIndicator&quot;:null,&quot;registrationDate&quot;:null,&quot;sectionEndFromDate&quot;:null,&quot;sectionEndToDate&quot;:null,&quot;sectionStartFromDate&quot;:null,&quot;sectionStartToDate&quot;:null,&quot;startDate&quot;:null,&quot;systemIn&quot;:null},&quot;selectedStudyPath&quot;:{&quot;class&quot;:&quot;net.hedtech.banner.student.registration.RegistrationStudyPath&quot;,&quot;description&quot;:null,&quot;keySequenceNumber&quot;:null},&quot;sequenceNumber&quot;:&quot;1&quot;,&quot;sessionId&quot;:null,&quot;specialApproval&quot;:null,&quot;startDate&quot;:&quot;01/05/2011&quot;,&quot;statusDescription&quot;:&quot;Pending&quot;,&quot;statusIndicator&quot;:&quot;P&quot;,&quot;structuredRegistrationDetailSequence&quot;:null,&quot;structuredRegistrationHeaderSequence&quot;:null,&quot;studentAttributeOverride&quot;:&quot;N&quot;,&quot;studyPathKeySequence&quot;:null,&quot;studyPathName&quot;:null,&quot;subject&quot;:&quot;MATH&quot;,&quot;subjectDescription&quot;:&quot;Mathematics MATH&quot;,&quot;submitResultIndicator&quot;:null,&quot;term&quot;:&quot;201120&quot;,&quot;testOverride&quot;:&quot;N&quot;,&quot;timeOverride&quot;:&quot;N&quot;,&quot;timeStatusHours&quot;:0,&quot;tuitionWaiverIndicator&quot;:&quot;N&quot;,&quot;version&quot;:1,&quot;voiceResponseStatusType&quot;:&quot;R&quot;,&quot;waitOverride&quot;:&quot;N&quot;,&quot;waivHour&quot;:3},{&quot;addAuthorizationCrnMessage&quot;:null,&quot;addAuthorizationCrnStatus&quot;:&quot;INCOMPLETE&quot;,&quot;addDate&quot;:&quot;01/29/2020&quot;,&quot;approvalOverride&quot;:&quot;N&quot;,&quot;approvalReceivedIndicator&quot;:null,&quot;approvalReceivedIndicatorHold&quot;:null,&quot;attached&quot;:true,&quot;attemptedHours&quot;:0,&quot;authorizationCode&quot;:null,&quot;billHour&quot;:3,&quot;billHourInitial&quot;:3,&quot;billHours&quot;:{&quot;class&quot;:&quot;net.hedtech.banner.student.registration.RegistrationCreditHour&quot;,&quot;creditHourHigh&quot;:null,&quot;creditHourIndicator&quot;:null,&quot;creditHourList&quot;:null,&quot;creditHourLow&quot;:null},&quot;block&quot;:null,&quot;blockPermitOverride&quot;:null,&quot;blockRuleSequenceNumber&quot;:null,&quot;campus&quot;:&quot;M&quot;,&quot;campusOverride&quot;:&quot;N&quot;,&quot;capcOverride&quot;:&quot;N&quot;,&quot;censusEnrollmentDate&quot;:&quot;03/15/2011&quot;,&quot;class&quot;:&quot;net.hedtech.banner.student.registration.RegistrationTemporaryView&quot;,&quot;classOverride&quot;:&quot;N&quot;,&quot;cohortOverride&quot;:&quot;N&quot;,&quot;collegeOverride&quot;:&quot;N&quot;,&quot;completionDate&quot;:&quot;05/15/2099&quot;,&quot;corqOverride&quot;:&quot;N&quot;,&quot;courseContinuingEducationIndicator&quot;:&quot;N&quot;,&quot;courseNumber&quot;:&quot;${courseNumber3}&quot;,&quot;courseReferenceNumber&quot;:&quot;21162&quot;,&quot;courseRegistrationStatus&quot;:&quot;RW&quot;,&quot;courseRegistrationStatusDescription&quot;:&quot;**Web Registered**&quot;,&quot;courseTitle&quot;:&quot;Moral Philosophy&quot;,&quot;creditHour&quot;:3,&quot;creditHourInitial&quot;:3,&quot;creditHours&quot;:{&quot;class&quot;:&quot;net.hedtech.banner.student.registration.RegistrationCreditHour&quot;,&quot;creditHourHigh&quot;:null,&quot;creditHourIndicator&quot;:null,&quot;creditHourList&quot;:null,&quot;creditHourLow&quot;:null},&quot;crnErrors&quot;:[],&quot;dataOrigin&quot;:&quot;Banner&quot;,&quot;degreeOverride&quot;:&quot;N&quot;,&quot;departmentOverride&quot;:&quot;N&quot;,&quot;dirty&quot;:false,&quot;dirtyPropertyNames&quot;:[],&quot;duplicateOverride&quot;:&quot;N&quot;,&quot;durationUnit&quot;:null,&quot;errorFlag&quot;:null,&quot;errorLink&quot;:null,&quot;errors&quot;:{&quot;errors&quot;:[]},&quot;grade&quot;:null,&quot;gradeComment&quot;:null,&quot;gradeDate&quot;:null,&quot;gradeMid&quot;:null,&quot;gradingMode&quot;:&quot;S&quot;,&quot;gradingModeDescription&quot;:&quot;Standard Letter&quot;,&quot;id&quot;:${id3},&quot;instructionalMethodDescription&quot;:null,&quot;lastModified&quot;:&quot;01/29/2020&quot;,&quot;lastModifiedBy&quot;:&quot;1110076&quot;,&quot;level&quot;:&quot;UG&quot;,&quot;levelDescription&quot;:&quot;Undergraduate&quot;,&quot;levelOverride&quot;:&quot;N&quot;,&quot;linkOverride&quot;:&quot;N&quot;,&quot;majorOverride&quot;:&quot;N&quot;,&quot;message&quot;:null,&quot;messageType&quot;:null,&quot;mexcOverride&quot;:&quot;N&quot;,&quot;newBlock&quot;:null,&quot;newBlockRuleSequenceNumber&quot;:null,&quot;numberOfUnits&quot;:null,&quot;originalCourseRegistrationStatus&quot;:null,&quot;originalRecordStatus&quot;:&quot;N&quot;,&quot;originalVoiceResponseStatusType&quot;:null,&quot;overrideDurationIndicator&quot;:false,&quot;partOfTerm&quot;:&quot;1&quot;,&quot;partOfTermDescription&quot;:&quot;Full Term&quot;,&quot;permitOverrideUpdate&quot;:null,&quot;preqOverride&quot;:&quot;N&quot;,&quot;programOverride&quot;:&quot;N&quot;,&quot;properties&quot;:{&quot;selectedStartEndDate&quot;:{&quot;class&quot;:&quot;net.hedtech.banner.student.registration.RegistrationOlrStartEndDate&quot;,&quot;courseReferenceNumber&quot;:null,&quot;durationUnit&quot;:null,&quot;durationUnitDescription&quot;:null,&quot;endDate&quot;:null,&quot;numberOfUnits&quot;:null,&quot;overrideDurationIndicator&quot;:null,&quot;registrationDate&quot;:null,&quot;sectionEndFromDate&quot;:null,&quot;sectionEndToDate&quot;:null,&quot;sectionStartFromDate&quot;:null,&quot;sectionStartToDate&quot;:null,&quot;startDate&quot;:null,&quot;systemIn&quot;:null},&quot;courseTitle&quot;:&quot;Moral Philosophy&quot;,&quot;newBlockRuleSequenceNumber&quot;:null,&quot;statusDescription&quot;:&quot;Pending&quot;,&quot;newBlock&quot;:null,&quot;waivHour&quot;:3,&quot;partOfTermDescription&quot;:&quot;Full Term&quot;,&quot;mexcOverride&quot;:&quot;N&quot;,&quot;sequenceNumber&quot;:&quot;4&quot;,&quot;sectionCourseTitle&quot;:&quot;Moral Philosophy&quot;,&quot;startDate&quot;:&quot;01/05/2011&quot;,&quot;creditHours&quot;:{&quot;class&quot;:&quot;net.hedtech.banner.student.registration.RegistrationCreditHour&quot;,&quot;creditHourHigh&quot;:null,&quot;creditHourIndicator&quot;:null,&quot;creditHourList&quot;:null,&quot;creditHourLow&quot;:null},&quot;instructionalMethodDescription&quot;:null,&quot;censusEnrollmentDate&quot;:&quot;03/15/2011&quot;,&quot;gradeMid&quot;:null,&quot;originalRecordStatus&quot;:&quot;N&quot;,&quot;testOverride&quot;:&quot;N&quot;,&quot;registrationStatusDate&quot;:&quot;01/29/2020&quot;,&quot;gradingModeDescription&quot;:&quot;Standard Letter&quot;,&quot;durationUnit&quot;:null,&quot;levelOverride&quot;:&quot;N&quot;,&quot;level&quot;:&quot;UG&quot;,&quot;removeIndicator&quot;:null,&quot;billHours&quot;:{&quot;class&quot;:&quot;net.hedtech.banner.student.registration.RegistrationCreditHour&quot;,&quot;creditHourHigh&quot;:null,&quot;creditHourIndicator&quot;:null,&quot;creditHourList&quot;:null,&quot;creditHourLow&quot;:null},&quot;errorLink&quot;:null,&quot;recordStatus&quot;:&quot;N&quot;,&quot;dataOrigin&quot;:&quot;Banner&quot;,&quot;permitOverrideUpdate&quot;:null,&quot;attemptedHours&quot;:0,&quot;originalVoiceResponseStatusType&quot;:null,&quot;gradingMode&quot;:&quot;S&quot;,&quot;pidm&quot;:111163,&quot;selectedAction&quot;:null,&quot;completionDate&quot;:&quot;05/15/2099&quot;,&quot;message&quot;:null,&quot;courseRegistrationStatus&quot;:&quot;RW&quot;,&quot;studentAttributeOverride&quot;:&quot;N&quot;,&quot;approvalOverride&quot;:&quot;N&quot;,&quot;classOverride&quot;:&quot;N&quot;,&quot;campusOverride&quot;:&quot;N&quot;,&quot;overrideDurationIndicator&quot;:false,&quot;billHourInitial&quot;:3,&quot;courseContinuingEducationIndicator&quot;:&quot;N&quot;,&quot;registrationOverrides&quot;:[],&quot;selectedGradingMode&quot;:{&quot;class&quot;:&quot;net.hedtech.banner.student.registration.RegistrationGradingMode&quot;,&quot;description&quot;:null,&quot;gradingMode&quot;:null},&quot;specialApproval&quot;:null,&quot;preqOverride&quot;:&quot;N&quot;,&quot;majorOverride&quot;:&quot;N&quot;,&quot;approvalReceivedIndicatorHold&quot;:null,&quot;repeatOverride&quot;:&quot;N&quot;,&quot;tuitionWaiverIndicator&quot;:&quot;N&quot;,&quot;courseRegistrationStatusDescription&quot;:&quot;**Web Registered**&quot;,&quot;programOverride&quot;:&quot;N&quot;,&quot;scheduleDescription&quot;:&quot;Lecture&quot;,&quot;creditHour&quot;:3,&quot;timeStatusHours&quot;:0,&quot;scheduleType&quot;:&quot;L&quot;,&quot;creditHourInitial&quot;:3,&quot;departmentOverride&quot;:&quot;N&quot;,&quot;grade&quot;:null,&quot;approvalReceivedIndicator&quot;:null,&quot;courseNumber&quot;:&quot;${courseNumber3}&quot;,&quot;structuredRegistrationHeaderSequence&quot;:null,&quot;capcOverride&quot;:&quot;N&quot;,&quot;addAuthorizationCrnStatus&quot;:&quot;INCOMPLETE&quot;,&quot;gradeComment&quot;:null,&quot;block&quot;:null,&quot;lastModified&quot;:&quot;01/29/2020&quot;,&quot;selectedCreditHour&quot;:null,&quot;messageType&quot;:null,&quot;reservedKey&quot;:null,&quot;voiceResponseStatusType&quot;:&quot;R&quot;,&quot;levelDescription&quot;:&quot;Undergraduate&quot;,&quot;errorFlag&quot;:null,&quot;registrationToDate&quot;:null,&quot;addDate&quot;:&quot;01/29/2020&quot;,&quot;collegeOverride&quot;:&quot;N&quot;,&quot;subject&quot;:&quot;PHIL&quot;,&quot;partOfTerm&quot;:&quot;1&quot;,&quot;cohortOverride&quot;:&quot;N&quot;,&quot;subjectDescription&quot;:&quot;Philosophy PHIL&quot;,&quot;gradeDate&quot;:null,&quot;selectedBillHour&quot;:null,&quot;term&quot;:&quot;201120&quot;,&quot;numberOfUnits&quot;:null,&quot;studyPathKeySequence&quot;:null,&quot;crnErrors&quot;:[],&quot;blockPermitOverride&quot;:null,&quot;studyPathName&quot;:null,&quot;statusIndicator&quot;:&quot;P&quot;,&quot;sessionId&quot;:null,&quot;billHour&quot;:3,&quot;selectedStudyPath&quot;:{&quot;class&quot;:&quot;net.hedtech.banner.student.registration.RegistrationStudyPath&quot;,&quot;description&quot;:null,&quot;keySequenceNumber&quot;:null},&quot;registrationFromDate&quot;:null,&quot;duplicateOverride&quot;:&quot;N&quot;,&quot;blockRuleSequenceNumber&quot;:null,&quot;registrationActions&quot;:[{&quot;class&quot;:&quot;net.hedtech.banner.student.registration.RegistrationAction&quot;,&quot;courseRegistrationStatus&quot;:&quot;RW&quot;,&quot;description&quot;:&quot;**Web Registered**&quot;,&quot;registrationStatusDate&quot;:null,&quot;remove&quot;:false,&quot;subActions&quot;:null,&quot;voiceType&quot;:&quot;R&quot;},{&quot;class&quot;:&quot;net.hedtech.banner.student.registration.RegistrationAction&quot;,&quot;courseRegistrationStatus&quot;:&quot;internal-remove&quot;,&quot;description&quot;:&quot;Remove&quot;,&quot;registrationStatusDate&quot;:null,&quot;remove&quot;:true,&quot;subActions&quot;:null,&quot;voiceType&quot;:null}],&quot;structuredRegistrationDetailSequence&quot;:null,&quot;lastModifiedBy&quot;:&quot;1110076&quot;,&quot;waitOverride&quot;:&quot;N&quot;,&quot;selectedLevel&quot;:{&quot;class&quot;:&quot;net.hedtech.banner.student.registration.RegistrationLevel&quot;,&quot;description&quot;:null,&quot;level&quot;:null},&quot;submitResultIndicator&quot;:null,&quot;degreeOverride&quot;:&quot;N&quot;,&quot;campus&quot;:&quot;M&quot;,&quot;selectedOverride&quot;:null,&quot;corqOverride&quot;:&quot;N&quot;,&quot;registrationGradingModes&quot;:[{&quot;class&quot;:&quot;net.hedtech.banner.student.registration.RegistrationGradingMode&quot;,&quot;description&quot;:&quot;Audit&quot;,&quot;gradingMode&quot;:&quot;A&quot;},{&quot;class&quot;:&quot;net.hedtech.banner.student.registration.RegistrationGradingMode&quot;,&quot;description&quot;:&quot;Pass/Fail&quot;,&quot;gradingMode&quot;:&quot;P&quot;},{&quot;class&quot;:&quot;net.hedtech.banner.student.registration.RegistrationGradingMode&quot;,&quot;description&quot;:&quot;Standard Letter&quot;,&quot;gradingMode&quot;:&quot;S&quot;}],&quot;registrationAuthorizationActiveCode&quot;:&quot;N&quot;,&quot;linkOverride&quot;:&quot;N&quot;,&quot;registrationLevels&quot;:[{&quot;class&quot;:&quot;net.hedtech.banner.student.registration.RegistrationLevel&quot;,&quot;description&quot;:&quot;Credit&quot;,&quot;level&quot;:&quot;CR&quot;},{&quot;class&quot;:&quot;net.hedtech.banner.student.registration.RegistrationLevel&quot;,&quot;description&quot;:&quot;Undergraduate&quot;,&quot;level&quot;:&quot;UG&quot;}],&quot;timeOverride&quot;:&quot;N&quot;,&quot;courseReferenceNumber&quot;:&quot;21162&quot;,&quot;authorizationCode&quot;:null,&quot;originalCourseRegistrationStatus&quot;:null,&quot;addAuthorizationCrnMessage&quot;:null,&quot;registrationStudyPaths&quot;:[],&quot;rpthOverride&quot;:&quot;N&quot;},&quot;recordStatus&quot;:&quot;N&quot;,&quot;registrationActions&quot;:[{&quot;class&quot;:&quot;net.hedtech.banner.student.registration.RegistrationAction&quot;,&quot;courseRegistrationStatus&quot;:&quot;RW&quot;,&quot;description&quot;:&quot;**Web Registered**&quot;,&quot;registrationStatusDate&quot;:null,&quot;remove&quot;:false,&quot;subActions&quot;:null,&quot;voiceType&quot;:&quot;R&quot;},{&quot;class&quot;:&quot;net.hedtech.banner.student.registration.RegistrationAction&quot;,&quot;courseRegistrationStatus&quot;:&quot;internal-remove&quot;,&quot;description&quot;:&quot;Remove&quot;,&quot;registrationStatusDate&quot;:null,&quot;remove&quot;:true,&quot;subActions&quot;:null,&quot;voiceType&quot;:null}],&quot;registrationAuthorizationActiveCode&quot;:&quot;N&quot;,&quot;registrationFromDate&quot;:null,&quot;registrationGradingModes&quot;:[{&quot;class&quot;:&quot;net.hedtech.banner.student.registration.RegistrationGradingMode&quot;,&quot;description&quot;:&quot;Audit&quot;,&quot;gradingMode&quot;:&quot;A&quot;},{&quot;class&quot;:&quot;net.hedtech.banner.student.registration.RegistrationGradingMode&quot;,&quot;description&quot;:&quot;Pass/Fail&quot;,&quot;gradingMode&quot;:&quot;P&quot;},{&quot;class&quot;:&quot;net.hedtech.banner.student.registration.RegistrationGradingMode&quot;,&quot;description&quot;:&quot;Standard Letter&quot;,&quot;gradingMode&quot;:&quot;S&quot;}],&quot;registrationLevels&quot;:[{&quot;class&quot;:&quot;net.hedtech.banner.student.registration.RegistrationLevel&quot;,&quot;description&quot;:&quot;Credit&quot;,&quot;level&quot;:&quot;CR&quot;},{&quot;class&quot;:&quot;net.hedtech.banner.student.registration.RegistrationLevel&quot;,&quot;description&quot;:&quot;Undergraduate&quot;,&quot;level&quot;:&quot;UG&quot;}],&quot;registrationOverrides&quot;:[],&quot;registrationStatusDate&quot;:&quot;01/29/2020&quot;,&quot;registrationStudyPaths&quot;:[],&quot;registrationToDate&quot;:null,&quot;removeIndicator&quot;:null,&quot;repeatOverride&quot;:&quot;N&quot;,&quot;reservedKey&quot;:null,&quot;rpthOverride&quot;:&quot;N&quot;,&quot;scheduleDescription&quot;:&quot;Lecture&quot;,&quot;scheduleType&quot;:&quot;L&quot;,&quot;sectionCourseTitle&quot;:&quot;Moral Philosophy&quot;,&quot;selectedAction&quot;:null,&quot;selectedBillHour&quot;:null,&quot;selectedCreditHour&quot;:null,&quot;selectedGradingMode&quot;:{&quot;class&quot;:&quot;net.hedtech.banner.student.registration.RegistrationGradingMode&quot;,&quot;description&quot;:null,&quot;gradingMode&quot;:null},&quot;selectedLevel&quot;:{&quot;class&quot;:&quot;net.hedtech.banner.student.registration.RegistrationLevel&quot;,&quot;description&quot;:null,&quot;level&quot;:null},&quot;selectedOverride&quot;:null,&quot;selectedStartEndDate&quot;:{&quot;class&quot;:&quot;net.hedtech.banner.student.registration.RegistrationOlrStartEndDate&quot;,&quot;courseReferenceNumber&quot;:null,&quot;durationUnit&quot;:null,&quot;durationUnitDescription&quot;:null,&quot;endDate&quot;:null,&quot;numberOfUnits&quot;:null,&quot;overrideDurationIndicator&quot;:null,&quot;registrationDate&quot;:null,&quot;sectionEndFromDate&quot;:null,&quot;sectionEndToDate&quot;:null,&quot;sectionStartFromDate&quot;:null,&quot;sectionStartToDate&quot;:null,&quot;startDate&quot;:null,&quot;systemIn&quot;:null},&quot;selectedStudyPath&quot;:{&quot;class&quot;:&quot;net.hedtech.banner.student.registration.RegistrationStudyPath&quot;,&quot;description&quot;:null,&quot;keySequenceNumber&quot;:null},&quot;sequenceNumber&quot;:&quot;4&quot;,&quot;sessionId&quot;:null,&quot;specialApproval&quot;:null,&quot;startDate&quot;:&quot;01/05/2011&quot;,&quot;statusDescription&quot;:&quot;Pending&quot;,&quot;statusIndicator&quot;:&quot;P&quot;,&quot;structuredRegistrationDetailSequence&quot;:null,&quot;structuredRegistrationHeaderSequence&quot;:null,&quot;studentAttributeOverride&quot;:&quot;N&quot;,&quot;studyPathKeySequence&quot;:null,&quot;studyPathName&quot;:null,&quot;subject&quot;:&quot;PHIL&quot;,&quot;subjectDescription&quot;:&quot;Philosophy PHIL&quot;,&quot;submitResultIndicator&quot;:null,&quot;term&quot;:&quot;201120&quot;,&quot;testOverride&quot;:&quot;N&quot;,&quot;timeOverride&quot;:&quot;N&quot;,&quot;timeStatusHours&quot;:0,&quot;tuitionWaiverIndicator&quot;:&quot;N&quot;,&quot;version&quot;:1,&quot;voiceResponseStatusType&quot;:&quot;R&quot;,&quot;waitOverride&quot;:&quot;N&quot;,&quot;waivHour&quot;:3},{&quot;addAuthorizationCrnMessage&quot;:null,&quot;addAuthorizationCrnStatus&quot;:&quot;INCOMPLETE&quot;,&quot;addDate&quot;:&quot;01/29/2020&quot;,&quot;approvalOverride&quot;:&quot;N&quot;,&quot;approvalReceivedIndicator&quot;:null,&quot;approvalReceivedIndicatorHold&quot;:null,&quot;attached&quot;:true,&quot;attemptedHours&quot;:0,&quot;authorizationCode&quot;:null,&quot;billHour&quot;:4,&quot;billHourInitial&quot;:4,&quot;billHours&quot;:{&quot;class&quot;:&quot;net.hedtech.banner.student.registration.RegistrationCreditHour&quot;,&quot;creditHourHigh&quot;:null,&quot;creditHourIndicator&quot;:null,&quot;creditHourList&quot;:null,&quot;creditHourLow&quot;:null},&quot;block&quot;:null,&quot;blockPermitOverride&quot;:null,&quot;blockRuleSequenceNumber&quot;:null,&quot;campus&quot;:&quot;M&quot;,&quot;campusOverride&quot;:&quot;N&quot;,&quot;capcOverride&quot;:&quot;N&quot;,&quot;censusEnrollmentDate&quot;:&quot;03/15/2011&quot;,&quot;class&quot;:&quot;net.hedtech.banner.student.registration.RegistrationTemporaryView&quot;,&quot;classOverride&quot;:&quot;N&quot;,&quot;cohortOverride&quot;:&quot;N&quot;,&quot;collegeOverride&quot;:&quot;N&quot;,&quot;completionDate&quot;:&quot;05/15/2099&quot;,&quot;corqOverride&quot;:&quot;N&quot;,&quot;courseContinuingEducationIndicator&quot;:&quot;N&quot;,&quot;courseNumber&quot;:&quot;${courseNumber2}&quot;,&quot;courseReferenceNumber&quot;:&quot;20418&quot;,&quot;courseRegistrationStatus&quot;:&quot;RW&quot;,&quot;courseRegistrationStatusDescription&quot;:&quot;**Web Registered**&quot;,&quot;courseTitle&quot;:&quot;20th Century American Literature&quot;,&quot;creditHour&quot;:4,&quot;creditHourInitial&quot;:4,&quot;creditHours&quot;:{&quot;class&quot;:&quot;net.hedtech.banner.student.registration.RegistrationCreditHour&quot;,&quot;creditHourHigh&quot;:null,&quot;creditHourIndicator&quot;:null,&quot;creditHourList&quot;:null,&quot;creditHourLow&quot;:null},&quot;crnErrors&quot;:[],&quot;dataOrigin&quot;:&quot;Banner&quot;,&quot;degreeOverride&quot;:&quot;N&quot;,&quot;departmentOverride&quot;:&quot;N&quot;,&quot;dirty&quot;:false,&quot;dirtyPropertyNames&quot;:[],&quot;duplicateOverride&quot;:&quot;N&quot;,&quot;durationUnit&quot;:null,&quot;errorFlag&quot;:null,&quot;errorLink&quot;:null,&quot;errors&quot;:{&quot;errors&quot;:[]},&quot;grade&quot;:null,&quot;gradeComment&quot;:null,&quot;gradeDate&quot;:null,&quot;gradeMid&quot;:null,&quot;gradingMode&quot;:&quot;S&quot;,&quot;gradingModeDescription&quot;:&quot;Standard Letter&quot;,&quot;id&quot;:${id2},&quot;instructionalMethodDescription&quot;:null,&quot;lastModified&quot;:&quot;01/29/2020&quot;,&quot;lastModifiedBy&quot;:&quot;1110076&quot;,&quot;level&quot;:&quot;UG&quot;,&quot;levelDescription&quot;:&quot;Undergraduate&quot;,&quot;levelOverride&quot;:&quot;N&quot;,&quot;linkOverride&quot;:&quot;N&quot;,&quot;majorOverride&quot;:&quot;N&quot;,&quot;message&quot;:null,&quot;messageType&quot;:null,&quot;mexcOverride&quot;:&quot;N&quot;,&quot;newBlock&quot;:null,&quot;newBlockRuleSequenceNumber&quot;:null,&quot;numberOfUnits&quot;:null,&quot;originalCourseRegistrationStatus&quot;:null,&quot;originalRecordStatus&quot;:&quot;N&quot;,&quot;originalVoiceResponseStatusType&quot;:null,&quot;overrideDurationIndicator&quot;:false,&quot;partOfTerm&quot;:&quot;1&quot;,&quot;partOfTermDescription&quot;:&quot;Full Term&quot;,&quot;permitOverrideUpdate&quot;:null,&quot;preqOverride&quot;:&quot;N&quot;,&quot;programOverride&quot;:&quot;N&quot;,&quot;properties&quot;:{&quot;newBlockRuleSequenceNumber&quot;:null,&quot;statusDescription&quot;:&quot;Pending&quot;,&quot;newBlock&quot;:null,&quot;courseNumber&quot;:&quot;${courseNumber2}&quot;,&quot;partOfTermDescription&quot;:&quot;Full Term&quot;,&quot;mexcOverride&quot;:&quot;N&quot;,&quot;creditHours&quot;:{&quot;class&quot;:&quot;net.hedtech.banner.student.registration.RegistrationCreditHour&quot;,&quot;creditHourHigh&quot;:null,&quot;creditHourIndicator&quot;:null,&quot;creditHourList&quot;:null,&quot;creditHourLow&quot;:null},&quot;sequenceNumber&quot;:&quot;2&quot;,&quot;startDate&quot;:&quot;01/05/2011&quot;,&quot;instructionalMethodDescription&quot;:null,&quot;billHours&quot;:{&quot;class&quot;:&quot;net.hedtech.banner.student.registration.RegistrationCreditHour&quot;,&quot;creditHourHigh&quot;:null,&quot;creditHourIndicator&quot;:null,&quot;creditHourList&quot;:null,&quot;creditHourLow&quot;:null},&quot;censusEnrollmentDate&quot;:&quot;03/15/2011&quot;,&quot;gradeMid&quot;:null,&quot;originalRecordStatus&quot;:&quot;N&quot;,&quot;testOverride&quot;:&quot;N&quot;,&quot;gradingModeDescription&quot;:&quot;Standard Letter&quot;,&quot;durationUnit&quot;:null,&quot;registrationActions&quot;:[{&quot;class&quot;:&quot;net.hedtech.banner.student.registration.RegistrationAction&quot;,&quot;courseRegistrationStatus&quot;:&quot;RW&quot;,&quot;description&quot;:&quot;**Web Registered**&quot;,&quot;registrationStatusDate&quot;:null,&quot;remove&quot;:false,&quot;subActions&quot;:null,&quot;voiceType&quot;:&quot;R&quot;},{&quot;class&quot;:&quot;net.hedtech.banner.student.registration.RegistrationAction&quot;,&quot;courseRegistrationStatus&quot;:&quot;internal-remove&quot;,&quot;description&quot;:&quot;Remove&quot;,&quot;registrationStatusDate&quot;:null,&quot;remove&quot;:true,&quot;subActions&quot;:null,&quot;voiceType&quot;:null}],&quot;levelOverride&quot;:&quot;N&quot;,&quot;sectionCourseTitle&quot;:&quot;20th Century American Lit.&quot;,&quot;waivHour&quot;:4,&quot;level&quot;:&quot;UG&quot;,&quot;removeIndicator&quot;:null,&quot;errorLink&quot;:null,&quot;recordStatus&quot;:&quot;N&quot;,&quot;dataOrigin&quot;:&quot;Banner&quot;,&quot;permitOverrideUpdate&quot;:null,&quot;attemptedHours&quot;:0,&quot;originalVoiceResponseStatusType&quot;:null,&quot;gradingMode&quot;:&quot;S&quot;,&quot;pidm&quot;:111163,&quot;selectedAction&quot;:null,&quot;completionDate&quot;:&quot;05/15/2099&quot;,&quot;message&quot;:null,&quot;courseRegistrationStatus&quot;:&quot;RW&quot;,&quot;creditHour&quot;:4,&quot;addDate&quot;:&quot;01/29/2020&quot;,&quot;studentAttributeOverride&quot;:&quot;N&quot;,&quot;approvalOverride&quot;:&quot;N&quot;,&quot;classOverride&quot;:&quot;N&quot;,&quot;campusOverride&quot;:&quot;N&quot;,&quot;overrideDurationIndicator&quot;:false,&quot;creditHourInitial&quot;:4,&quot;courseContinuingEducationIndicator&quot;:&quot;N&quot;,&quot;registrationOverrides&quot;:[],&quot;specialApproval&quot;:null,&quot;registrationGradingModes&quot;:[{&quot;class&quot;:&quot;net.hedtech.banner.student.registration.RegistrationGradingMode&quot;,&quot;description&quot;:&quot;Standard Letter&quot;,&quot;gradingMode&quot;:&quot;S&quot;}],&quot;preqOverride&quot;:&quot;N&quot;,&quot;majorOverride&quot;:&quot;N&quot;,&quot;approvalReceivedIndicatorHold&quot;:null,&quot;repeatOverride&quot;:&quot;N&quot;,&quot;tuitionWaiverIndicator&quot;:&quot;N&quot;,&quot;selectedStartEndDate&quot;:{&quot;class&quot;:&quot;net.hedtech.banner.student.registration.RegistrationOlrStartEndDate&quot;,&quot;courseReferenceNumber&quot;:null,&quot;durationUnit&quot;:null,&quot;durationUnitDescription&quot;:null,&quot;endDate&quot;:null,&quot;numberOfUnits&quot;:null,&quot;overrideDurationIndicator&quot;:null,&quot;registrationDate&quot;:null,&quot;sectionEndFromDate&quot;:null,&quot;sectionEndToDate&quot;:null,&quot;sectionStartFromDate&quot;:null,&quot;sectionStartToDate&quot;:null,&quot;startDate&quot;:null,&quot;systemIn&quot;:null},&quot;courseRegistrationStatusDescription&quot;:&quot;**Web Registered**&quot;,&quot;programOverride&quot;:&quot;N&quot;,&quot;scheduleDescription&quot;:&quot;Lecture&quot;,&quot;timeStatusHours&quot;:0,&quot;scheduleType&quot;:&quot;L&quot;,&quot;billHourInitial&quot;:4,&quot;selectedGradingMode&quot;:{&quot;class&quot;:&quot;net.hedtech.banner.student.registration.RegistrationGradingMode&quot;,&quot;description&quot;:null,&quot;gradingMode&quot;:null},&quot;departmentOverride&quot;:&quot;N&quot;,&quot;selectedStudyPath&quot;:{&quot;class&quot;:&quot;net.hedtech.banner.student.registration.RegistrationStudyPath&quot;,&quot;description&quot;:null,&quot;keySequenceNumber&quot;:null},&quot;grade&quot;:null,&quot;approvalReceivedIndicator&quot;:null,&quot;structuredRegistrationHeaderSequence&quot;:null,&quot;selectedLevel&quot;:{&quot;class&quot;:&quot;net.hedtech.banner.student.registration.RegistrationLevel&quot;,&quot;description&quot;:null,&quot;level&quot;:null},&quot;capcOverride&quot;:&quot;N&quot;,&quot;addAuthorizationCrnStatus&quot;:&quot;INCOMPLETE&quot;,&quot;gradeComment&quot;:null,&quot;courseReferenceNumber&quot;:&quot;20418&quot;,&quot;block&quot;:null,&quot;lastModified&quot;:&quot;01/29/2020&quot;,&quot;selectedCreditHour&quot;:null,&quot;messageType&quot;:null,&quot;reservedKey&quot;:null,&quot;voiceResponseStatusType&quot;:&quot;R&quot;,&quot;levelDescription&quot;:&quot;Undergraduate&quot;,&quot;errorFlag&quot;:null,&quot;registrationToDate&quot;:null,&quot;collegeOverride&quot;:&quot;N&quot;,&quot;partOfTerm&quot;:&quot;1&quot;,&quot;subjectDescription&quot;:&quot;English ENGL&quot;,&quot;cohortOverride&quot;:&quot;N&quot;,&quot;gradeDate&quot;:null,&quot;selectedBillHour&quot;:null,&quot;term&quot;:&quot;201120&quot;,&quot;numberOfUnits&quot;:null,&quot;studyPathKeySequence&quot;:null,&quot;crnErrors&quot;:[],&quot;blockPermitOverride&quot;:null,&quot;studyPathName&quot;:null,&quot;statusIndicator&quot;:&quot;P&quot;,&quot;sessionId&quot;:null,&quot;registrationLevels&quot;:[{&quot;class&quot;:&quot;net.hedtech.banner.student.registration.RegistrationLevel&quot;,&quot;description&quot;:&quot;Undergraduate&quot;,&quot;level&quot;:&quot;UG&quot;}],&quot;registrationFromDate&quot;:null,&quot;duplicateOverride&quot;:&quot;N&quot;,&quot;blockRuleSequenceNumber&quot;:null,&quot;structuredRegistrationDetailSequence&quot;:null,&quot;lastModifiedBy&quot;:&quot;1110076&quot;,&quot;waitOverride&quot;:&quot;N&quot;,&quot;submitResultIndicator&quot;:null,&quot;degreeOverride&quot;:&quot;N&quot;,&quot;subject&quot;:&quot;ENGL&quot;,&quot;campus&quot;:&quot;M&quot;,&quot;selectedOverride&quot;:null,&quot;corqOverride&quot;:&quot;N&quot;,&quot;registrationAuthorizationActiveCode&quot;:&quot;N&quot;,&quot;linkOverride&quot;:&quot;N&quot;,&quot;timeOverride&quot;:&quot;N&quot;,&quot;billHour&quot;:4,&quot;courseTitle&quot;:&quot;20th Century American Literature&quot;,&quot;authorizationCode&quot;:null,&quot;registrationStatusDate&quot;:&quot;01/29/2020&quot;,&quot;originalCourseRegistrationStatus&quot;:null,&quot;addAuthorizationCrnMessage&quot;:null,&quot;registrationStudyPaths&quot;:[],&quot;rpthOverride&quot;:&quot;N&quot;},&quot;recordStatus&quot;:&quot;N&quot;,&quot;registrationActions&quot;:[{&quot;class&quot;:&quot;net.hedtech.banner.student.registration.RegistrationAction&quot;,&quot;courseRegistrationStatus&quot;:&quot;RW&quot;,&quot;description&quot;:&quot;**Web Registered**&quot;,&quot;registrationStatusDate&quot;:null,&quot;remove&quot;:false,&quot;subActions&quot;:null,&quot;voiceType&quot;:&quot;R&quot;},{&quot;class&quot;:&quot;net.hedtech.banner.student.registration.RegistrationAction&quot;,&quot;courseRegistrationStatus&quot;:&quot;internal-remove&quot;,&quot;description&quot;:&quot;Remove&quot;,&quot;registrationStatusDate&quot;:null,&quot;remove&quot;:true,&quot;subActions&quot;:null,&quot;voiceType&quot;:null}],&quot;registrationAuthorizationActiveCode&quot;:&quot;N&quot;,&quot;registrationFromDate&quot;:null,&quot;registrationGradingModes&quot;:[{&quot;class&quot;:&quot;net.hedtech.banner.student.registration.RegistrationGradingMode&quot;,&quot;description&quot;:&quot;Standard Letter&quot;,&quot;gradingMode&quot;:&quot;S&quot;}],&quot;registrationLevels&quot;:[{&quot;class&quot;:&quot;net.hedtech.banner.student.registration.RegistrationLevel&quot;,&quot;description&quot;:&quot;Undergraduate&quot;,&quot;level&quot;:&quot;UG&quot;}],&quot;registrationOverrides&quot;:[],&quot;registrationStatusDate&quot;:&quot;01/29/2020&quot;,&quot;registrationStudyPaths&quot;:[],&quot;registrationToDate&quot;:null,&quot;removeIndicator&quot;:null,&quot;repeatOverride&quot;:&quot;N&quot;,&quot;reservedKey&quot;:null,&quot;rpthOverride&quot;:&quot;N&quot;,&quot;scheduleDescription&quot;:&quot;Lecture&quot;,&quot;scheduleType&quot;:&quot;L&quot;,&quot;sectionCourseTitle&quot;:&quot;20th Century American Lit.&quot;,&quot;selectedAction&quot;:null,&quot;selectedBillHour&quot;:null,&quot;selectedCreditHour&quot;:null,&quot;selectedGradingMode&quot;:{&quot;class&quot;:&quot;net.hedtech.banner.student.registration.RegistrationGradingMode&quot;,&quot;description&quot;:null,&quot;gradingMode&quot;:null},&quot;selectedLevel&quot;:{&quot;class&quot;:&quot;net.hedtech.banner.student.registration.RegistrationLevel&quot;,&quot;description&quot;:null,&quot;level&quot;:null},&quot;selectedOverride&quot;:null,&quot;selectedStartEndDate&quot;:{&quot;class&quot;:&quot;net.hedtech.banner.student.registration.RegistrationOlrStartEndDate&quot;,&quot;courseReferenceNumber&quot;:null,&quot;durationUnit&quot;:null,&quot;durationUnitDescription&quot;:null,&quot;endDate&quot;:null,&quot;numberOfUnits&quot;:null,&quot;overrideDurationIndicator&quot;:null,&quot;registrationDate&quot;:null,&quot;sectionEndFromDate&quot;:null,&quot;sectionEndToDate&quot;:null,&quot;sectionStartFromDate&quot;:null,&quot;sectionStartToDate&quot;:null,&quot;startDate&quot;:null,&quot;systemIn&quot;:null},&quot;selectedStudyPath&quot;:{&quot;class&quot;:&quot;net.hedtech.banner.student.registration.RegistrationStudyPath&quot;,&quot;description&quot;:null,&quot;keySequenceNumber&quot;:null},&quot;sequenceNumber&quot;:&quot;2&quot;,&quot;sessionId&quot;:null,&quot;specialApproval&quot;:null,&quot;startDate&quot;:&quot;01/05/2011&quot;,&quot;statusDescription&quot;:&quot;Pending&quot;,&quot;statusIndicator&quot;:&quot;P&quot;,&quot;structuredRegistrationDetailSequence&quot;:null,&quot;structuredRegistrationHeaderSequence&quot;:null,&quot;studentAttributeOverride&quot;:&quot;N&quot;,&quot;studyPathKeySequence&quot;:null,&quot;studyPathName&quot;:null,&quot;subject&quot;:&quot;ENGL&quot;,&quot;subjectDescription&quot;:&quot;English ENGL&quot;,&quot;submitResultIndicator&quot;:null,&quot;term&quot;:&quot;201120&quot;,&quot;testOverride&quot;:&quot;N&quot;,&quot;timeOverride&quot;:&quot;N&quot;,&quot;timeStatusHours&quot;:0,&quot;tuitionWaiverIndicator&quot;:&quot;N&quot;,&quot;version&quot;:1,&quot;voiceResponseStatusType&quot;:&quot;R&quot;,&quot;waitOverride&quot;:&quot;N&quot;,&quot;waivHour&quot;:4},{&quot;addAuthorizationCrnMessage&quot;:null,&quot;addAuthorizationCrnStatus&quot;:&quot;INCOMPLETE&quot;,&quot;addDate&quot;:&quot;01/29/2020&quot;,&quot;approvalOverride&quot;:&quot;N&quot;,&quot;approvalReceivedIndicator&quot;:null,&quot;approvalReceivedIndicatorHold&quot;:null,&quot;attached&quot;:true,&quot;attemptedHours&quot;:0,&quot;authorizationCode&quot;:null,&quot;billHour&quot;:3,&quot;billHourInitial&quot;:3,&quot;billHours&quot;:{&quot;class&quot;:&quot;net.hedtech.banner.student.registration.RegistrationCreditHour&quot;,&quot;creditHourHigh&quot;:null,&quot;creditHourIndicator&quot;:null,&quot;creditHourList&quot;:null,&quot;creditHourLow&quot;:null},&quot;block&quot;:null,&quot;blockPermitOverride&quot;:null,&quot;blockRuleSequenceNumber&quot;:null,&quot;campus&quot;:&quot;M&quot;,&quot;campusOverride&quot;:&quot;N&quot;,&quot;capcOverride&quot;:&quot;N&quot;,&quot;censusEnrollmentDate&quot;:&quot;03/15/2011&quot;,&quot;class&quot;:&quot;net.hedtech.banner.student.registration.RegistrationTemporaryView&quot;,&quot;classOverride&quot;:&quot;N&quot;,&quot;cohortOverride&quot;:&quot;N&quot;,&quot;collegeOverride&quot;:&quot;N&quot;,&quot;completionDate&quot;:&quot;05/15/2099&quot;,&quot;corqOverride&quot;:&quot;N&quot;,&quot;courseContinuingEducationIndicator&quot;:&quot;N&quot;,&quot;courseNumber&quot;:&quot;${courseNumber1}&quot;,&quot;courseReferenceNumber&quot;:&quot;21019&quot;,&quot;courseRegistrationStatus&quot;:&quot;RW&quot;,&quot;courseRegistrationStatusDescription&quot;:&quot;**Web Registered**&quot;,&quot;courseTitle&quot;:&quot;Art History I: Before 1150 AD&quot;,&quot;creditHour&quot;:3,&quot;creditHourInitial&quot;:3,&quot;creditHours&quot;:{&quot;class&quot;:&quot;net.hedtech.banner.student.registration.RegistrationCreditHour&quot;,&quot;creditHourHigh&quot;:null,&quot;creditHourIndicator&quot;:null,&quot;creditHourList&quot;:null,&quot;creditHourLow&quot;:null},&quot;crnErrors&quot;:[],&quot;dataOrigin&quot;:&quot;Banner&quot;,&quot;degreeOverride&quot;:&quot;N&quot;,&quot;departmentOverride&quot;:&quot;N&quot;,&quot;dirty&quot;:false,&quot;dirtyPropertyNames&quot;:[],&quot;duplicateOverride&quot;:&quot;N&quot;,&quot;durationUnit&quot;:null,&quot;errorFlag&quot;:null,&quot;errorLink&quot;:null,&quot;errors&quot;:{&quot;errors&quot;:[]},&quot;grade&quot;:null,&quot;gradeComment&quot;:null,&quot;gradeDate&quot;:null,&quot;gradeMid&quot;:null,&quot;gradingMode&quot;:&quot;S&quot;,&quot;gradingModeDescription&quot;:&quot;Standard Letter&quot;,&quot;id&quot;:${id1},&quot;instructionalMethodDescription&quot;:null,&quot;lastModified&quot;:&quot;01/29/2020&quot;,&quot;lastModifiedBy&quot;:&quot;1110076&quot;,&quot;level&quot;:&quot;UG&quot;,&quot;levelDescription&quot;:&quot;Undergraduate&quot;,&quot;levelOverride&quot;:&quot;N&quot;,&quot;linkOverride&quot;:&quot;N&quot;,&quot;majorOverride&quot;:&quot;N&quot;,&quot;message&quot;:null,&quot;messageType&quot;:null,&quot;mexcOverride&quot;:&quot;N&quot;,&quot;newBlock&quot;:null,&quot;newBlockRuleSequenceNumber&quot;:null,&quot;numberOfUnits&quot;:null,&quot;originalCourseRegistrationStatus&quot;:null,&quot;originalRecordStatus&quot;:&quot;N&quot;,&quot;originalVoiceResponseStatusType&quot;:null,&quot;overrideDurationIndicator&quot;:false,&quot;partOfTerm&quot;:&quot;1&quot;,&quot;partOfTermDescription&quot;:&quot;Full Term&quot;,&quot;permitOverrideUpdate&quot;:null,&quot;preqOverride&quot;:&quot;N&quot;,&quot;programOverride&quot;:&quot;N&quot;,&quot;properties&quot;:{&quot;newBlockRuleSequenceNumber&quot;:null,&quot;statusDescription&quot;:&quot;Pending&quot;,&quot;newBlock&quot;:null,&quot;waivHour&quot;:3,&quot;partOfTermDescription&quot;:&quot;Full Term&quot;,&quot;mexcOverride&quot;:&quot;N&quot;,&quot;sequenceNumber&quot;:&quot;4&quot;,&quot;selectedStudyPath&quot;:{&quot;class&quot;:&quot;net.hedtech.banner.student.registration.RegistrationStudyPath&quot;,&quot;description&quot;:null,&quot;keySequenceNumber&quot;:null},&quot;startDate&quot;:&quot;01/05/2011&quot;,&quot;instructionalMethodDescription&quot;:null,&quot;censusEnrollmentDate&quot;:&quot;03/15/2011&quot;,&quot;gradeMid&quot;:null,&quot;originalRecordStatus&quot;:&quot;N&quot;,&quot;testOverride&quot;:&quot;N&quot;,&quot;gradingModeDescription&quot;:&quot;Standard Letter&quot;,&quot;durationUnit&quot;:null,&quot;selectedLevel&quot;:{&quot;class&quot;:&quot;net.hedtech.banner.student.registration.RegistrationLevel&quot;,&quot;description&quot;:null,&quot;level&quot;:null},&quot;levelOverride&quot;:&quot;N&quot;,&quot;level&quot;:&quot;UG&quot;,&quot;removeIndicator&quot;:null,&quot;errorLink&quot;:null,&quot;recordStatus&quot;:&quot;N&quot;,&quot;dataOrigin&quot;:&quot;Banner&quot;,&quot;courseReferenceNumber&quot;:&quot;21019&quot;,&quot;permitOverrideUpdate&quot;:null,&quot;attemptedHours&quot;:0,&quot;originalVoiceResponseStatusType&quot;:null,&quot;gradingMode&quot;:&quot;S&quot;,&quot;pidm&quot;:111163,&quot;selectedAction&quot;:null,&quot;completionDate&quot;:&quot;05/15/2099&quot;,&quot;message&quot;:null,&quot;courseRegistrationStatus&quot;:&quot;RW&quot;,&quot;subjectDescription&quot;:&quot;Art&quot;,&quot;studentAttributeOverride&quot;:&quot;N&quot;,&quot;approvalOverride&quot;:&quot;N&quot;,&quot;classOverride&quot;:&quot;N&quot;,&quot;campusOverride&quot;:&quot;N&quot;,&quot;overrideDurationIndicator&quot;:false,&quot;billHourInitial&quot;:3,&quot;courseContinuingEducationIndicator&quot;:&quot;N&quot;,&quot;registrationOverrides&quot;:[],&quot;specialApproval&quot;:null,&quot;preqOverride&quot;:&quot;N&quot;,&quot;majorOverride&quot;:&quot;N&quot;,&quot;approvalReceivedIndicatorHold&quot;:null,&quot;registrationGradingModes&quot;:[{&quot;class&quot;:&quot;net.hedtech.banner.student.registration.RegistrationGradingMode&quot;,&quot;description&quot;:&quot;Standard Letter&quot;,&quot;gradingMode&quot;:&quot;S&quot;}],&quot;repeatOverride&quot;:&quot;N&quot;,&quot;tuitionWaiverIndicator&quot;:&quot;N&quot;,&quot;selectedGradingMode&quot;:{&quot;class&quot;:&quot;net.hedtech.banner.student.registration.RegistrationGradingMode&quot;,&quot;description&quot;:null,&quot;gradingMode&quot;:null},&quot;addDate&quot;:&quot;01/29/2020&quot;,&quot;courseRegistrationStatusDescription&quot;:&quot;**Web Registered**&quot;,&quot;programOverride&quot;:&quot;N&quot;,&quot;scheduleDescription&quot;:&quot;Lecture&quot;,&quot;creditHour&quot;:3,&quot;timeStatusHours&quot;:0,&quot;scheduleType&quot;:&quot;L&quot;,&quot;creditHourInitial&quot;:3,&quot;selectedStartEndDate&quot;:{&quot;class&quot;:&quot;net.hedtech.banner.student.registration.RegistrationOlrStartEndDate&quot;,&quot;courseReferenceNumber&quot;:null,&quot;durationUnit&quot;:null,&quot;durationUnitDescription&quot;:null,&quot;endDate&quot;:null,&quot;numberOfUnits&quot;:null,&quot;overrideDurationIndicator&quot;:null,&quot;registrationDate&quot;:null,&quot;sectionEndFromDate&quot;:null,&quot;sectionEndToDate&quot;:null,&quot;sectionStartFromDate&quot;:null,&quot;sectionStartToDate&quot;:null,&quot;startDate&quot;:null,&quot;systemIn&quot;:null},&quot;departmentOverride&quot;:&quot;N&quot;,&quot;grade&quot;:null,&quot;approvalReceivedIndicator&quot;:null,&quot;structuredRegistrationHeaderSequence&quot;:null,&quot;capcOverride&quot;:&quot;N&quot;,&quot;courseTitle&quot;:&quot;Art History I: Before 1150 AD&quot;,&quot;addAuthorizationCrnStatus&quot;:&quot;INCOMPLETE&quot;,&quot;registrationActions&quot;:[{&quot;class&quot;:&quot;net.hedtech.banner.student.registration.RegistrationAction&quot;,&quot;courseRegistrationStatus&quot;:&quot;RW&quot;,&quot;description&quot;:&quot;**Web Registered**&quot;,&quot;registrationStatusDate&quot;:null,&quot;remove&quot;:false,&quot;subActions&quot;:null,&quot;voiceType&quot;:&quot;R&quot;},{&quot;class&quot;:&quot;net.hedtech.banner.student.registration.RegistrationAction&quot;,&quot;courseRegistrationStatus&quot;:&quot;internal-remove&quot;,&quot;description&quot;:&quot;Remove&quot;,&quot;registrationStatusDate&quot;:null,&quot;remove&quot;:true,&quot;subActions&quot;:null,&quot;voiceType&quot;:null}],&quot;gradeComment&quot;:null,&quot;block&quot;:null,&quot;billHours&quot;:{&quot;class&quot;:&quot;net.hedtech.banner.student.registration.RegistrationCreditHour&quot;,&quot;creditHourHigh&quot;:null,&quot;creditHourIndicator&quot;:null,&quot;creditHourList&quot;:null,&quot;creditHourLow&quot;:null},&quot;lastModified&quot;:&quot;01/29/2020&quot;,&quot;selectedCreditHour&quot;:null,&quot;messageType&quot;:null,&quot;reservedKey&quot;:null,&quot;voiceResponseStatusType&quot;:&quot;R&quot;,&quot;levelDescription&quot;:&quot;Undergraduate&quot;,&quot;errorFlag&quot;:null,&quot;registrationToDate&quot;:null,&quot;collegeOverride&quot;:&quot;N&quot;,&quot;partOfTerm&quot;:&quot;1&quot;,&quot;cohortOverride&quot;:&quot;N&quot;,&quot;registrationLevels&quot;:[{&quot;class&quot;:&quot;net.hedtech.banner.student.registration.RegistrationLevel&quot;,&quot;description&quot;:&quot;Credit&quot;,&quot;level&quot;:&quot;CR&quot;},{&quot;class&quot;:&quot;net.hedtech.banner.student.registration.RegistrationLevel&quot;,&quot;description&quot;:&quot;Undergraduate&quot;,&quot;level&quot;:&quot;UG&quot;}],&quot;creditHours&quot;:{&quot;class&quot;:&quot;net.hedtech.banner.student.registration.RegistrationCreditHour&quot;,&quot;creditHourHigh&quot;:null,&quot;creditHourIndicator&quot;:null,&quot;creditHourList&quot;:null,&quot;creditHourLow&quot;:null},&quot;gradeDate&quot;:null,&quot;subject&quot;:&quot;ART&quot;,&quot;selectedBillHour&quot;:null,&quot;registrationStatusDate&quot;:&quot;01/29/2020&quot;,&quot;term&quot;:&quot;201120&quot;,&quot;courseNumber&quot;:&quot;${courseNumber1}&quot;,&quot;numberOfUnits&quot;:null,&quot;studyPathKeySequence&quot;:null,&quot;crnErrors&quot;:[],&quot;blockPermitOverride&quot;:null,&quot;studyPathName&quot;:null,&quot;statusIndicator&quot;:&quot;P&quot;,&quot;sessionId&quot;:null,&quot;billHour&quot;:3,&quot;registrationFromDate&quot;:null,&quot;duplicateOverride&quot;:&quot;N&quot;,&quot;blockRuleSequenceNumber&quot;:null,&quot;structuredRegistrationDetailSequence&quot;:null,&quot;lastModifiedBy&quot;:&quot;1110076&quot;,&quot;waitOverride&quot;:&quot;N&quot;,&quot;submitResultIndicator&quot;:null,&quot;degreeOverride&quot;:&quot;N&quot;,&quot;campus&quot;:&quot;M&quot;,&quot;selectedOverride&quot;:null,&quot;corqOverride&quot;:&quot;N&quot;,&quot;registrationAuthorizationActiveCode&quot;:&quot;N&quot;,&quot;linkOverride&quot;:&quot;N&quot;,&quot;timeOverride&quot;:&quot;N&quot;,&quot;sectionCourseTitle&quot;:&quot;Art History I&quot;,&quot;authorizationCode&quot;:null,&quot;originalCourseRegistrationStatus&quot;:null,&quot;addAuthorizationCrnMessage&quot;:null,&quot;registrationStudyPaths&quot;:[],&quot;rpthOverride&quot;:&quot;N&quot;},&quot;recordStatus&quot;:&quot;N&quot;,&quot;registrationActions&quot;:[{&quot;class&quot;:&quot;net.hedtech.banner.student.registration.RegistrationAction&quot;,&quot;courseRegistrationStatus&quot;:&quot;RW&quot;,&quot;description&quot;:&quot;**Web Registered**&quot;,&quot;registrationStatusDate&quot;:null,&quot;remove&quot;:false,&quot;subActions&quot;:null,&quot;voiceType&quot;:&quot;R&quot;},{&quot;class&quot;:&quot;net.hedtech.banner.student.registration.RegistrationAction&quot;,&quot;courseRegistrationStatus&quot;:&quot;internal-remove&quot;,&quot;description&quot;:&quot;Remove&quot;,&quot;registrationStatusDate&quot;:null,&quot;remove&quot;:true,&quot;subActions&quot;:null,&quot;voiceType&quot;:null}],&quot;registrationAuthorizationActiveCode&quot;:&quot;N&quot;,&quot;registrationFromDate&quot;:null,&quot;registrationGradingModes&quot;:[{&quot;class&quot;:&quot;net.hedtech.banner.student.registration.RegistrationGradingMode&quot;,&quot;description&quot;:&quot;Standard Letter&quot;,&quot;gradingMode&quot;:&quot;S&quot;}],&quot;registrationLevels&quot;:[{&quot;class&quot;:&quot;net.hedtech.banner.student.registration.RegistrationLevel&quot;,&quot;description&quot;:&quot;Credit&quot;,&quot;level&quot;:&quot;CR&quot;},{&quot;class&quot;:&quot;net.hedtech.banner.student.registration.RegistrationLevel&quot;,&quot;description&quot;:&quot;Undergraduate&quot;,&quot;level&quot;:&quot;UG&quot;}],&quot;registrationOverrides&quot;:[],&quot;registrationStatusDate&quot;:&quot;01/29/2020&quot;,&quot;registrationStudyPaths&quot;:[],&quot;registrationToDate&quot;:null,&quot;removeIndicator&quot;:null,&quot;repeatOverride&quot;:&quot;N&quot;,&quot;reservedKey&quot;:null,&quot;rpthOverride&quot;:&quot;N&quot;,&quot;scheduleDescription&quot;:&quot;Lecture&quot;,&quot;scheduleType&quot;:&quot;L&quot;,&quot;sectionCourseTitle&quot;:&quot;Art History I&quot;,&quot;selectedAction&quot;:null,&quot;selectedBillHour&quot;:null,&quot;selectedCreditHour&quot;:null,&quot;selectedGradingMode&quot;:{&quot;class&quot;:&quot;net.hedtech.banner.student.registration.RegistrationGradingMode&quot;,&quot;description&quot;:null,&quot;gradingMode&quot;:null},&quot;selectedLevel&quot;:{&quot;class&quot;:&quot;net.hedtech.banner.student.registration.RegistrationLevel&quot;,&quot;description&quot;:null,&quot;level&quot;:null},&quot;selectedOverride&quot;:null,&quot;selectedStartEndDate&quot;:{&quot;class&quot;:&quot;net.hedtech.banner.student.registration.RegistrationOlrStartEndDate&quot;,&quot;courseReferenceNumber&quot;:null,&quot;durationUnit&quot;:null,&quot;durationUnitDescription&quot;:null,&quot;endDate&quot;:null,&quot;numberOfUnits&quot;:null,&quot;overrideDurationIndicator&quot;:null,&quot;registrationDate&quot;:null,&quot;sectionEndFromDate&quot;:null,&quot;sectionEndToDate&quot;:null,&quot;sectionStartFromDate&quot;:null,&quot;sectionStartToDate&quot;:null,&quot;startDate&quot;:null,&quot;systemIn&quot;:null},&quot;selectedStudyPath&quot;:{&quot;class&quot;:&quot;net.hedtech.banner.student.registration.RegistrationStudyPath&quot;,&quot;description&quot;:null,&quot;keySequenceNumber&quot;:null},&quot;sequenceNumber&quot;:&quot;4&quot;,&quot;sessionId&quot;:null,&quot;specialApproval&quot;:null,&quot;startDate&quot;:&quot;01/05/2011&quot;,&quot;statusDescription&quot;:&quot;Pending&quot;,&quot;statusIndicator&quot;:&quot;P&quot;,&quot;structuredRegistrationDetailSequence&quot;:null,&quot;structuredRegistrationHeaderSequence&quot;:null,&quot;studentAttributeOverride&quot;:&quot;N&quot;,&quot;studyPathKeySequence&quot;:null,&quot;studyPathName&quot;:null,&quot;subject&quot;:&quot;ART&quot;,&quot;subjectDescription&quot;:&quot;Art&quot;,&quot;submitResultIndicator&quot;:null,&quot;term&quot;:&quot;201120&quot;,&quot;testOverride&quot;:&quot;N&quot;,&quot;timeOverride&quot;:&quot;N&quot;,&quot;timeStatusHours&quot;:0,&quot;tuitionWaiverIndicator&quot;:&quot;N&quot;,&quot;version&quot;:1,&quot;voiceResponseStatusType&quot;:&quot;R&quot;,&quot;waitOverride&quot;:&quot;N&quot;,&quot;waivHour&quot;:3}],&quot;destroy&quot;:[],&quot;uniqueSessionId&quot;:&quot;p2j2i1580274736820&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">perf-pxesa07-elb-1845329837.us-east-1.elb.amazonaws.com</stringProp>
            <stringProp name="HTTPSampler.port">8100</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/StudentRegistrationSsb/ssb/classRegistration/submitRegistration/batch</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="X-Synchronizer-Token" elementType="Header">
                  <stringProp name="Header.name">X-Synchronizer-Token</stringProp>
                  <stringProp name="Header.value">ec56d697-3a8b-4e2b-9282-9a7697be8d36</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://perf-pxesa07-elb-1845329837.us-east-1.elb.amazonaws.com:8100/StudentRegistrationSsb/ssb/classRegistration/classRegistration</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://perf-pxesa07-elb-1845329837.us-east-1.elb.amazonaws.com:8100</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 6.3; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/79.0.3945.130 Safari/537.36</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/StudentRegistrationSsb/ssb/classRegistration/getRegistrationEvents-445" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="termFilter" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">termFilter</stringProp>
                  <stringProp name="Argument.value">null</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">perf-pxesa07-elb-1845329837.us-east-1.elb.amazonaws.com</stringProp>
            <stringProp name="HTTPSampler.port">8100</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/StudentRegistrationSsb/ssb/classRegistration/getRegistrationEvents</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="X-Synchronizer-Token" elementType="Header">
                  <stringProp name="Header.name">X-Synchronizer-Token</stringProp>
                  <stringProp name="Header.value">ec56d697-3a8b-4e2b-9282-9a7697be8d36</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://perf-pxesa07-elb-1845329837.us-east-1.elb.amazonaws.com:8100/StudentRegistrationSsb/ssb/classRegistration/classRegistration</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 6.3; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/79.0.3945.130 Safari/537.36</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="R03_Add_Drop_T15_Drop_Submit" enabled="false">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/StudentRegistrationSsb/ssb/classRegistration/submitRegistration/batch-450" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;create&quot;:[],&quot;update&quot;:[{&quot;addAuthorizationCrnMessage&quot;:null,&quot;addAuthorizationCrnStatus&quot;:null,&quot;addDate&quot;:&quot;01/29/2020&quot;,&quot;approvalOverride&quot;:&quot;N&quot;,&quot;approvalReceivedIndicator&quot;:null,&quot;approvalReceivedIndicatorHold&quot;:null,&quot;attached&quot;:true,&quot;attemptedHours&quot;:0,&quot;authorizationCode&quot;:null,&quot;billHour&quot;:4,&quot;billHourInitial&quot;:4,&quot;billHours&quot;:{&quot;class&quot;:&quot;net.hedtech.banner.student.registration.RegistrationCreditHour&quot;,&quot;creditHourHigh&quot;:null,&quot;creditHourIndicator&quot;:null,&quot;creditHourList&quot;:null,&quot;creditHourLow&quot;:null},&quot;block&quot;:null,&quot;blockPermitOverride&quot;:null,&quot;blockRuleSequenceNumber&quot;:null,&quot;campus&quot;:&quot;M&quot;,&quot;campusOverride&quot;:&quot;N&quot;,&quot;capcOverride&quot;:&quot;N&quot;,&quot;censusEnrollmentDate&quot;:null,&quot;class&quot;:&quot;net.hedtech.banner.student.registration.RegistrationTemporaryView&quot;,&quot;classOverride&quot;:&quot;N&quot;,&quot;cohortOverride&quot;:&quot;N&quot;,&quot;collegeOverride&quot;:&quot;N&quot;,&quot;completionDate&quot;:&quot;05/15/2099&quot;,&quot;corqOverride&quot;:&quot;N&quot;,&quot;courseContinuingEducationIndicator&quot;:&quot;N&quot;,&quot;courseNumber&quot;:&quot;105&quot;,&quot;courseReferenceNumber&quot;:&quot;23717&quot;,&quot;courseRegistrationStatus&quot;:&quot;RW&quot;,&quot;courseRegistrationStatusDescription&quot;:&quot;**Web Registered**&quot;,&quot;courseTitle&quot;:&quot;Theatre In The Round&quot;,&quot;creditHour&quot;:4,&quot;creditHourInitial&quot;:4,&quot;creditHours&quot;:{&quot;class&quot;:&quot;net.hedtech.banner.student.registration.RegistrationCreditHour&quot;,&quot;creditHourHigh&quot;:null,&quot;creditHourIndicator&quot;:null,&quot;creditHourList&quot;:null,&quot;creditHourLow&quot;:null},&quot;crnErrors&quot;:[],&quot;dataOrigin&quot;:&quot;Banner&quot;,&quot;degreeOverride&quot;:&quot;N&quot;,&quot;departmentOverride&quot;:&quot;N&quot;,&quot;dirty&quot;:false,&quot;dirtyPropertyNames&quot;:[],&quot;duplicateOverride&quot;:&quot;N&quot;,&quot;durationUnit&quot;:null,&quot;errorFlag&quot;:null,&quot;errorLink&quot;:null,&quot;errors&quot;:{&quot;errors&quot;:[]},&quot;grade&quot;:null,&quot;gradeComment&quot;:null,&quot;gradeDate&quot;:null,&quot;gradeMid&quot;:null,&quot;gradingMode&quot;:&quot;S&quot;,&quot;gradingModeDescription&quot;:&quot;Standard Letter&quot;,&quot;id&quot;:${id5},&quot;instructionalMethodDescription&quot;:null,&quot;lastModified&quot;:&quot;01/29/2020&quot;,&quot;lastModifiedBy&quot;:&quot;1110076&quot;,&quot;level&quot;:&quot;UG&quot;,&quot;levelDescription&quot;:&quot;Undergraduate&quot;,&quot;levelOverride&quot;:&quot;N&quot;,&quot;linkOverride&quot;:&quot;N&quot;,&quot;majorOverride&quot;:&quot;N&quot;,&quot;message&quot;:null,&quot;messageType&quot;:null,&quot;mexcOverride&quot;:&quot;N&quot;,&quot;newBlock&quot;:null,&quot;newBlockRuleSequenceNumber&quot;:null,&quot;numberOfUnits&quot;:null,&quot;originalCourseRegistrationStatus&quot;:&quot;RW&quot;,&quot;originalRecordStatus&quot;:&quot;N&quot;,&quot;originalVoiceResponseStatusType&quot;:&quot;R&quot;,&quot;overrideDurationIndicator&quot;:false,&quot;partOfTerm&quot;:&quot;1&quot;,&quot;partOfTermDescription&quot;:&quot;Full Term&quot;,&quot;permitOverrideUpdate&quot;:null,&quot;preqOverride&quot;:&quot;N&quot;,&quot;programOverride&quot;:&quot;N&quot;,&quot;properties&quot;:{&quot;creditHours&quot;:{&quot;class&quot;:&quot;net.hedtech.banner.student.registration.RegistrationCreditHour&quot;,&quot;creditHourHigh&quot;:null,&quot;creditHourIndicator&quot;:null,&quot;creditHourList&quot;:null,&quot;creditHourLow&quot;:null},&quot;newBlockRuleSequenceNumber&quot;:null,&quot;statusDescription&quot;:&quot;Pending&quot;,&quot;newBlock&quot;:null,&quot;selectedStudyPath&quot;:{&quot;class&quot;:&quot;net.hedtech.banner.student.registration.RegistrationStudyPath&quot;,&quot;description&quot;:null,&quot;keySequenceNumber&quot;:null},&quot;partOfTermDescription&quot;:&quot;Full Term&quot;,&quot;mexcOverride&quot;:&quot;N&quot;,&quot;courseNumber&quot;:&quot;105&quot;,&quot;sequenceNumber&quot;:&quot;2&quot;,&quot;startDate&quot;:&quot;01/05/2011&quot;,&quot;instructionalMethodDescription&quot;:null,&quot;censusEnrollmentDate&quot;:&quot;03/15/2011&quot;,&quot;gradeMid&quot;:null,&quot;originalRecordStatus&quot;:&quot;N&quot;,&quot;testOverride&quot;:&quot;N&quot;,&quot;selectedStartEndDate&quot;:{&quot;class&quot;:&quot;net.hedtech.banner.student.registration.RegistrationOlrStartEndDate&quot;,&quot;courseReferenceNumber&quot;:null,&quot;durationUnit&quot;:null,&quot;durationUnitDescription&quot;:null,&quot;endDate&quot;:null,&quot;numberOfUnits&quot;:null,&quot;overrideDurationIndicator&quot;:null,&quot;registrationDate&quot;:null,&quot;sectionEndFromDate&quot;:null,&quot;sectionEndToDate&quot;:null,&quot;sectionStartFromDate&quot;:null,&quot;sectionStartToDate&quot;:null,&quot;startDate&quot;:null,&quot;systemIn&quot;:null},&quot;gradingModeDescription&quot;:&quot;Standard Letter&quot;,&quot;durationUnit&quot;:null,&quot;levelOverride&quot;:&quot;N&quot;,&quot;waivHour&quot;:4,&quot;level&quot;:&quot;UG&quot;,&quot;registrationLevels&quot;:[{&quot;class&quot;:&quot;net.hedtech.banner.student.registration.RegistrationLevel&quot;,&quot;description&quot;:&quot;Undergraduate&quot;,&quot;level&quot;:&quot;UG&quot;}],&quot;removeIndicator&quot;:null,&quot;errorLink&quot;:null,&quot;recordStatus&quot;:&quot;N&quot;,&quot;dataOrigin&quot;:&quot;Banner&quot;,&quot;courseTitle&quot;:&quot;Theatre In The Round&quot;,&quot;permitOverrideUpdate&quot;:null,&quot;attemptedHours&quot;:0,&quot;originalVoiceResponseStatusType&quot;:null,&quot;courseReferenceNumber&quot;:&quot;23717&quot;,&quot;gradingMode&quot;:&quot;S&quot;,&quot;pidm&quot;:111163,&quot;selectedAction&quot;:null,&quot;completionDate&quot;:&quot;05/15/2099&quot;,&quot;message&quot;:null,&quot;selectedGradingMode&quot;:{&quot;class&quot;:&quot;net.hedtech.banner.student.registration.RegistrationGradingMode&quot;,&quot;description&quot;:null,&quot;gradingMode&quot;:null},&quot;courseRegistrationStatus&quot;:&quot;RW&quot;,&quot;creditHour&quot;:4,&quot;studentAttributeOverride&quot;:&quot;N&quot;,&quot;approvalOverride&quot;:&quot;N&quot;,&quot;classOverride&quot;:&quot;N&quot;,&quot;campusOverride&quot;:&quot;N&quot;,&quot;overrideDurationIndicator&quot;:false,&quot;creditHourInitial&quot;:4,&quot;courseContinuingEducationIndicator&quot;:&quot;N&quot;,&quot;registrationOverrides&quot;:[],&quot;sectionCourseTitle&quot;:&quot;Theatre In The Round&quot;,&quot;specialApproval&quot;:null,&quot;preqOverride&quot;:&quot;N&quot;,&quot;majorOverride&quot;:&quot;N&quot;,&quot;approvalReceivedIndicatorHold&quot;:null,&quot;repeatOverride&quot;:&quot;N&quot;,&quot;tuitionWaiverIndicator&quot;:&quot;N&quot;,&quot;registrationGradingModes&quot;:[{&quot;class&quot;:&quot;net.hedtech.banner.student.registration.RegistrationGradingMode&quot;,&quot;description&quot;:&quot;Standard Letter&quot;,&quot;gradingMode&quot;:&quot;S&quot;}],&quot;courseRegistrationStatusDescription&quot;:&quot;**Web Registered**&quot;,&quot;programOverride&quot;:&quot;N&quot;,&quot;scheduleDescription&quot;:&quot;Lecture&quot;,&quot;timeStatusHours&quot;:0,&quot;scheduleType&quot;:&quot;L&quot;,&quot;registrationStatusDate&quot;:&quot;01/29/2020&quot;,&quot;billHourInitial&quot;:4,&quot;departmentOverride&quot;:&quot;N&quot;,&quot;grade&quot;:null,&quot;approvalReceivedIndicator&quot;:null,&quot;structuredRegistrationHeaderSequence&quot;:null,&quot;capcOverride&quot;:&quot;N&quot;,&quot;addAuthorizationCrnStatus&quot;:&quot;INCOMPLETE&quot;,&quot;billHours&quot;:{&quot;class&quot;:&quot;net.hedtech.banner.student.registration.RegistrationCreditHour&quot;,&quot;creditHourHigh&quot;:null,&quot;creditHourIndicator&quot;:null,&quot;creditHourList&quot;:null,&quot;creditHourLow&quot;:null},&quot;selectedLevel&quot;:{&quot;class&quot;:&quot;net.hedtech.banner.student.registration.RegistrationLevel&quot;,&quot;description&quot;:null,&quot;level&quot;:null},&quot;gradeComment&quot;:null,&quot;block&quot;:null,&quot;selectedCreditHour&quot;:null,&quot;messageType&quot;:null,&quot;registrationActions&quot;:[{&quot;class&quot;:&quot;net.hedtech.banner.student.registration.RegistrationAction&quot;,&quot;courseRegistrationStatus&quot;:&quot;RW&quot;,&quot;description&quot;:&quot;**Web Registered**&quot;,&quot;registrationStatusDate&quot;:null,&quot;remove&quot;:false,&quot;subActions&quot;:null,&quot;voiceType&quot;:&quot;R&quot;},{&quot;class&quot;:&quot;net.hedtech.banner.student.registration.RegistrationAction&quot;,&quot;courseRegistrationStatus&quot;:&quot;internal-remove&quot;,&quot;description&quot;:&quot;Remove&quot;,&quot;registrationStatusDate&quot;:null,&quot;remove&quot;:true,&quot;subActions&quot;:null,&quot;voiceType&quot;:null}],&quot;reservedKey&quot;:null,&quot;voiceResponseStatusType&quot;:&quot;R&quot;,&quot;levelDescription&quot;:&quot;Undergraduate&quot;,&quot;subject&quot;:&quot;THEA&quot;,&quot;errorFlag&quot;:null,&quot;registrationToDate&quot;:null,&quot;collegeOverride&quot;:&quot;N&quot;,&quot;partOfTerm&quot;:&quot;1&quot;,&quot;cohortOverride&quot;:&quot;N&quot;,&quot;lastModified&quot;:&quot;01/29/2020&quot;,&quot;gradeDate&quot;:null,&quot;selectedBillHour&quot;:null,&quot;term&quot;:&quot;201120&quot;,&quot;numberOfUnits&quot;:null,&quot;studyPathKeySequence&quot;:null,&quot;crnErrors&quot;:[],&quot;addDate&quot;:&quot;01/29/2020&quot;,&quot;blockPermitOverride&quot;:null,&quot;studyPathName&quot;:null,&quot;statusIndicator&quot;:&quot;P&quot;,&quot;sessionId&quot;:null,&quot;registrationFromDate&quot;:null,&quot;duplicateOverride&quot;:&quot;N&quot;,&quot;blockRuleSequenceNumber&quot;:null,&quot;structuredRegistrationDetailSequence&quot;:null,&quot;lastModifiedBy&quot;:&quot;1110076&quot;,&quot;waitOverride&quot;:&quot;N&quot;,&quot;subjectDescription&quot;:&quot;Theatre THEA&quot;,&quot;submitResultIndicator&quot;:null,&quot;degreeOverride&quot;:&quot;N&quot;,&quot;campus&quot;:&quot;M&quot;,&quot;selectedOverride&quot;:null,&quot;corqOverride&quot;:&quot;N&quot;,&quot;registrationAuthorizationActiveCode&quot;:&quot;N&quot;,&quot;linkOverride&quot;:&quot;N&quot;,&quot;timeOverride&quot;:&quot;N&quot;,&quot;billHour&quot;:4,&quot;authorizationCode&quot;:null,&quot;originalCourseRegistrationStatus&quot;:null,&quot;addAuthorizationCrnMessage&quot;:null,&quot;registrationStudyPaths&quot;:[],&quot;rpthOverride&quot;:&quot;N&quot;},&quot;recordStatus&quot;:&quot;Q&quot;,&quot;registrationActions&quot;:[{&quot;class&quot;:&quot;net.hedtech.banner.student.registration.RegistrationAction&quot;,&quot;courseRegistrationStatus&quot;:null,&quot;description&quot;:&quot;None&quot;,&quot;registrationStatusDate&quot;:null,&quot;remove&quot;:false,&quot;subActions&quot;:null,&quot;voiceType&quot;:null},{&quot;class&quot;:&quot;net.hedtech.banner.student.registration.RegistrationAction&quot;,&quot;courseRegistrationStatus&quot;:&quot;DW&quot;,&quot;description&quot;:&quot;Web Drop&quot;,&quot;registrationStatusDate&quot;:null,&quot;remove&quot;:true,&quot;subActions&quot;:null,&quot;voiceType&quot;:&quot;D&quot;}],&quot;registrationAuthorizationActiveCode&quot;:null,&quot;registrationFromDate&quot;:null,&quot;registrationGradingModes&quot;:[{&quot;class&quot;:&quot;net.hedtech.banner.student.registration.RegistrationGradingMode&quot;,&quot;description&quot;:&quot;Standard Letter&quot;,&quot;gradingMode&quot;:&quot;S&quot;}],&quot;registrationLevels&quot;:[{&quot;class&quot;:&quot;net.hedtech.banner.student.registration.RegistrationLevel&quot;,&quot;description&quot;:&quot;Undergraduate&quot;,&quot;level&quot;:&quot;UG&quot;}],&quot;registrationOverrides&quot;:[],&quot;registrationStatusDate&quot;:&quot;01/29/2020&quot;,&quot;registrationStudyPaths&quot;:[],&quot;registrationToDate&quot;:null,&quot;removeIndicator&quot;:null,&quot;repeatOverride&quot;:&quot;N&quot;,&quot;reservedKey&quot;:null,&quot;rpthOverride&quot;:&quot;N&quot;,&quot;scheduleDescription&quot;:&quot;Lecture&quot;,&quot;scheduleType&quot;:&quot;L&quot;,&quot;sectionCourseTitle&quot;:&quot;Theatre In The Round&quot;,&quot;selectedAction&quot;:&quot;DW&quot;,&quot;selectedBillHour&quot;:null,&quot;selectedCreditHour&quot;:null,&quot;selectedGradingMode&quot;:{&quot;class&quot;:&quot;net.hedtech.banner.student.registration.RegistrationGradingMode&quot;,&quot;description&quot;:null,&quot;gradingMode&quot;:null},&quot;selectedLevel&quot;:{&quot;class&quot;:&quot;net.hedtech.banner.student.registration.RegistrationLevel&quot;,&quot;description&quot;:null,&quot;level&quot;:null},&quot;selectedOverride&quot;:null,&quot;selectedStartEndDate&quot;:null,&quot;selectedStudyPath&quot;:{&quot;class&quot;:&quot;net.hedtech.banner.student.registration.RegistrationStudyPath&quot;,&quot;description&quot;:null,&quot;keySequenceNumber&quot;:null},&quot;sequenceNumber&quot;:&quot;2&quot;,&quot;sessionId&quot;:null,&quot;specialApproval&quot;:null,&quot;startDate&quot;:&quot;01/05/2011&quot;,&quot;statusDescription&quot;:&quot;Registered&quot;,&quot;statusIndicator&quot;:&quot;R&quot;,&quot;structuredRegistrationDetailSequence&quot;:null,&quot;structuredRegistrationHeaderSequence&quot;:null,&quot;studentAttributeOverride&quot;:&quot;N&quot;,&quot;studyPathKeySequence&quot;:null,&quot;studyPathName&quot;:null,&quot;subject&quot;:&quot;THEA&quot;,&quot;subjectDescription&quot;:&quot;Theatre THEA&quot;,&quot;submitResultIndicator&quot;:&quot;S&quot;,&quot;term&quot;:&quot;201120&quot;,&quot;testOverride&quot;:&quot;N&quot;,&quot;timeOverride&quot;:&quot;N&quot;,&quot;timeStatusHours&quot;:0,&quot;tuitionWaiverIndicator&quot;:&quot;N&quot;,&quot;version&quot;:1,&quot;voiceResponseStatusType&quot;:&quot;R&quot;,&quot;waitOverride&quot;:&quot;N&quot;,&quot;waivHour&quot;:4},{&quot;addAuthorizationCrnMessage&quot;:null,&quot;addAuthorizationCrnStatus&quot;:null,&quot;addDate&quot;:&quot;01/29/2020&quot;,&quot;approvalOverride&quot;:&quot;N&quot;,&quot;approvalReceivedIndicator&quot;:null,&quot;approvalReceivedIndicatorHold&quot;:null,&quot;attached&quot;:true,&quot;attemptedHours&quot;:0,&quot;authorizationCode&quot;:null,&quot;billHour&quot;:3,&quot;billHourInitial&quot;:3,&quot;billHours&quot;:{&quot;class&quot;:&quot;net.hedtech.banner.student.registration.RegistrationCreditHour&quot;,&quot;creditHourHigh&quot;:null,&quot;creditHourIndicator&quot;:null,&quot;creditHourList&quot;:null,&quot;creditHourLow&quot;:null},&quot;block&quot;:null,&quot;blockPermitOverride&quot;:null,&quot;blockRuleSequenceNumber&quot;:null,&quot;campus&quot;:&quot;M&quot;,&quot;campusOverride&quot;:&quot;N&quot;,&quot;capcOverride&quot;:&quot;N&quot;,&quot;censusEnrollmentDate&quot;:null,&quot;class&quot;:&quot;net.hedtech.banner.student.registration.RegistrationTemporaryView&quot;,&quot;classOverride&quot;:&quot;N&quot;,&quot;cohortOverride&quot;:&quot;N&quot;,&quot;collegeOverride&quot;:&quot;N&quot;,&quot;completionDate&quot;:&quot;05/15/2099&quot;,&quot;corqOverride&quot;:&quot;N&quot;,&quot;courseContinuingEducationIndicator&quot;:&quot;N&quot;,&quot;courseNumber&quot;:&quot;${courseNumber4}&quot;,&quot;courseReferenceNumber&quot;:&quot;20218&quot;,&quot;courseRegistrationStatus&quot;:&quot;RW&quot;,&quot;courseRegistrationStatusDescription&quot;:&quot;**Web Registered**&quot;,&quot;courseTitle&quot;:&quot;Math C085&quot;,&quot;creditHour&quot;:3,&quot;creditHourInitial&quot;:3,&quot;creditHours&quot;:{&quot;class&quot;:&quot;net.hedtech.banner.student.registration.RegistrationCreditHour&quot;,&quot;creditHourHigh&quot;:null,&quot;creditHourIndicator&quot;:null,&quot;creditHourList&quot;:null,&quot;creditHourLow&quot;:null},&quot;crnErrors&quot;:[],&quot;dataOrigin&quot;:&quot;Banner&quot;,&quot;degreeOverride&quot;:&quot;N&quot;,&quot;departmentOverride&quot;:&quot;N&quot;,&quot;dirty&quot;:false,&quot;dirtyPropertyNames&quot;:[],&quot;duplicateOverride&quot;:&quot;N&quot;,&quot;durationUnit&quot;:null,&quot;errorFlag&quot;:null,&quot;errorLink&quot;:null,&quot;errors&quot;:{&quot;errors&quot;:[]},&quot;grade&quot;:null,&quot;gradeComment&quot;:null,&quot;gradeDate&quot;:null,&quot;gradeMid&quot;:null,&quot;gradingMode&quot;:&quot;S&quot;,&quot;gradingModeDescription&quot;:&quot;Standard Letter&quot;,&quot;id&quot;:${id4},&quot;instructionalMethodDescription&quot;:null,&quot;lastModified&quot;:&quot;01/29/2020&quot;,&quot;lastModifiedBy&quot;:&quot;1110076&quot;,&quot;level&quot;:&quot;UG&quot;,&quot;levelDescription&quot;:&quot;Undergraduate&quot;,&quot;levelOverride&quot;:&quot;N&quot;,&quot;linkOverride&quot;:&quot;N&quot;,&quot;majorOverride&quot;:&quot;N&quot;,&quot;message&quot;:null,&quot;messageType&quot;:null,&quot;mexcOverride&quot;:&quot;N&quot;,&quot;newBlock&quot;:null,&quot;newBlockRuleSequenceNumber&quot;:null,&quot;numberOfUnits&quot;:null,&quot;originalCourseRegistrationStatus&quot;:&quot;RW&quot;,&quot;originalRecordStatus&quot;:&quot;N&quot;,&quot;originalVoiceResponseStatusType&quot;:&quot;R&quot;,&quot;overrideDurationIndicator&quot;:false,&quot;partOfTerm&quot;:&quot;1&quot;,&quot;partOfTermDescription&quot;:&quot;Full Term&quot;,&quot;permitOverrideUpdate&quot;:null,&quot;preqOverride&quot;:&quot;N&quot;,&quot;programOverride&quot;:&quot;N&quot;,&quot;properties&quot;:{&quot;courseTitle&quot;:&quot;Math C085&quot;,&quot;newBlockRuleSequenceNumber&quot;:null,&quot;statusDescription&quot;:&quot;Pending&quot;,&quot;newBlock&quot;:null,&quot;waivHour&quot;:3,&quot;sequenceNumber&quot;:&quot;1&quot;,&quot;partOfTermDescription&quot;:&quot;Full Term&quot;,&quot;mexcOverride&quot;:&quot;N&quot;,&quot;startDate&quot;:&quot;01/05/2011&quot;,&quot;instructionalMethodDescription&quot;:null,&quot;censusEnrollmentDate&quot;:&quot;03/15/2011&quot;,&quot;registrationLevels&quot;:[{&quot;class&quot;:&quot;net.hedtech.banner.student.registration.RegistrationLevel&quot;,&quot;description&quot;:&quot;Undergraduate&quot;,&quot;level&quot;:&quot;UG&quot;}],&quot;gradeMid&quot;:null,&quot;originalRecordStatus&quot;:&quot;N&quot;,&quot;sectionCourseTitle&quot;:&quot;Math C085&quot;,&quot;testOverride&quot;:&quot;N&quot;,&quot;courseReferenceNumber&quot;:&quot;20218&quot;,&quot;gradingModeDescription&quot;:&quot;Standard Letter&quot;,&quot;durationUnit&quot;:null,&quot;addDate&quot;:&quot;01/29/2020&quot;,&quot;levelOverride&quot;:&quot;N&quot;,&quot;level&quot;:&quot;UG&quot;,&quot;removeIndicator&quot;:null,&quot;errorLink&quot;:null,&quot;recordStatus&quot;:&quot;N&quot;,&quot;dataOrigin&quot;:&quot;Banner&quot;,&quot;permitOverrideUpdate&quot;:null,&quot;attemptedHours&quot;:0,&quot;originalVoiceResponseStatusType&quot;:null,&quot;gradingMode&quot;:&quot;S&quot;,&quot;pidm&quot;:111163,&quot;selectedAction&quot;:null,&quot;completionDate&quot;:&quot;05/15/2099&quot;,&quot;message&quot;:null,&quot;courseRegistrationStatus&quot;:&quot;RW&quot;,&quot;studentAttributeOverride&quot;:&quot;N&quot;,&quot;approvalOverride&quot;:&quot;N&quot;,&quot;selectedGradingMode&quot;:{&quot;class&quot;:&quot;net.hedtech.banner.student.registration.RegistrationGradingMode&quot;,&quot;description&quot;:null,&quot;gradingMode&quot;:null},&quot;classOverride&quot;:&quot;N&quot;,&quot;campusOverride&quot;:&quot;N&quot;,&quot;overrideDurationIndicator&quot;:false,&quot;billHourInitial&quot;:3,&quot;courseContinuingEducationIndicator&quot;:&quot;N&quot;,&quot;registrationOverrides&quot;:[],&quot;specialApproval&quot;:null,&quot;preqOverride&quot;:&quot;N&quot;,&quot;majorOverride&quot;:&quot;N&quot;,&quot;approvalReceivedIndicatorHold&quot;:null,&quot;repeatOverride&quot;:&quot;N&quot;,&quot;tuitionWaiverIndicator&quot;:&quot;N&quot;,&quot;courseRegistrationStatusDescription&quot;:&quot;**Web Registered**&quot;,&quot;programOverride&quot;:&quot;N&quot;,&quot;scheduleDescription&quot;:&quot;Lecture&quot;,&quot;creditHour&quot;:3,&quot;timeStatusHours&quot;:0,&quot;scheduleType&quot;:&quot;L&quot;,&quot;creditHourInitial&quot;:3,&quot;billHours&quot;:{&quot;class&quot;:&quot;net.hedtech.banner.student.registration.RegistrationCreditHour&quot;,&quot;creditHourHigh&quot;:null,&quot;creditHourIndicator&quot;:null,&quot;creditHourList&quot;:null,&quot;creditHourLow&quot;:null},&quot;registrationActions&quot;:[{&quot;class&quot;:&quot;net.hedtech.banner.student.registration.RegistrationAction&quot;,&quot;courseRegistrationStatus&quot;:&quot;RW&quot;,&quot;description&quot;:&quot;**Web Registered**&quot;,&quot;registrationStatusDate&quot;:null,&quot;remove&quot;:false,&quot;subActions&quot;:null,&quot;voiceType&quot;:&quot;R&quot;},{&quot;class&quot;:&quot;net.hedtech.banner.student.registration.RegistrationAction&quot;,&quot;courseRegistrationStatus&quot;:&quot;internal-remove&quot;,&quot;description&quot;:&quot;Remove&quot;,&quot;registrationStatusDate&quot;:null,&quot;remove&quot;:true,&quot;subActions&quot;:null,&quot;voiceType&quot;:null}],&quot;selectedLevel&quot;:{&quot;class&quot;:&quot;net.hedtech.banner.student.registration.RegistrationLevel&quot;,&quot;description&quot;:null,&quot;level&quot;:null},&quot;departmentOverride&quot;:&quot;N&quot;,&quot;grade&quot;:null,&quot;approvalReceivedIndicator&quot;:null,&quot;registrationGradingModes&quot;:[{&quot;class&quot;:&quot;net.hedtech.banner.student.registration.RegistrationGradingMode&quot;,&quot;description&quot;:&quot;Standard Letter&quot;,&quot;gradingMode&quot;:&quot;S&quot;}],&quot;structuredRegistrationHeaderSequence&quot;:null,&quot;selectedStudyPath&quot;:{&quot;class&quot;:&quot;net.hedtech.banner.student.registration.RegistrationStudyPath&quot;,&quot;description&quot;:null,&quot;keySequenceNumber&quot;:null},&quot;registrationStatusDate&quot;:&quot;01/29/2020&quot;,&quot;capcOverride&quot;:&quot;N&quot;,&quot;addAuthorizationCrnStatus&quot;:&quot;INCOMPLETE&quot;,&quot;creditHours&quot;:{&quot;class&quot;:&quot;net.hedtech.banner.student.registration.RegistrationCreditHour&quot;,&quot;creditHourHigh&quot;:null,&quot;creditHourIndicator&quot;:null,&quot;creditHourList&quot;:null,&quot;creditHourLow&quot;:null},&quot;gradeComment&quot;:null,&quot;block&quot;:null,&quot;selectedCreditHour&quot;:null,&quot;messageType&quot;:null,&quot;reservedKey&quot;:null,&quot;voiceResponseStatusType&quot;:&quot;R&quot;,&quot;subject&quot;:&quot;MATH&quot;,&quot;levelDescription&quot;:&quot;Undergraduate&quot;,&quot;errorFlag&quot;:null,&quot;subjectDescription&quot;:&quot;Mathematics MATH&quot;,&quot;registrationToDate&quot;:null,&quot;collegeOverride&quot;:&quot;N&quot;,&quot;partOfTerm&quot;:&quot;1&quot;,&quot;cohortOverride&quot;:&quot;N&quot;,&quot;lastModified&quot;:&quot;01/29/2020&quot;,&quot;gradeDate&quot;:null,&quot;selectedBillHour&quot;:null,&quot;term&quot;:&quot;201120&quot;,&quot;numberOfUnits&quot;:null,&quot;studyPathKeySequence&quot;:null,&quot;crnErrors&quot;:[],&quot;selectedStartEndDate&quot;:{&quot;class&quot;:&quot;net.hedtech.banner.student.registration.RegistrationOlrStartEndDate&quot;,&quot;courseReferenceNumber&quot;:null,&quot;durationUnit&quot;:null,&quot;durationUnitDescription&quot;:null,&quot;endDate&quot;:null,&quot;numberOfUnits&quot;:null,&quot;overrideDurationIndicator&quot;:null,&quot;registrationDate&quot;:null,&quot;sectionEndFromDate&quot;:null,&quot;sectionEndToDate&quot;:null,&quot;sectionStartFromDate&quot;:null,&quot;sectionStartToDate&quot;:null,&quot;startDate&quot;:null,&quot;systemIn&quot;:null},&quot;blockPermitOverride&quot;:null,&quot;studyPathName&quot;:null,&quot;statusIndicator&quot;:&quot;P&quot;,&quot;sessionId&quot;:null,&quot;billHour&quot;:3,&quot;registrationFromDate&quot;:null,&quot;duplicateOverride&quot;:&quot;N&quot;,&quot;blockRuleSequenceNumber&quot;:null,&quot;structuredRegistrationDetailSequence&quot;:null,&quot;lastModifiedBy&quot;:&quot;1110076&quot;,&quot;waitOverride&quot;:&quot;N&quot;,&quot;submitResultIndicator&quot;:null,&quot;degreeOverride&quot;:&quot;N&quot;,&quot;campus&quot;:&quot;M&quot;,&quot;selectedOverride&quot;:null,&quot;corqOverride&quot;:&quot;N&quot;,&quot;registrationAuthorizationActiveCode&quot;:&quot;N&quot;,&quot;linkOverride&quot;:&quot;N&quot;,&quot;courseNumber&quot;:&quot;${courseNumber4}&quot;,&quot;timeOverride&quot;:&quot;N&quot;,&quot;authorizationCode&quot;:null,&quot;originalCourseRegistrationStatus&quot;:null,&quot;addAuthorizationCrnMessage&quot;:null,&quot;registrationStudyPaths&quot;:[],&quot;rpthOverride&quot;:&quot;N&quot;},&quot;recordStatus&quot;:&quot;Q&quot;,&quot;registrationActions&quot;:[{&quot;class&quot;:&quot;net.hedtech.banner.student.registration.RegistrationAction&quot;,&quot;courseRegistrationStatus&quot;:null,&quot;description&quot;:&quot;None&quot;,&quot;registrationStatusDate&quot;:null,&quot;remove&quot;:false,&quot;subActions&quot;:null,&quot;voiceType&quot;:null},{&quot;class&quot;:&quot;net.hedtech.banner.student.registration.RegistrationAction&quot;,&quot;courseRegistrationStatus&quot;:&quot;DW&quot;,&quot;description&quot;:&quot;Web Drop&quot;,&quot;registrationStatusDate&quot;:null,&quot;remove&quot;:true,&quot;subActions&quot;:null,&quot;voiceType&quot;:&quot;D&quot;}],&quot;registrationAuthorizationActiveCode&quot;:null,&quot;registrationFromDate&quot;:null,&quot;registrationGradingModes&quot;:[{&quot;class&quot;:&quot;net.hedtech.banner.student.registration.RegistrationGradingMode&quot;,&quot;description&quot;:&quot;Standard Letter&quot;,&quot;gradingMode&quot;:&quot;S&quot;}],&quot;registrationLevels&quot;:[{&quot;class&quot;:&quot;net.hedtech.banner.student.registration.RegistrationLevel&quot;,&quot;description&quot;:&quot;Undergraduate&quot;,&quot;level&quot;:&quot;UG&quot;}],&quot;registrationOverrides&quot;:[],&quot;registrationStatusDate&quot;:&quot;01/29/2020&quot;,&quot;registrationStudyPaths&quot;:[],&quot;registrationToDate&quot;:null,&quot;removeIndicator&quot;:null,&quot;repeatOverride&quot;:&quot;N&quot;,&quot;reservedKey&quot;:null,&quot;rpthOverride&quot;:&quot;N&quot;,&quot;scheduleDescription&quot;:&quot;Lecture&quot;,&quot;scheduleType&quot;:&quot;L&quot;,&quot;sectionCourseTitle&quot;:&quot;Math C085&quot;,&quot;selectedAction&quot;:&quot;DW&quot;,&quot;selectedBillHour&quot;:null,&quot;selectedCreditHour&quot;:null,&quot;selectedGradingMode&quot;:{&quot;class&quot;:&quot;net.hedtech.banner.student.registration.RegistrationGradingMode&quot;,&quot;description&quot;:null,&quot;gradingMode&quot;:null},&quot;selectedLevel&quot;:{&quot;class&quot;:&quot;net.hedtech.banner.student.registration.RegistrationLevel&quot;,&quot;description&quot;:null,&quot;level&quot;:null},&quot;selectedOverride&quot;:null,&quot;selectedStartEndDate&quot;:null,&quot;selectedStudyPath&quot;:{&quot;class&quot;:&quot;net.hedtech.banner.student.registration.RegistrationStudyPath&quot;,&quot;description&quot;:null,&quot;keySequenceNumber&quot;:null},&quot;sequenceNumber&quot;:&quot;1&quot;,&quot;sessionId&quot;:null,&quot;specialApproval&quot;:null,&quot;startDate&quot;:&quot;01/05/2011&quot;,&quot;statusDescription&quot;:&quot;Registered&quot;,&quot;statusIndicator&quot;:&quot;R&quot;,&quot;structuredRegistrationDetailSequence&quot;:null,&quot;structuredRegistrationHeaderSequence&quot;:null,&quot;studentAttributeOverride&quot;:&quot;N&quot;,&quot;studyPathKeySequence&quot;:null,&quot;studyPathName&quot;:null,&quot;subject&quot;:&quot;MATH&quot;,&quot;subjectDescription&quot;:&quot;Mathematics MATH&quot;,&quot;submitResultIndicator&quot;:&quot;S&quot;,&quot;term&quot;:&quot;201120&quot;,&quot;testOverride&quot;:&quot;N&quot;,&quot;timeOverride&quot;:&quot;N&quot;,&quot;timeStatusHours&quot;:0,&quot;tuitionWaiverIndicator&quot;:&quot;N&quot;,&quot;version&quot;:1,&quot;voiceResponseStatusType&quot;:&quot;R&quot;,&quot;waitOverride&quot;:&quot;N&quot;,&quot;waivHour&quot;:3},{&quot;addAuthorizationCrnMessage&quot;:null,&quot;addAuthorizationCrnStatus&quot;:null,&quot;addDate&quot;:&quot;01/29/2020&quot;,&quot;approvalOverride&quot;:&quot;N&quot;,&quot;approvalReceivedIndicator&quot;:null,&quot;approvalReceivedIndicatorHold&quot;:null,&quot;attached&quot;:true,&quot;attemptedHours&quot;:0,&quot;authorizationCode&quot;:null,&quot;billHour&quot;:3,&quot;billHourInitial&quot;:3,&quot;billHours&quot;:{&quot;class&quot;:&quot;net.hedtech.banner.student.registration.RegistrationCreditHour&quot;,&quot;creditHourHigh&quot;:null,&quot;creditHourIndicator&quot;:null,&quot;creditHourList&quot;:null,&quot;creditHourLow&quot;:null},&quot;block&quot;:null,&quot;blockPermitOverride&quot;:null,&quot;blockRuleSequenceNumber&quot;:null,&quot;campus&quot;:&quot;M&quot;,&quot;campusOverride&quot;:&quot;N&quot;,&quot;capcOverride&quot;:&quot;N&quot;,&quot;censusEnrollmentDate&quot;:null,&quot;class&quot;:&quot;net.hedtech.banner.student.registration.RegistrationTemporaryView&quot;,&quot;classOverride&quot;:&quot;N&quot;,&quot;cohortOverride&quot;:&quot;N&quot;,&quot;collegeOverride&quot;:&quot;N&quot;,&quot;completionDate&quot;:&quot;05/15/2099&quot;,&quot;corqOverride&quot;:&quot;N&quot;,&quot;courseContinuingEducationIndicator&quot;:&quot;N&quot;,&quot;courseNumber&quot;:&quot;2100&quot;,&quot;courseReferenceNumber&quot;:&quot;21162&quot;,&quot;courseRegistrationStatus&quot;:&quot;RW&quot;,&quot;courseRegistrationStatusDescription&quot;:&quot;**Web Registered**&quot;,&quot;courseTitle&quot;:&quot;Moral Philosophy&quot;,&quot;creditHour&quot;:3,&quot;creditHourInitial&quot;:3,&quot;creditHours&quot;:{&quot;class&quot;:&quot;net.hedtech.banner.student.registration.RegistrationCreditHour&quot;,&quot;creditHourHigh&quot;:null,&quot;creditHourIndicator&quot;:null,&quot;creditHourList&quot;:null,&quot;creditHourLow&quot;:null},&quot;crnErrors&quot;:[],&quot;dataOrigin&quot;:&quot;Banner&quot;,&quot;degreeOverride&quot;:&quot;N&quot;,&quot;departmentOverride&quot;:&quot;N&quot;,&quot;dirty&quot;:false,&quot;dirtyPropertyNames&quot;:[],&quot;duplicateOverride&quot;:&quot;N&quot;,&quot;durationUnit&quot;:null,&quot;errorFlag&quot;:null,&quot;errorLink&quot;:null,&quot;errors&quot;:{&quot;errors&quot;:[]},&quot;grade&quot;:null,&quot;gradeComment&quot;:null,&quot;gradeDate&quot;:null,&quot;gradeMid&quot;:null,&quot;gradingMode&quot;:&quot;S&quot;,&quot;gradingModeDescription&quot;:&quot;Standard Letter&quot;,&quot;id&quot;:${id3},&quot;instructionalMethodDescription&quot;:null,&quot;lastModified&quot;:&quot;01/29/2020&quot;,&quot;lastModifiedBy&quot;:&quot;1110076&quot;,&quot;level&quot;:&quot;UG&quot;,&quot;levelDescription&quot;:&quot;Undergraduate&quot;,&quot;levelOverride&quot;:&quot;N&quot;,&quot;linkOverride&quot;:&quot;N&quot;,&quot;majorOverride&quot;:&quot;N&quot;,&quot;message&quot;:null,&quot;messageType&quot;:null,&quot;mexcOverride&quot;:&quot;N&quot;,&quot;newBlock&quot;:null,&quot;newBlockRuleSequenceNumber&quot;:null,&quot;numberOfUnits&quot;:null,&quot;originalCourseRegistrationStatus&quot;:&quot;RW&quot;,&quot;originalRecordStatus&quot;:&quot;N&quot;,&quot;originalVoiceResponseStatusType&quot;:&quot;R&quot;,&quot;overrideDurationIndicator&quot;:false,&quot;partOfTerm&quot;:&quot;1&quot;,&quot;partOfTermDescription&quot;:&quot;Full Term&quot;,&quot;permitOverrideUpdate&quot;:null,&quot;preqOverride&quot;:&quot;N&quot;,&quot;programOverride&quot;:&quot;N&quot;,&quot;properties&quot;:{&quot;courseTitle&quot;:&quot;Moral Philosophy&quot;,&quot;addDate&quot;:&quot;01/29/2020&quot;,&quot;newBlockRuleSequenceNumber&quot;:null,&quot;statusDescription&quot;:&quot;Pending&quot;,&quot;newBlock&quot;:null,&quot;waivHour&quot;:3,&quot;partOfTermDescription&quot;:&quot;Full Term&quot;,&quot;mexcOverride&quot;:&quot;N&quot;,&quot;sequenceNumber&quot;:&quot;4&quot;,&quot;sectionCourseTitle&quot;:&quot;Moral Philosophy&quot;,&quot;startDate&quot;:&quot;01/05/2011&quot;,&quot;instructionalMethodDescription&quot;:null,&quot;censusEnrollmentDate&quot;:&quot;03/15/2011&quot;,&quot;gradeMid&quot;:null,&quot;originalRecordStatus&quot;:&quot;N&quot;,&quot;testOverride&quot;:&quot;N&quot;,&quot;gradingModeDescription&quot;:&quot;Standard Letter&quot;,&quot;durationUnit&quot;:null,&quot;levelOverride&quot;:&quot;N&quot;,&quot;selectedLevel&quot;:{&quot;class&quot;:&quot;net.hedtech.banner.student.registration.RegistrationLevel&quot;,&quot;description&quot;:null,&quot;level&quot;:null},&quot;level&quot;:&quot;UG&quot;,&quot;removeIndicator&quot;:null,&quot;errorLink&quot;:null,&quot;recordStatus&quot;:&quot;N&quot;,&quot;dataOrigin&quot;:&quot;Banner&quot;,&quot;registrationActions&quot;:[{&quot;class&quot;:&quot;net.hedtech.banner.student.registration.RegistrationAction&quot;,&quot;courseRegistrationStatus&quot;:&quot;RW&quot;,&quot;description&quot;:&quot;**Web Registered**&quot;,&quot;registrationStatusDate&quot;:null,&quot;remove&quot;:false,&quot;subActions&quot;:null,&quot;voiceType&quot;:&quot;R&quot;},{&quot;class&quot;:&quot;net.hedtech.banner.student.registration.RegistrationAction&quot;,&quot;courseRegistrationStatus&quot;:&quot;internal-remove&quot;,&quot;description&quot;:&quot;Remove&quot;,&quot;registrationStatusDate&quot;:null,&quot;remove&quot;:true,&quot;subActions&quot;:null,&quot;voiceType&quot;:null}],&quot;permitOverrideUpdate&quot;:null,&quot;attemptedHours&quot;:0,&quot;originalVoiceResponseStatusType&quot;:null,&quot;gradingMode&quot;:&quot;S&quot;,&quot;pidm&quot;:111163,&quot;selectedAction&quot;:null,&quot;completionDate&quot;:&quot;05/15/2099&quot;,&quot;message&quot;:null,&quot;courseRegistrationStatus&quot;:&quot;RW&quot;,&quot;selectedStudyPath&quot;:{&quot;class&quot;:&quot;net.hedtech.banner.student.registration.RegistrationStudyPath&quot;,&quot;description&quot;:null,&quot;keySequenceNumber&quot;:null},&quot;studentAttributeOverride&quot;:&quot;N&quot;,&quot;approvalOverride&quot;:&quot;N&quot;,&quot;classOverride&quot;:&quot;N&quot;,&quot;campusOverride&quot;:&quot;N&quot;,&quot;overrideDurationIndicator&quot;:false,&quot;billHourInitial&quot;:3,&quot;courseContinuingEducationIndicator&quot;:&quot;N&quot;,&quot;registrationOverrides&quot;:[],&quot;specialApproval&quot;:null,&quot;preqOverride&quot;:&quot;N&quot;,&quot;majorOverride&quot;:&quot;N&quot;,&quot;approvalReceivedIndicatorHold&quot;:null,&quot;repeatOverride&quot;:&quot;N&quot;,&quot;tuitionWaiverIndicator&quot;:&quot;N&quot;,&quot;billHours&quot;:{&quot;class&quot;:&quot;net.hedtech.banner.student.registration.RegistrationCreditHour&quot;,&quot;creditHourHigh&quot;:null,&quot;creditHourIndicator&quot;:null,&quot;creditHourList&quot;:null,&quot;creditHourLow&quot;:null},&quot;courseRegistrationStatusDescription&quot;:&quot;**Web Registered**&quot;,&quot;programOverride&quot;:&quot;N&quot;,&quot;scheduleDescription&quot;:&quot;Lecture&quot;,&quot;creditHour&quot;:3,&quot;timeStatusHours&quot;:0,&quot;scheduleType&quot;:&quot;L&quot;,&quot;creditHourInitial&quot;:3,&quot;selectedStartEndDate&quot;:{&quot;class&quot;:&quot;net.hedtech.banner.student.registration.RegistrationOlrStartEndDate&quot;,&quot;courseReferenceNumber&quot;:null,&quot;durationUnit&quot;:null,&quot;durationUnitDescription&quot;:null,&quot;endDate&quot;:null,&quot;numberOfUnits&quot;:null,&quot;overrideDurationIndicator&quot;:null,&quot;registrationDate&quot;:null,&quot;sectionEndFromDate&quot;:null,&quot;sectionEndToDate&quot;:null,&quot;sectionStartFromDate&quot;:null,&quot;sectionStartToDate&quot;:null,&quot;startDate&quot;:null,&quot;systemIn&quot;:null},&quot;departmentOverride&quot;:&quot;N&quot;,&quot;grade&quot;:null,&quot;approvalReceivedIndicator&quot;:null,&quot;courseNumber&quot;:&quot;2100&quot;,&quot;structuredRegistrationHeaderSequence&quot;:null,&quot;capcOverride&quot;:&quot;N&quot;,&quot;addAuthorizationCrnStatus&quot;:&quot;INCOMPLETE&quot;,&quot;registrationStatusDate&quot;:&quot;01/29/2020&quot;,&quot;gradeComment&quot;:null,&quot;block&quot;:null,&quot;registrationLevels&quot;:[{&quot;class&quot;:&quot;net.hedtech.banner.student.registration.RegistrationLevel&quot;,&quot;description&quot;:&quot;Credit&quot;,&quot;level&quot;:&quot;CR&quot;},{&quot;class&quot;:&quot;net.hedtech.banner.student.registration.RegistrationLevel&quot;,&quot;description&quot;:&quot;Undergraduate&quot;,&quot;level&quot;:&quot;UG&quot;}],&quot;selectedCreditHour&quot;:null,&quot;messageType&quot;:null,&quot;reservedKey&quot;:null,&quot;voiceResponseStatusType&quot;:&quot;R&quot;,&quot;levelDescription&quot;:&quot;Undergraduate&quot;,&quot;errorFlag&quot;:null,&quot;registrationToDate&quot;:null,&quot;collegeOverride&quot;:&quot;N&quot;,&quot;subject&quot;:&quot;PHIL&quot;,&quot;partOfTerm&quot;:&quot;1&quot;,&quot;cohortOverride&quot;:&quot;N&quot;,&quot;subjectDescription&quot;:&quot;Philosophy PHIL&quot;,&quot;lastModified&quot;:&quot;01/29/2020&quot;,&quot;gradeDate&quot;:null,&quot;selectedBillHour&quot;:null,&quot;term&quot;:&quot;201120&quot;,&quot;numberOfUnits&quot;:null,&quot;studyPathKeySequence&quot;:null,&quot;crnErrors&quot;:[],&quot;creditHours&quot;:{&quot;class&quot;:&quot;net.hedtech.banner.student.registration.RegistrationCreditHour&quot;,&quot;creditHourHigh&quot;:null,&quot;creditHourIndicator&quot;:null,&quot;creditHourList&quot;:null,&quot;creditHourLow&quot;:null},&quot;blockPermitOverride&quot;:null,&quot;studyPathName&quot;:null,&quot;statusIndicator&quot;:&quot;P&quot;,&quot;sessionId&quot;:null,&quot;billHour&quot;:3,&quot;registrationFromDate&quot;:null,&quot;duplicateOverride&quot;:&quot;N&quot;,&quot;blockRuleSequenceNumber&quot;:null,&quot;structuredRegistrationDetailSequence&quot;:null,&quot;lastModifiedBy&quot;:&quot;1110076&quot;,&quot;waitOverride&quot;:&quot;N&quot;,&quot;submitResultIndicator&quot;:null,&quot;degreeOverride&quot;:&quot;N&quot;,&quot;campus&quot;:&quot;M&quot;,&quot;selectedGradingMode&quot;:{&quot;class&quot;:&quot;net.hedtech.banner.student.registration.RegistrationGradingMode&quot;,&quot;description&quot;:null,&quot;gradingMode&quot;:null},&quot;selectedOverride&quot;:null,&quot;corqOverride&quot;:&quot;N&quot;,&quot;registrationAuthorizationActiveCode&quot;:&quot;N&quot;,&quot;linkOverride&quot;:&quot;N&quot;,&quot;timeOverride&quot;:&quot;N&quot;,&quot;courseReferenceNumber&quot;:&quot;21162&quot;,&quot;authorizationCode&quot;:null,&quot;originalCourseRegistrationStatus&quot;:null,&quot;addAuthorizationCrnMessage&quot;:null,&quot;registrationStudyPaths&quot;:[],&quot;rpthOverride&quot;:&quot;N&quot;,&quot;registrationGradingModes&quot;:[{&quot;class&quot;:&quot;net.hedtech.banner.student.registration.RegistrationGradingMode&quot;,&quot;description&quot;:&quot;Audit&quot;,&quot;gradingMode&quot;:&quot;A&quot;},{&quot;class&quot;:&quot;net.hedtech.banner.student.registration.RegistrationGradingMode&quot;,&quot;description&quot;:&quot;Pass/Fail&quot;,&quot;gradingMode&quot;:&quot;P&quot;},{&quot;class&quot;:&quot;net.hedtech.banner.student.registration.RegistrationGradingMode&quot;,&quot;description&quot;:&quot;Standard Letter&quot;,&quot;gradingMode&quot;:&quot;S&quot;}]},&quot;recordStatus&quot;:&quot;Q&quot;,&quot;registrationActions&quot;:[{&quot;class&quot;:&quot;net.hedtech.banner.student.registration.RegistrationAction&quot;,&quot;courseRegistrationStatus&quot;:null,&quot;description&quot;:&quot;None&quot;,&quot;registrationStatusDate&quot;:null,&quot;remove&quot;:false,&quot;subActions&quot;:null,&quot;voiceType&quot;:null},{&quot;class&quot;:&quot;net.hedtech.banner.student.registration.RegistrationAction&quot;,&quot;courseRegistrationStatus&quot;:&quot;DW&quot;,&quot;description&quot;:&quot;Web Drop&quot;,&quot;registrationStatusDate&quot;:null,&quot;remove&quot;:true,&quot;subActions&quot;:null,&quot;voiceType&quot;:&quot;D&quot;}],&quot;registrationAuthorizationActiveCode&quot;:null,&quot;registrationFromDate&quot;:null,&quot;registrationGradingModes&quot;:[{&quot;class&quot;:&quot;net.hedtech.banner.student.registration.RegistrationGradingMode&quot;,&quot;description&quot;:&quot;Audit&quot;,&quot;gradingMode&quot;:&quot;A&quot;},{&quot;class&quot;:&quot;net.hedtech.banner.student.registration.RegistrationGradingMode&quot;,&quot;description&quot;:&quot;Pass/Fail&quot;,&quot;gradingMode&quot;:&quot;P&quot;},{&quot;class&quot;:&quot;net.hedtech.banner.student.registration.RegistrationGradingMode&quot;,&quot;description&quot;:&quot;Standard Letter&quot;,&quot;gradingMode&quot;:&quot;S&quot;}],&quot;registrationLevels&quot;:[{&quot;class&quot;:&quot;net.hedtech.banner.student.registration.RegistrationLevel&quot;,&quot;description&quot;:&quot;Credit&quot;,&quot;level&quot;:&quot;CR&quot;},{&quot;class&quot;:&quot;net.hedtech.banner.student.registration.RegistrationLevel&quot;,&quot;description&quot;:&quot;Undergraduate&quot;,&quot;level&quot;:&quot;UG&quot;}],&quot;registrationOverrides&quot;:[],&quot;registrationStatusDate&quot;:&quot;01/29/2020&quot;,&quot;registrationStudyPaths&quot;:[],&quot;registrationToDate&quot;:null,&quot;removeIndicator&quot;:null,&quot;repeatOverride&quot;:&quot;N&quot;,&quot;reservedKey&quot;:null,&quot;rpthOverride&quot;:&quot;N&quot;,&quot;scheduleDescription&quot;:&quot;Lecture&quot;,&quot;scheduleType&quot;:&quot;L&quot;,&quot;sectionCourseTitle&quot;:&quot;Moral Philosophy&quot;,&quot;selectedAction&quot;:&quot;DW&quot;,&quot;selectedBillHour&quot;:null,&quot;selectedCreditHour&quot;:null,&quot;selectedGradingMode&quot;:{&quot;class&quot;:&quot;net.hedtech.banner.student.registration.RegistrationGradingMode&quot;,&quot;description&quot;:null,&quot;gradingMode&quot;:null},&quot;selectedLevel&quot;:{&quot;class&quot;:&quot;net.hedtech.banner.student.registration.RegistrationLevel&quot;,&quot;description&quot;:null,&quot;level&quot;:null},&quot;selectedOverride&quot;:null,&quot;selectedStartEndDate&quot;:null,&quot;selectedStudyPath&quot;:{&quot;class&quot;:&quot;net.hedtech.banner.student.registration.RegistrationStudyPath&quot;,&quot;description&quot;:null,&quot;keySequenceNumber&quot;:null},&quot;sequenceNumber&quot;:&quot;4&quot;,&quot;sessionId&quot;:null,&quot;specialApproval&quot;:null,&quot;startDate&quot;:&quot;01/05/2011&quot;,&quot;statusDescription&quot;:&quot;Registered&quot;,&quot;statusIndicator&quot;:&quot;R&quot;,&quot;structuredRegistrationDetailSequence&quot;:null,&quot;structuredRegistrationHeaderSequence&quot;:null,&quot;studentAttributeOverride&quot;:&quot;N&quot;,&quot;studyPathKeySequence&quot;:null,&quot;studyPathName&quot;:null,&quot;subject&quot;:&quot;PHIL&quot;,&quot;subjectDescription&quot;:&quot;Philosophy PHIL&quot;,&quot;submitResultIndicator&quot;:&quot;S&quot;,&quot;term&quot;:&quot;201120&quot;,&quot;testOverride&quot;:&quot;N&quot;,&quot;timeOverride&quot;:&quot;N&quot;,&quot;timeStatusHours&quot;:0,&quot;tuitionWaiverIndicator&quot;:&quot;N&quot;,&quot;version&quot;:1,&quot;voiceResponseStatusType&quot;:&quot;R&quot;,&quot;waitOverride&quot;:&quot;N&quot;,&quot;waivHour&quot;:3},{&quot;addAuthorizationCrnMessage&quot;:null,&quot;addAuthorizationCrnStatus&quot;:null,&quot;addDate&quot;:&quot;01/29/2020&quot;,&quot;approvalOverride&quot;:&quot;N&quot;,&quot;approvalReceivedIndicator&quot;:null,&quot;approvalReceivedIndicatorHold&quot;:null,&quot;attached&quot;:true,&quot;attemptedHours&quot;:0,&quot;authorizationCode&quot;:null,&quot;billHour&quot;:4,&quot;billHourInitial&quot;:4,&quot;billHours&quot;:{&quot;class&quot;:&quot;net.hedtech.banner.student.registration.RegistrationCreditHour&quot;,&quot;creditHourHigh&quot;:null,&quot;creditHourIndicator&quot;:null,&quot;creditHourList&quot;:null,&quot;creditHourLow&quot;:null},&quot;block&quot;:null,&quot;blockPermitOverride&quot;:null,&quot;blockRuleSequenceNumber&quot;:null,&quot;campus&quot;:&quot;M&quot;,&quot;campusOverride&quot;:&quot;N&quot;,&quot;capcOverride&quot;:&quot;N&quot;,&quot;censusEnrollmentDate&quot;:null,&quot;class&quot;:&quot;net.hedtech.banner.student.registration.RegistrationTemporaryView&quot;,&quot;classOverride&quot;:&quot;N&quot;,&quot;cohortOverride&quot;:&quot;N&quot;,&quot;collegeOverride&quot;:&quot;N&quot;,&quot;completionDate&quot;:&quot;05/15/2099&quot;,&quot;corqOverride&quot;:&quot;N&quot;,&quot;courseContinuingEducationIndicator&quot;:&quot;N&quot;,&quot;courseNumber&quot;:&quot;${courseNumber2}&quot;,&quot;courseReferenceNumber&quot;:&quot;20418&quot;,&quot;courseRegistrationStatus&quot;:&quot;RW&quot;,&quot;courseRegistrationStatusDescription&quot;:&quot;**Web Registered**&quot;,&quot;courseTitle&quot;:&quot;20th Century American Literature&quot;,&quot;creditHour&quot;:4,&quot;creditHourInitial&quot;:4,&quot;creditHours&quot;:{&quot;class&quot;:&quot;net.hedtech.banner.student.registration.RegistrationCreditHour&quot;,&quot;creditHourHigh&quot;:null,&quot;creditHourIndicator&quot;:null,&quot;creditHourList&quot;:null,&quot;creditHourLow&quot;:null},&quot;crnErrors&quot;:[],&quot;dataOrigin&quot;:&quot;Banner&quot;,&quot;degreeOverride&quot;:&quot;N&quot;,&quot;departmentOverride&quot;:&quot;N&quot;,&quot;dirty&quot;:false,&quot;dirtyPropertyNames&quot;:[],&quot;duplicateOverride&quot;:&quot;N&quot;,&quot;durationUnit&quot;:null,&quot;errorFlag&quot;:null,&quot;errorLink&quot;:null,&quot;errors&quot;:{&quot;errors&quot;:[]},&quot;grade&quot;:null,&quot;gradeComment&quot;:null,&quot;gradeDate&quot;:null,&quot;gradeMid&quot;:null,&quot;gradingMode&quot;:&quot;S&quot;,&quot;gradingModeDescription&quot;:&quot;Standard Letter&quot;,&quot;id&quot;:${id2},&quot;instructionalMethodDescription&quot;:null,&quot;lastModified&quot;:&quot;01/29/2020&quot;,&quot;lastModifiedBy&quot;:&quot;1110076&quot;,&quot;level&quot;:&quot;UG&quot;,&quot;levelDescription&quot;:&quot;Undergraduate&quot;,&quot;levelOverride&quot;:&quot;N&quot;,&quot;linkOverride&quot;:&quot;N&quot;,&quot;majorOverride&quot;:&quot;N&quot;,&quot;message&quot;:null,&quot;messageType&quot;:null,&quot;mexcOverride&quot;:&quot;N&quot;,&quot;newBlock&quot;:null,&quot;newBlockRuleSequenceNumber&quot;:null,&quot;numberOfUnits&quot;:null,&quot;originalCourseRegistrationStatus&quot;:&quot;RW&quot;,&quot;originalRecordStatus&quot;:&quot;N&quot;,&quot;originalVoiceResponseStatusType&quot;:&quot;R&quot;,&quot;overrideDurationIndicator&quot;:false,&quot;partOfTerm&quot;:&quot;1&quot;,&quot;partOfTermDescription&quot;:&quot;Full Term&quot;,&quot;permitOverrideUpdate&quot;:null,&quot;preqOverride&quot;:&quot;N&quot;,&quot;programOverride&quot;:&quot;N&quot;,&quot;properties&quot;:{&quot;newBlockRuleSequenceNumber&quot;:null,&quot;statusDescription&quot;:&quot;Pending&quot;,&quot;newBlock&quot;:null,&quot;courseNumber&quot;:&quot;${courseNumber2}&quot;,&quot;partOfTermDescription&quot;:&quot;Full Term&quot;,&quot;mexcOverride&quot;:&quot;N&quot;,&quot;sequenceNumber&quot;:&quot;2&quot;,&quot;startDate&quot;:&quot;01/05/2011&quot;,&quot;instructionalMethodDescription&quot;:null,&quot;censusEnrollmentDate&quot;:&quot;03/15/2011&quot;,&quot;gradeMid&quot;:null,&quot;originalRecordStatus&quot;:&quot;N&quot;,&quot;testOverride&quot;:&quot;N&quot;,&quot;addDate&quot;:&quot;01/29/2020&quot;,&quot;gradingModeDescription&quot;:&quot;Standard Letter&quot;,&quot;durationUnit&quot;:null,&quot;levelOverride&quot;:&quot;N&quot;,&quot;sectionCourseTitle&quot;:&quot;20th Century American Lit.&quot;,&quot;waivHour&quot;:4,&quot;level&quot;:&quot;UG&quot;,&quot;removeIndicator&quot;:null,&quot;errorLink&quot;:null,&quot;recordStatus&quot;:&quot;N&quot;,&quot;dataOrigin&quot;:&quot;Banner&quot;,&quot;registrationActions&quot;:[{&quot;class&quot;:&quot;net.hedtech.banner.student.registration.RegistrationAction&quot;,&quot;courseRegistrationStatus&quot;:&quot;RW&quot;,&quot;description&quot;:&quot;**Web Registered**&quot;,&quot;registrationStatusDate&quot;:null,&quot;remove&quot;:false,&quot;subActions&quot;:null,&quot;voiceType&quot;:&quot;R&quot;},{&quot;class&quot;:&quot;net.hedtech.banner.student.registration.RegistrationAction&quot;,&quot;courseRegistrationStatus&quot;:&quot;internal-remove&quot;,&quot;description&quot;:&quot;Remove&quot;,&quot;registrationStatusDate&quot;:null,&quot;remove&quot;:true,&quot;subActions&quot;:null,&quot;voiceType&quot;:null}],&quot;permitOverrideUpdate&quot;:null,&quot;selectedStartEndDate&quot;:{&quot;class&quot;:&quot;net.hedtech.banner.student.registration.RegistrationOlrStartEndDate&quot;,&quot;courseReferenceNumber&quot;:null,&quot;durationUnit&quot;:null,&quot;durationUnitDescription&quot;:null,&quot;endDate&quot;:null,&quot;numberOfUnits&quot;:null,&quot;overrideDurationIndicator&quot;:null,&quot;registrationDate&quot;:null,&quot;sectionEndFromDate&quot;:null,&quot;sectionEndToDate&quot;:null,&quot;sectionStartFromDate&quot;:null,&quot;sectionStartToDate&quot;:null,&quot;startDate&quot;:null,&quot;systemIn&quot;:null},&quot;attemptedHours&quot;:0,&quot;originalVoiceResponseStatusType&quot;:null,&quot;gradingMode&quot;:&quot;S&quot;,&quot;pidm&quot;:111163,&quot;creditHours&quot;:{&quot;class&quot;:&quot;net.hedtech.banner.student.registration.RegistrationCreditHour&quot;,&quot;creditHourHigh&quot;:null,&quot;creditHourIndicator&quot;:null,&quot;creditHourList&quot;:null,&quot;creditHourLow&quot;:null},&quot;selectedAction&quot;:null,&quot;completionDate&quot;:&quot;05/15/2099&quot;,&quot;registrationLevels&quot;:[{&quot;class&quot;:&quot;net.hedtech.banner.student.registration.RegistrationLevel&quot;,&quot;description&quot;:&quot;Undergraduate&quot;,&quot;level&quot;:&quot;UG&quot;}],&quot;selectedLevel&quot;:{&quot;class&quot;:&quot;net.hedtech.banner.student.registration.RegistrationLevel&quot;,&quot;description&quot;:null,&quot;level&quot;:null},&quot;message&quot;:null,&quot;courseRegistrationStatus&quot;:&quot;RW&quot;,&quot;creditHour&quot;:4,&quot;studentAttributeOverride&quot;:&quot;N&quot;,&quot;approvalOverride&quot;:&quot;N&quot;,&quot;classOverride&quot;:&quot;N&quot;,&quot;campusOverride&quot;:&quot;N&quot;,&quot;overrideDurationIndicator&quot;:false,&quot;creditHourInitial&quot;:4,&quot;courseContinuingEducationIndicator&quot;:&quot;N&quot;,&quot;registrationOverrides&quot;:[],&quot;specialApproval&quot;:null,&quot;preqOverride&quot;:&quot;N&quot;,&quot;majorOverride&quot;:&quot;N&quot;,&quot;approvalReceivedIndicatorHold&quot;:null,&quot;repeatOverride&quot;:&quot;N&quot;,&quot;tuitionWaiverIndicator&quot;:&quot;N&quot;,&quot;registrationGradingModes&quot;:[{&quot;class&quot;:&quot;net.hedtech.banner.student.registration.RegistrationGradingMode&quot;,&quot;description&quot;:&quot;Standard Letter&quot;,&quot;gradingMode&quot;:&quot;S&quot;}],&quot;courseRegistrationStatusDescription&quot;:&quot;**Web Registered**&quot;,&quot;programOverride&quot;:&quot;N&quot;,&quot;scheduleDescription&quot;:&quot;Lecture&quot;,&quot;timeStatusHours&quot;:0,&quot;scheduleType&quot;:&quot;L&quot;,&quot;billHourInitial&quot;:4,&quot;selectedGradingMode&quot;:{&quot;class&quot;:&quot;net.hedtech.banner.student.registration.RegistrationGradingMode&quot;,&quot;description&quot;:null,&quot;gradingMode&quot;:null},&quot;billHours&quot;:{&quot;class&quot;:&quot;net.hedtech.banner.student.registration.RegistrationCreditHour&quot;,&quot;creditHourHigh&quot;:null,&quot;creditHourIndicator&quot;:null,&quot;creditHourList&quot;:null,&quot;creditHourLow&quot;:null},&quot;departmentOverride&quot;:&quot;N&quot;,&quot;grade&quot;:null,&quot;approvalReceivedIndicator&quot;:null,&quot;structuredRegistrationHeaderSequence&quot;:null,&quot;capcOverride&quot;:&quot;N&quot;,&quot;addAuthorizationCrnStatus&quot;:&quot;INCOMPLETE&quot;,&quot;gradeComment&quot;:null,&quot;courseReferenceNumber&quot;:&quot;20418&quot;,&quot;block&quot;:null,&quot;selectedCreditHour&quot;:null,&quot;messageType&quot;:null,&quot;reservedKey&quot;:null,&quot;voiceResponseStatusType&quot;:&quot;R&quot;,&quot;levelDescription&quot;:&quot;Undergraduate&quot;,&quot;errorFlag&quot;:null,&quot;registrationToDate&quot;:null,&quot;collegeOverride&quot;:&quot;N&quot;,&quot;partOfTerm&quot;:&quot;1&quot;,&quot;subjectDescription&quot;:&quot;English ENGL&quot;,&quot;cohortOverride&quot;:&quot;N&quot;,&quot;registrationStatusDate&quot;:&quot;01/29/2020&quot;,&quot;lastModified&quot;:&quot;01/29/2020&quot;,&quot;gradeDate&quot;:null,&quot;selectedBillHour&quot;:null,&quot;term&quot;:&quot;201120&quot;,&quot;numberOfUnits&quot;:null,&quot;studyPathKeySequence&quot;:null,&quot;crnErrors&quot;:[],&quot;blockPermitOverride&quot;:null,&quot;studyPathName&quot;:null,&quot;statusIndicator&quot;:&quot;P&quot;,&quot;sessionId&quot;:null,&quot;registrationFromDate&quot;:null,&quot;duplicateOverride&quot;:&quot;N&quot;,&quot;blockRuleSequenceNumber&quot;:null,&quot;structuredRegistrationDetailSequence&quot;:null,&quot;lastModifiedBy&quot;:&quot;1110076&quot;,&quot;waitOverride&quot;:&quot;N&quot;,&quot;submitResultIndicator&quot;:null,&quot;degreeOverride&quot;:&quot;N&quot;,&quot;subject&quot;:&quot;ENGL&quot;,&quot;campus&quot;:&quot;M&quot;,&quot;selectedOverride&quot;:null,&quot;corqOverride&quot;:&quot;N&quot;,&quot;registrationAuthorizationActiveCode&quot;:&quot;N&quot;,&quot;linkOverride&quot;:&quot;N&quot;,&quot;timeOverride&quot;:&quot;N&quot;,&quot;billHour&quot;:4,&quot;courseTitle&quot;:&quot;20th Century American Literature&quot;,&quot;selectedStudyPath&quot;:{&quot;class&quot;:&quot;net.hedtech.banner.student.registration.RegistrationStudyPath&quot;,&quot;description&quot;:null,&quot;keySequenceNumber&quot;:null},&quot;authorizationCode&quot;:null,&quot;originalCourseRegistrationStatus&quot;:null,&quot;addAuthorizationCrnMessage&quot;:null,&quot;registrationStudyPaths&quot;:[],&quot;rpthOverride&quot;:&quot;N&quot;},&quot;recordStatus&quot;:&quot;Q&quot;,&quot;registrationActions&quot;:[{&quot;class&quot;:&quot;net.hedtech.banner.student.registration.RegistrationAction&quot;,&quot;courseRegistrationStatus&quot;:null,&quot;description&quot;:&quot;None&quot;,&quot;registrationStatusDate&quot;:null,&quot;remove&quot;:false,&quot;subActions&quot;:null,&quot;voiceType&quot;:null},{&quot;class&quot;:&quot;net.hedtech.banner.student.registration.RegistrationAction&quot;,&quot;courseRegistrationStatus&quot;:&quot;DW&quot;,&quot;description&quot;:&quot;Web Drop&quot;,&quot;registrationStatusDate&quot;:null,&quot;remove&quot;:true,&quot;subActions&quot;:null,&quot;voiceType&quot;:&quot;D&quot;}],&quot;registrationAuthorizationActiveCode&quot;:null,&quot;registrationFromDate&quot;:null,&quot;registrationGradingModes&quot;:[{&quot;class&quot;:&quot;net.hedtech.banner.student.registration.RegistrationGradingMode&quot;,&quot;description&quot;:&quot;Standard Letter&quot;,&quot;gradingMode&quot;:&quot;S&quot;}],&quot;registrationLevels&quot;:[{&quot;class&quot;:&quot;net.hedtech.banner.student.registration.RegistrationLevel&quot;,&quot;description&quot;:&quot;Undergraduate&quot;,&quot;level&quot;:&quot;UG&quot;}],&quot;registrationOverrides&quot;:[],&quot;registrationStatusDate&quot;:&quot;01/29/2020&quot;,&quot;registrationStudyPaths&quot;:[],&quot;registrationToDate&quot;:null,&quot;removeIndicator&quot;:null,&quot;repeatOverride&quot;:&quot;N&quot;,&quot;reservedKey&quot;:null,&quot;rpthOverride&quot;:&quot;N&quot;,&quot;scheduleDescription&quot;:&quot;Lecture&quot;,&quot;scheduleType&quot;:&quot;L&quot;,&quot;sectionCourseTitle&quot;:&quot;20th Century American Lit.&quot;,&quot;selectedAction&quot;:&quot;DW&quot;,&quot;selectedBillHour&quot;:null,&quot;selectedCreditHour&quot;:null,&quot;selectedGradingMode&quot;:{&quot;class&quot;:&quot;net.hedtech.banner.student.registration.RegistrationGradingMode&quot;,&quot;description&quot;:null,&quot;gradingMode&quot;:null},&quot;selectedLevel&quot;:{&quot;class&quot;:&quot;net.hedtech.banner.student.registration.RegistrationLevel&quot;,&quot;description&quot;:null,&quot;level&quot;:null},&quot;selectedOverride&quot;:null,&quot;selectedStartEndDate&quot;:null,&quot;selectedStudyPath&quot;:{&quot;class&quot;:&quot;net.hedtech.banner.student.registration.RegistrationStudyPath&quot;,&quot;description&quot;:null,&quot;keySequenceNumber&quot;:null},&quot;sequenceNumber&quot;:&quot;2&quot;,&quot;sessionId&quot;:null,&quot;specialApproval&quot;:null,&quot;startDate&quot;:&quot;01/05/2011&quot;,&quot;statusDescription&quot;:&quot;Registered&quot;,&quot;statusIndicator&quot;:&quot;R&quot;,&quot;structuredRegistrationDetailSequence&quot;:null,&quot;structuredRegistrationHeaderSequence&quot;:null,&quot;studentAttributeOverride&quot;:&quot;N&quot;,&quot;studyPathKeySequence&quot;:null,&quot;studyPathName&quot;:null,&quot;subject&quot;:&quot;ENGL&quot;,&quot;subjectDescription&quot;:&quot;English ENGL&quot;,&quot;submitResultIndicator&quot;:&quot;S&quot;,&quot;term&quot;:&quot;201120&quot;,&quot;testOverride&quot;:&quot;N&quot;,&quot;timeOverride&quot;:&quot;N&quot;,&quot;timeStatusHours&quot;:0,&quot;tuitionWaiverIndicator&quot;:&quot;N&quot;,&quot;version&quot;:1,&quot;voiceResponseStatusType&quot;:&quot;R&quot;,&quot;waitOverride&quot;:&quot;N&quot;,&quot;waivHour&quot;:4},{&quot;addAuthorizationCrnMessage&quot;:null,&quot;addAuthorizationCrnStatus&quot;:null,&quot;addDate&quot;:&quot;01/29/2020&quot;,&quot;approvalOverride&quot;:&quot;N&quot;,&quot;approvalReceivedIndicator&quot;:null,&quot;approvalReceivedIndicatorHold&quot;:null,&quot;attached&quot;:true,&quot;attemptedHours&quot;:0,&quot;authorizationCode&quot;:null,&quot;billHour&quot;:3,&quot;billHourInitial&quot;:3,&quot;billHours&quot;:{&quot;class&quot;:&quot;net.hedtech.banner.student.registration.RegistrationCreditHour&quot;,&quot;creditHourHigh&quot;:null,&quot;creditHourIndicator&quot;:null,&quot;creditHourList&quot;:null,&quot;creditHourLow&quot;:null},&quot;block&quot;:null,&quot;blockPermitOverride&quot;:null,&quot;blockRuleSequenceNumber&quot;:null,&quot;campus&quot;:&quot;M&quot;,&quot;campusOverride&quot;:&quot;N&quot;,&quot;capcOverride&quot;:&quot;N&quot;,&quot;censusEnrollmentDate&quot;:null,&quot;class&quot;:&quot;net.hedtech.banner.student.registration.RegistrationTemporaryView&quot;,&quot;classOverride&quot;:&quot;N&quot;,&quot;cohortOverride&quot;:&quot;N&quot;,&quot;collegeOverride&quot;:&quot;N&quot;,&quot;completionDate&quot;:&quot;05/15/2099&quot;,&quot;corqOverride&quot;:&quot;N&quot;,&quot;courseContinuingEducationIndicator&quot;:&quot;N&quot;,&quot;courseNumber&quot;:&quot;${courseNumber1}&quot;,&quot;courseReferenceNumber&quot;:&quot;21019&quot;,&quot;courseRegistrationStatus&quot;:&quot;RW&quot;,&quot;courseRegistrationStatusDescription&quot;:&quot;**Web Registered**&quot;,&quot;courseTitle&quot;:&quot;Art History I: Before 1150 AD&quot;,&quot;creditHour&quot;:3,&quot;creditHourInitial&quot;:3,&quot;creditHours&quot;:{&quot;class&quot;:&quot;net.hedtech.banner.student.registration.RegistrationCreditHour&quot;,&quot;creditHourHigh&quot;:null,&quot;creditHourIndicator&quot;:null,&quot;creditHourList&quot;:null,&quot;creditHourLow&quot;:null},&quot;crnErrors&quot;:[],&quot;dataOrigin&quot;:&quot;Banner&quot;,&quot;degreeOverride&quot;:&quot;N&quot;,&quot;departmentOverride&quot;:&quot;N&quot;,&quot;dirty&quot;:false,&quot;dirtyPropertyNames&quot;:[],&quot;duplicateOverride&quot;:&quot;N&quot;,&quot;durationUnit&quot;:null,&quot;errorFlag&quot;:null,&quot;errorLink&quot;:null,&quot;errors&quot;:{&quot;errors&quot;:[]},&quot;grade&quot;:null,&quot;gradeComment&quot;:null,&quot;gradeDate&quot;:null,&quot;gradeMid&quot;:null,&quot;gradingMode&quot;:&quot;S&quot;,&quot;gradingModeDescription&quot;:&quot;Standard Letter&quot;,&quot;id&quot;:${id1},&quot;instructionalMethodDescription&quot;:null,&quot;lastModified&quot;:&quot;01/29/2020&quot;,&quot;lastModifiedBy&quot;:&quot;1110076&quot;,&quot;level&quot;:&quot;UG&quot;,&quot;levelDescription&quot;:&quot;Undergraduate&quot;,&quot;levelOverride&quot;:&quot;N&quot;,&quot;linkOverride&quot;:&quot;N&quot;,&quot;majorOverride&quot;:&quot;N&quot;,&quot;message&quot;:null,&quot;messageType&quot;:null,&quot;mexcOverride&quot;:&quot;N&quot;,&quot;newBlock&quot;:null,&quot;newBlockRuleSequenceNumber&quot;:null,&quot;numberOfUnits&quot;:null,&quot;originalCourseRegistrationStatus&quot;:&quot;RW&quot;,&quot;originalRecordStatus&quot;:&quot;N&quot;,&quot;originalVoiceResponseStatusType&quot;:&quot;R&quot;,&quot;overrideDurationIndicator&quot;:false,&quot;partOfTerm&quot;:&quot;1&quot;,&quot;partOfTermDescription&quot;:&quot;Full Term&quot;,&quot;permitOverrideUpdate&quot;:null,&quot;preqOverride&quot;:&quot;N&quot;,&quot;programOverride&quot;:&quot;N&quot;,&quot;properties&quot;:{&quot;selectedStartEndDate&quot;:{&quot;class&quot;:&quot;net.hedtech.banner.student.registration.RegistrationOlrStartEndDate&quot;,&quot;courseReferenceNumber&quot;:null,&quot;durationUnit&quot;:null,&quot;durationUnitDescription&quot;:null,&quot;endDate&quot;:null,&quot;numberOfUnits&quot;:null,&quot;overrideDurationIndicator&quot;:null,&quot;registrationDate&quot;:null,&quot;sectionEndFromDate&quot;:null,&quot;sectionEndToDate&quot;:null,&quot;sectionStartFromDate&quot;:null,&quot;sectionStartToDate&quot;:null,&quot;startDate&quot;:null,&quot;systemIn&quot;:null},&quot;newBlockRuleSequenceNumber&quot;:null,&quot;statusDescription&quot;:&quot;Pending&quot;,&quot;newBlock&quot;:null,&quot;waivHour&quot;:3,&quot;partOfTermDescription&quot;:&quot;Full Term&quot;,&quot;mexcOverride&quot;:&quot;N&quot;,&quot;creditHours&quot;:{&quot;class&quot;:&quot;net.hedtech.banner.student.registration.RegistrationCreditHour&quot;,&quot;creditHourHigh&quot;:null,&quot;creditHourIndicator&quot;:null,&quot;creditHourList&quot;:null,&quot;creditHourLow&quot;:null},&quot;sequenceNumber&quot;:&quot;4&quot;,&quot;startDate&quot;:&quot;01/05/2011&quot;,&quot;instructionalMethodDescription&quot;:null,&quot;censusEnrollmentDate&quot;:&quot;03/15/2011&quot;,&quot;gradeMid&quot;:null,&quot;originalRecordStatus&quot;:&quot;N&quot;,&quot;testOverride&quot;:&quot;N&quot;,&quot;selectedStudyPath&quot;:{&quot;class&quot;:&quot;net.hedtech.banner.student.registration.RegistrationStudyPath&quot;,&quot;description&quot;:null,&quot;keySequenceNumber&quot;:null},&quot;gradingModeDescription&quot;:&quot;Standard Letter&quot;,&quot;durationUnit&quot;:null,&quot;levelOverride&quot;:&quot;N&quot;,&quot;selectedGradingMode&quot;:{&quot;class&quot;:&quot;net.hedtech.banner.student.registration.RegistrationGradingMode&quot;,&quot;description&quot;:null,&quot;gradingMode&quot;:null},&quot;billHours&quot;:{&quot;class&quot;:&quot;net.hedtech.banner.student.registration.RegistrationCreditHour&quot;,&quot;creditHourHigh&quot;:null,&quot;creditHourIndicator&quot;:null,&quot;creditHourList&quot;:null,&quot;creditHourLow&quot;:null},&quot;level&quot;:&quot;UG&quot;,&quot;removeIndicator&quot;:null,&quot;errorLink&quot;:null,&quot;recordStatus&quot;:&quot;N&quot;,&quot;dataOrigin&quot;:&quot;Banner&quot;,&quot;courseReferenceNumber&quot;:&quot;21019&quot;,&quot;permitOverrideUpdate&quot;:null,&quot;attemptedHours&quot;:0,&quot;originalVoiceResponseStatusType&quot;:null,&quot;gradingMode&quot;:&quot;S&quot;,&quot;pidm&quot;:111163,&quot;selectedAction&quot;:null,&quot;completionDate&quot;:&quot;05/15/2099&quot;,&quot;message&quot;:null,&quot;courseRegistrationStatus&quot;:&quot;RW&quot;,&quot;subjectDescription&quot;:&quot;Art&quot;,&quot;studentAttributeOverride&quot;:&quot;N&quot;,&quot;approvalOverride&quot;:&quot;N&quot;,&quot;classOverride&quot;:&quot;N&quot;,&quot;campusOverride&quot;:&quot;N&quot;,&quot;overrideDurationIndicator&quot;:false,&quot;billHourInitial&quot;:3,&quot;courseContinuingEducationIndicator&quot;:&quot;N&quot;,&quot;registrationOverrides&quot;:[],&quot;specialApproval&quot;:null,&quot;addDate&quot;:&quot;01/29/2020&quot;,&quot;preqOverride&quot;:&quot;N&quot;,&quot;majorOverride&quot;:&quot;N&quot;,&quot;approvalReceivedIndicatorHold&quot;:null,&quot;repeatOverride&quot;:&quot;N&quot;,&quot;tuitionWaiverIndicator&quot;:&quot;N&quot;,&quot;selectedLevel&quot;:{&quot;class&quot;:&quot;net.hedtech.banner.student.registration.RegistrationLevel&quot;,&quot;description&quot;:null,&quot;level&quot;:null},&quot;courseRegistrationStatusDescription&quot;:&quot;**Web Registered**&quot;,&quot;programOverride&quot;:&quot;N&quot;,&quot;scheduleDescription&quot;:&quot;Lecture&quot;,&quot;creditHour&quot;:3,&quot;timeStatusHours&quot;:0,&quot;scheduleType&quot;:&quot;L&quot;,&quot;creditHourInitial&quot;:3,&quot;departmentOverride&quot;:&quot;N&quot;,&quot;grade&quot;:null,&quot;approvalReceivedIndicator&quot;:null,&quot;registrationActions&quot;:[{&quot;class&quot;:&quot;net.hedtech.banner.student.registration.RegistrationAction&quot;,&quot;courseRegistrationStatus&quot;:&quot;RW&quot;,&quot;description&quot;:&quot;**Web Registered**&quot;,&quot;registrationStatusDate&quot;:null,&quot;remove&quot;:false,&quot;subActions&quot;:null,&quot;voiceType&quot;:&quot;R&quot;},{&quot;class&quot;:&quot;net.hedtech.banner.student.registration.RegistrationAction&quot;,&quot;courseRegistrationStatus&quot;:&quot;internal-remove&quot;,&quot;description&quot;:&quot;Remove&quot;,&quot;registrationStatusDate&quot;:null,&quot;remove&quot;:true,&quot;subActions&quot;:null,&quot;voiceType&quot;:null}],&quot;structuredRegistrationHeaderSequence&quot;:null,&quot;capcOverride&quot;:&quot;N&quot;,&quot;courseTitle&quot;:&quot;Art History I: Before 1150 AD&quot;,&quot;addAuthorizationCrnStatus&quot;:&quot;INCOMPLETE&quot;,&quot;gradeComment&quot;:null,&quot;block&quot;:null,&quot;selectedCreditHour&quot;:null,&quot;messageType&quot;:null,&quot;reservedKey&quot;:null,&quot;voiceResponseStatusType&quot;:&quot;R&quot;,&quot;levelDescription&quot;:&quot;Undergraduate&quot;,&quot;errorFlag&quot;:null,&quot;registrationToDate&quot;:null,&quot;collegeOverride&quot;:&quot;N&quot;,&quot;partOfTerm&quot;:&quot;1&quot;,&quot;cohortOverride&quot;:&quot;N&quot;,&quot;lastModified&quot;:&quot;01/29/2020&quot;,&quot;gradeDate&quot;:null,&quot;subject&quot;:&quot;ART&quot;,&quot;selectedBillHour&quot;:null,&quot;term&quot;:&quot;201120&quot;,&quot;registrationStatusDate&quot;:&quot;01/29/2020&quot;,&quot;courseNumber&quot;:&quot;${courseNumber1}&quot;,&quot;numberOfUnits&quot;:null,&quot;studyPathKeySequence&quot;:null,&quot;crnErrors&quot;:[],&quot;blockPermitOverride&quot;:null,&quot;studyPathName&quot;:null,&quot;statusIndicator&quot;:&quot;P&quot;,&quot;sessionId&quot;:null,&quot;registrationLevels&quot;:[{&quot;class&quot;:&quot;net.hedtech.banner.student.registration.RegistrationLevel&quot;,&quot;description&quot;:&quot;Credit&quot;,&quot;level&quot;:&quot;CR&quot;},{&quot;class&quot;:&quot;net.hedtech.banner.student.registration.RegistrationLevel&quot;,&quot;description&quot;:&quot;Undergraduate&quot;,&quot;level&quot;:&quot;UG&quot;}],&quot;billHour&quot;:3,&quot;registrationFromDate&quot;:null,&quot;duplicateOverride&quot;:&quot;N&quot;,&quot;blockRuleSequenceNumber&quot;:null,&quot;structuredRegistrationDetailSequence&quot;:null,&quot;lastModifiedBy&quot;:&quot;1110076&quot;,&quot;waitOverride&quot;:&quot;N&quot;,&quot;submitResultIndicator&quot;:null,&quot;degreeOverride&quot;:&quot;N&quot;,&quot;campus&quot;:&quot;M&quot;,&quot;selectedOverride&quot;:null,&quot;corqOverride&quot;:&quot;N&quot;,&quot;registrationAuthorizationActiveCode&quot;:&quot;N&quot;,&quot;linkOverride&quot;:&quot;N&quot;,&quot;timeOverride&quot;:&quot;N&quot;,&quot;sectionCourseTitle&quot;:&quot;Art History I&quot;,&quot;registrationGradingModes&quot;:[{&quot;class&quot;:&quot;net.hedtech.banner.student.registration.RegistrationGradingMode&quot;,&quot;description&quot;:&quot;Standard Letter&quot;,&quot;gradingMode&quot;:&quot;S&quot;}],&quot;authorizationCode&quot;:null,&quot;originalCourseRegistrationStatus&quot;:null,&quot;addAuthorizationCrnMessage&quot;:null,&quot;registrationStudyPaths&quot;:[],&quot;rpthOverride&quot;:&quot;N&quot;},&quot;recordStatus&quot;:&quot;Q&quot;,&quot;registrationActions&quot;:[{&quot;class&quot;:&quot;net.hedtech.banner.student.registration.RegistrationAction&quot;,&quot;courseRegistrationStatus&quot;:null,&quot;description&quot;:&quot;None&quot;,&quot;registrationStatusDate&quot;:null,&quot;remove&quot;:false,&quot;subActions&quot;:null,&quot;voiceType&quot;:null},{&quot;class&quot;:&quot;net.hedtech.banner.student.registration.RegistrationAction&quot;,&quot;courseRegistrationStatus&quot;:&quot;DW&quot;,&quot;description&quot;:&quot;Web Drop&quot;,&quot;registrationStatusDate&quot;:null,&quot;remove&quot;:true,&quot;subActions&quot;:null,&quot;voiceType&quot;:&quot;D&quot;}],&quot;registrationAuthorizationActiveCode&quot;:null,&quot;registrationFromDate&quot;:null,&quot;registrationGradingModes&quot;:[{&quot;class&quot;:&quot;net.hedtech.banner.student.registration.RegistrationGradingMode&quot;,&quot;description&quot;:&quot;Standard Letter&quot;,&quot;gradingMode&quot;:&quot;S&quot;}],&quot;registrationLevels&quot;:[{&quot;class&quot;:&quot;net.hedtech.banner.student.registration.RegistrationLevel&quot;,&quot;description&quot;:&quot;Credit&quot;,&quot;level&quot;:&quot;CR&quot;},{&quot;class&quot;:&quot;net.hedtech.banner.student.registration.RegistrationLevel&quot;,&quot;description&quot;:&quot;Undergraduate&quot;,&quot;level&quot;:&quot;UG&quot;}],&quot;registrationOverrides&quot;:[],&quot;registrationStatusDate&quot;:&quot;01/29/2020&quot;,&quot;registrationStudyPaths&quot;:[],&quot;registrationToDate&quot;:null,&quot;removeIndicator&quot;:null,&quot;repeatOverride&quot;:&quot;N&quot;,&quot;reservedKey&quot;:null,&quot;rpthOverride&quot;:&quot;N&quot;,&quot;scheduleDescription&quot;:&quot;Lecture&quot;,&quot;scheduleType&quot;:&quot;L&quot;,&quot;sectionCourseTitle&quot;:&quot;Art History I&quot;,&quot;selectedAction&quot;:&quot;DW&quot;,&quot;selectedBillHour&quot;:null,&quot;selectedCreditHour&quot;:null,&quot;selectedGradingMode&quot;:{&quot;class&quot;:&quot;net.hedtech.banner.student.registration.RegistrationGradingMode&quot;,&quot;description&quot;:null,&quot;gradingMode&quot;:null},&quot;selectedLevel&quot;:{&quot;class&quot;:&quot;net.hedtech.banner.student.registration.RegistrationLevel&quot;,&quot;description&quot;:null,&quot;level&quot;:null},&quot;selectedOverride&quot;:null,&quot;selectedStartEndDate&quot;:null,&quot;selectedStudyPath&quot;:{&quot;class&quot;:&quot;net.hedtech.banner.student.registration.RegistrationStudyPath&quot;,&quot;description&quot;:null,&quot;keySequenceNumber&quot;:null},&quot;sequenceNumber&quot;:&quot;4&quot;,&quot;sessionId&quot;:null,&quot;specialApproval&quot;:null,&quot;startDate&quot;:&quot;01/05/2011&quot;,&quot;statusDescription&quot;:&quot;Registered&quot;,&quot;statusIndicator&quot;:&quot;R&quot;,&quot;structuredRegistrationDetailSequence&quot;:null,&quot;structuredRegistrationHeaderSequence&quot;:null,&quot;studentAttributeOverride&quot;:&quot;N&quot;,&quot;studyPathKeySequence&quot;:null,&quot;studyPathName&quot;:null,&quot;subject&quot;:&quot;ART&quot;,&quot;subjectDescription&quot;:&quot;Art&quot;,&quot;submitResultIndicator&quot;:&quot;S&quot;,&quot;term&quot;:&quot;201120&quot;,&quot;testOverride&quot;:&quot;N&quot;,&quot;timeOverride&quot;:&quot;N&quot;,&quot;timeStatusHours&quot;:0,&quot;tuitionWaiverIndicator&quot;:&quot;N&quot;,&quot;version&quot;:1,&quot;voiceResponseStatusType&quot;:&quot;R&quot;,&quot;waitOverride&quot;:&quot;N&quot;,&quot;waivHour&quot;:3}],&quot;destroy&quot;:[],&quot;uniqueSessionId&quot;:&quot;p2j2i1580274736820&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">perf-pxesa07-elb-1845329837.us-east-1.elb.amazonaws.com</stringProp>
            <stringProp name="HTTPSampler.port">8100</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/StudentRegistrationSsb/ssb/classRegistration/submitRegistration/batch</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="X-Synchronizer-Token" elementType="Header">
                  <stringProp name="Header.name">X-Synchronizer-Token</stringProp>
                  <stringProp name="Header.value">ec56d697-3a8b-4e2b-9282-9a7697be8d36</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://perf-pxesa07-elb-1845329837.us-east-1.elb.amazonaws.com:8100/StudentRegistrationSsb/ssb/classRegistration/classRegistration</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://perf-pxesa07-elb-1845329837.us-east-1.elb.amazonaws.com:8100</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 6.3; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/79.0.3945.130 Safari/537.36</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/StudentRegistrationSsb/ssb/classRegistration/getRegistrationEvents-451" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="termFilter" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">termFilter</stringProp>
                  <stringProp name="Argument.value">null</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">perf-pxesa07-elb-1845329837.us-east-1.elb.amazonaws.com</stringProp>
            <stringProp name="HTTPSampler.port">8100</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/StudentRegistrationSsb/ssb/classRegistration/getRegistrationEvents</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="X-Synchronizer-Token" elementType="Header">
                  <stringProp name="Header.name">X-Synchronizer-Token</stringProp>
                  <stringProp name="Header.value">ec56d697-3a8b-4e2b-9282-9a7697be8d36</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://perf-pxesa07-elb-1845329837.us-east-1.elb.amazonaws.com:8100/StudentRegistrationSsb/ssb/classRegistration/classRegistration</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 6.3; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/79.0.3945.130 Safari/537.36</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="R03_Add_Drop_T16_Clear_Drop" enabled="false">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/StudentRegistrationSsb/ssb/classRegistration/submitRegistration/batch-452" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;create&quot;:[],&quot;update&quot;:[],&quot;destroy&quot;:[],&quot;uniqueSessionId&quot;:&quot;p2j2i1580274736820&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">perf-pxesa07-elb-1845329837.us-east-1.elb.amazonaws.com</stringProp>
            <stringProp name="HTTPSampler.port">8100</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/StudentRegistrationSsb/ssb/classRegistration/submitRegistration/batch</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="X-Synchronizer-Token" elementType="Header">
                  <stringProp name="Header.name">X-Synchronizer-Token</stringProp>
                  <stringProp name="Header.value">ec56d697-3a8b-4e2b-9282-9a7697be8d36</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://perf-pxesa07-elb-1845329837.us-east-1.elb.amazonaws.com:8100/StudentRegistrationSsb/ssb/classRegistration/classRegistration</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://perf-pxesa07-elb-1845329837.us-east-1.elb.amazonaws.com:8100</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 6.3; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/79.0.3945.130 Safari/537.36</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/StudentRegistrationSsb/ssb/classRegistration/getRegistrationEvents-453" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="termFilter" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">termFilter</stringProp>
                  <stringProp name="Argument.value">null</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">perf-pxesa07-elb-1845329837.us-east-1.elb.amazonaws.com</stringProp>
            <stringProp name="HTTPSampler.port">8100</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/StudentRegistrationSsb/ssb/classRegistration/getRegistrationEvents</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="X-Synchronizer-Token" elementType="Header">
                  <stringProp name="Header.name">X-Synchronizer-Token</stringProp>
                  <stringProp name="Header.value">ec56d697-3a8b-4e2b-9282-9a7697be8d36</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://perf-pxesa07-elb-1845329837.us-east-1.elb.amazonaws.com:8100/StudentRegistrationSsb/ssb/classRegistration/classRegistration</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 6.3; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/79.0.3945.130 Safari/537.36</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="R03_Add_Drop_T17_Logout" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/StudentRegistrationSsb/ssb/classRegistration/saml/logout-455" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">perf-pxesa07-elb-1845329837.us-east-1.elb.amazonaws.com</stringProp>
            <stringProp name="HTTPSampler.port">8100</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/StudentRegistrationSsb/ssb/classRegistration/saml/logout</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">navigate</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://perf-pxesa07-elb-1845329837.us-east-1.elb.amazonaws.com:8100/StudentRegistrationSsb/ssb/classRegistration/classRegistration</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-User" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-User</stringProp>
                  <stringProp name="Header.value">?1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 6.3; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/79.0.3945.130 Safari/537.36</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/StudentRegistrationSsb/-464" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">perf-pxesa07-elb-1845329837.us-east-1.elb.amazonaws.com</stringProp>
            <stringProp name="HTTPSampler.port">8100</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/StudentRegistrationSsb/</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">navigate</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://perf-pxesa07-elb-1845329837.us-east-1.elb.amazonaws.com:8100/StudentRegistrationSsb/ssb/classRegistration/saml/logout</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-User" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-User</stringProp>
                  <stringProp name="Header.value">?1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 6.3; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/79.0.3945.130 Safari/537.36</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/StudentRegistrationSsb/ssb/registration-465" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">perf-pxesa07-elb-1845329837.us-east-1.elb.amazonaws.com</stringProp>
            <stringProp name="HTTPSampler.port">8100</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/StudentRegistrationSsb/ssb/registration</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">navigate</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://perf-pxesa07-elb-1845329837.us-east-1.elb.amazonaws.com:8100/StudentRegistrationSsb/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 6.3; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/79.0.3945.130 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/StudentRegistrationSsb/ssb/selfServiceMenu/data-485" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">perf-pxesa07-elb-1845329837.us-east-1.elb.amazonaws.com</stringProp>
            <stringProp name="HTTPSampler.port">8100</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/StudentRegistrationSsb/ssb/selfServiceMenu/data</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://perf-pxesa07-elb-1845329837.us-east-1.elb.amazonaws.com:8100/StudentRegistrationSsb/ssb/registration</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 6.3; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/79.0.3945.130 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/StudentRegistrationSsb/ssb/menu-492" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">type</stringProp>
                  <stringProp name="Argument.value">Personal</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">perf-pxesa07-elb-1845329837.us-east-1.elb.amazonaws.com</stringProp>
            <stringProp name="HTTPSampler.port">8100</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/StudentRegistrationSsb/ssb/menu</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://perf-pxesa07-elb-1845329837.us-east-1.elb.amazonaws.com:8100/StudentRegistrationSsb/ssb/registration</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 6.3; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/79.0.3945.130 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Debug Sampler" enabled="true">
          <boolProp name="displayJMeterProperties">false</boolProp>
          <boolProp name="displayJMeterVariables">true</boolProp>
          <boolProp name="displaySystemProperties">false</boolProp>
        </DebugSampler>
        <hashTree/>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename">D:\reg_sample\Results\R03_Add_Drop\R03_Add_Drop.jtl</stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="StatVisualizer" testclass="ResultCollector" testname="Aggregate Report" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename">D:\reg_sample\Results\R03_Add_Drop\R03_Add_Drop.jtl</stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename">D:\reg_sample\Results\R03_Add_Drop\R03_Add_Drop.jtl</stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="SimpleDataWriter" testclass="ResultCollector" testname="Simple Data Writer" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>true</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>true</responseData>
              <samplerData>true</samplerData>
              <xml>true</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>true</responseHeaders>
              <requestHeaders>true</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <fileName>true</fileName>
              <hostname>true</hostname>
              <threadCounts>true</threadCounts>
              <sampleCount>true</sampleCount>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename">D:\reg_sample\Results\R03_Add_Drop\R03_Add_Drop.jtl</stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename">D:\reg_sample\Results\R03_Add_Drop\R03_Add_Drop.jtl</stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
      <ProxyControl guiclass="ProxyControlGui" testclass="ProxyControl" testname="HTTP(S) Test Script Recorder" enabled="true">
        <stringProp name="ProxyControlGui.port">8888</stringProp>
        <collectionProp name="ProxyControlGui.exclude_list">
          <stringProp name="-839624032">(?i).*\.(bmp|css|js|gif|ico|jpe?g|png|swf|woff|woff2|ttf|svg)</stringProp>
        </collectionProp>
        <collectionProp name="ProxyControlGui.include_list"/>
        <boolProp name="ProxyControlGui.capture_http_headers">true</boolProp>
        <intProp name="ProxyControlGui.grouping_mode">0</intProp>
        <boolProp name="ProxyControlGui.add_assertion">false</boolProp>
        <stringProp name="ProxyControlGui.sampler_type_name"></stringProp>
        <boolProp name="ProxyControlGui.sampler_redirect_automatically">false</boolProp>
        <boolProp name="ProxyControlGui.sampler_follow_redirects">true</boolProp>
        <boolProp name="ProxyControlGui.use_keepalive">true</boolProp>
        <boolProp name="ProxyControlGui.sampler_download_images">false</boolProp>
        <intProp name="ProxyControlGui.proxy_http_sampler_naming_mode">0</intProp>
        <stringProp name="ProxyControlGui.default_encoding"></stringProp>
        <stringProp name="ProxyControlGui.proxy_prefix_http_sampler_name"></stringProp>
        <stringProp name="ProxyControlGui.proxy_pause_http_sampler"></stringProp>
        <boolProp name="ProxyControlGui.notify_child_sl_filtered">false</boolProp>
        <boolProp name="ProxyControlGui.regex_match">false</boolProp>
        <stringProp name="ProxyControlGui.content_type_include"></stringProp>
        <stringProp name="ProxyControlGui.content_type_exclude"></stringProp>
      </ProxyControl>
      <hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
